{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FileService {\n  readFile(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        if (reader.result === null) {\n          reject('Reading result is null.');\n        } else {\n          resolve(reader.result);\n        }\n      };\n      reader.onerror = error => reject(error);\n    });\n  }\n  static #_ = this.ɵfac = function FileService_Factory(t) {\n    return new (t || FileService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FileService,\n    factory: FileService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { FileService };","map":{"version":3,"names":["FileService","readFile","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\shared\\services\\file.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  readFile(file: File): Promise<string | ArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        if (reader.result === null) {\n          reject('Reading result is null.');\n        } else {\n          resolve(reader.result);\n        }\n      };\n      reader.onerror = error => reject(error);\n    });\n  }\n}\n"],"mappings":";AAEA,MAGaA,WAAW;EACtBC,QAAQA,CAACC,IAAU;IACjB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,aAAa,CAACN,IAAI,CAAC;MAC1BI,MAAM,CAACG,MAAM,GAAG,MAAK;QACnB,IAAIH,MAAM,CAACI,MAAM,KAAK,IAAI,EAAE;UAC1BL,MAAM,CAAC,yBAAyB,CAAC;SAClC,MAAM;UACLD,OAAO,CAACE,MAAM,CAACI,MAAM,CAAC;;MAE1B,CAAC;MACDJ,MAAM,CAACK,OAAO,GAAGC,KAAK,IAAIP,MAAM,CAACO,KAAK,CAAC;IACzC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAdUb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}