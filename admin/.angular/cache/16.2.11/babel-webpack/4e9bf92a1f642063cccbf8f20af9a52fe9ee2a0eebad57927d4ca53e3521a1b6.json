{"ast":null,"code":"import { GLOBAL } from '../config/GLOBAL';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass InitialConfigService {\n  constructor(_http, _router) {\n    this._http = _http;\n    this._router = _router;\n    this.url = GLOBAL.url;\n  }\n  InitialCheck() {\n    return this._http.get(`${this.url}InitialCheck`);\n  }\n  InitialCheck() {\n    return this.http.get(`${this.url}/InitialCheck`).pipe(map(response => response.data.setupRequired), catchError(error => {\n      // Manejo de errores\n      console.error('Error en InitialCheck:', error);\n      return of(false); // O maneja el error de la forma que consideres apropiada\n    }));\n  }\n\n  createMasterAdmin(data) {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n  static #_ = this.ɵfac = function InitialConfigService_Factory(t) {\n    return new (t || InitialConfigService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InitialConfigService,\n    factory: InitialConfigService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { InitialConfigService };","map":{"version":3,"names":["GLOBAL","InitialConfigService","constructor","_http","_router","url","InitialCheck","get","http","pipe","map","response","data","setupRequired","catchError","error","console","of","createMasterAdmin","post","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\initial-config.service.ts"],"sourcesContent":["//initial-config.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GLOBAL } from '../config/GLOBAL';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitialConfigService {\n\n  private url: string = GLOBAL.url;\n  constructor(private _http: HttpClient, private _router: Router) { }\n\n  InitialCheck(): Observable<any> {\n    return this._http.get<any>(`${this.url}InitialCheck`);\n  }\n\n  InitialCheck(): Observable<boolean> {\n    return this.http.get<{ status: string, message: string, data: { setupRequired: boolean } }>(`${this.url}/InitialCheck`)\n      .pipe(\n        map(response => response.data.setupRequired),\n        catchError(error => {\n          // Manejo de errores\n          console.error('Error en InitialCheck:', error);\n          return of(false); // O maneja el error de la forma que consideres apropiada\n        })\n      );\n  }\n\n  createMasterAdmin(data: any): Observable<any> {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n\n}\n"],"mappings":"AAIA,SAASA,MAAM,QAAQ,kBAAkB;;;;AAIzC,MAGaC,oBAAoB;EAG/BC,YAAoBC,KAAiB,EAAUC,OAAe;IAA1C,KAAAD,KAAK,GAALA,KAAK;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAD9C,KAAAC,GAAG,GAAWL,MAAM,CAACK,GAAG;EACkC;EAElEC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAM,GAAG,IAAI,CAACF,GAAG,cAAc,CAAC;EACvD;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACE,IAAI,CAACD,GAAG,CAAwE,GAAG,IAAI,CAACF,GAAG,eAAe,CAAC,CACpHI,IAAI,CACHC,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAACC,aAAa,CAAC,EAC5CC,UAAU,CAACC,KAAK,IAAG;MACjB;MACAC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAOE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACH;EACL;;EAEAC,iBAAiBA,CAACN,IAAS;IACzB,OAAO,IAAI,CAACT,KAAK,CAACgB,IAAI,CAAC,GAAG,IAAI,CAACd,GAAG,mBAAmB,EAAEO,IAAI,CAAC;EAC9D;EAAC,QAAAQ,CAAA,G;qBAvBUnB,oBAAoB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB1B,oBAAoB;IAAA2B,OAAA,EAApB3B,oBAAoB,CAAA4B,IAAA;IAAAC,UAAA,EAFnB;EAAM;;SAEP7B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}