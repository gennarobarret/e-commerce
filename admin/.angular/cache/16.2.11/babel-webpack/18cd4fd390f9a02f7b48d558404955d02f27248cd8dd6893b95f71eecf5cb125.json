{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/initial-config.service\";\nclass ActivationComponent {\n  constructor(_route, _initialConfigService) {\n    this._route = _route;\n    this._initialConfigService = _initialConfigService;\n  }\n  ngOnInit() {\n    this.token = this._route.snapshot.paramMap.get('token');\n  }\n  activateAccount() {\n    this.yourService.activateAccount(this.token).subscribe({\n      next: response => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: error => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ActivationComponent_Factory(t) {\n    return new (t || ActivationComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InitialConfigService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActivationComponent,\n    selectors: [[\"app-activation\"]],\n    decls: 7,\n    vars: 0,\n    consts: [[1, \"activation-container\"], [3, \"click\"]],\n    template: function ActivationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Activaci\\u00F3n de Cuenta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Por favor, haz clic en el bot\\u00F3n de abajo para activar tu cuenta.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ActivationComponent_Template_button_click_5_listener() {\n          return ctx.activateAccount();\n        });\n        i0.ɵɵtext(6, \"Activar Cuenta\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ActivationComponent };","map":{"version":3,"names":["ActivationComponent","constructor","_route","_initialConfigService","ngOnInit","token","snapshot","paramMap","get","activateAccount","yourService","subscribe","next","response","error","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","InitialConfigService","_2","selectors","decls","vars","consts","template","ActivationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ActivationComponent_Template_button_click_5_listener"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n\nexport class ActivationComponent implements OnInit {\n  token!: string;\n\n  constructor(private _route: ActivatedRoute,\n    private _initialConfigService: InitialConfigService) { }\n\n  ngOnInit() {\n    this.token = this._route.snapshot.paramMap.get('token');\n  }\n\n  activateAccount() {\n    this.yourService.activateAccount(this.token).subscribe({\n      next: (response) => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: (error) => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n\n}\n","<div class=\"activation-container\">\n    <h1>Activación de Cuenta</h1>\n    <p>Por favor, haz clic en el botón de abajo para activar tu cuenta.</p>\n    <button (click)=\"activateAccount()\">Activar Cuenta</button>\n</div>"],"mappings":";;;AAIA,MAMaA,mBAAmB;EAG9BC,YAAoBC,MAAsB,EAChCC,qBAA2C;IADjC,KAAAD,MAAM,GAANA,MAAM;IAChB,KAAAC,qBAAqB,GAArBA,qBAAqB;EAA0B;EAEzDC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;EACzD;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACC,WAAW,CAACD,eAAe,CAAC,IAAI,CAACJ,KAAK,CAAC,CAACM,SAAS,CAAC;MACrDC,IAAI,EAAGC,QAAQ,IAAI;QACjB;MAAA,CACD;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf;MAAA;KAEH,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAnBUf,mBAAmB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBtB,mBAAmB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCb,EAAA,CAAAe,cAAA,aAAkC;QAC1Bf,EAAA,CAAAgB,MAAA,gCAAoB;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC7BjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,4EAAgE;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QACvEjB,EAAA,CAAAe,cAAA,gBAAoC;QAA5Bf,EAAA,CAAAkB,UAAA,mBAAAC,qDAAA;UAAA,OAASL,GAAA,CAAArB,eAAA,EAAiB;QAAA,EAAC;QAACO,EAAA,CAAAgB,MAAA,qBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;;;;SDOlDjC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}