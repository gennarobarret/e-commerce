{"ast":null,"code":"import { __decorate } from \"tslib\";\nlet RootGuard = class RootGuard {\n  constructor(initialConfigService, router) {\n    this.initialConfigService = initialConfigService;\n    this.router = router;\n  }\n  canActivate() {\n    const setupRequired = this.initialConfigService.needsInitialConfiguration();\n    if (setupRequired === null) {\n      // Si no se ha verificado aún, realiza la verificación y guarda el resultado\n      this.initialConfigService.InitialCheck().subscribe(response => {\n        if (response.setupRequired) {\n          this.router.navigate(['/initial-config']);\n        } else {\n          this.router.navigate(['/auth']);\n        }\n      });\n      return false; // Detiene la navegación hasta que la verificación se complete\n    } else if (setupRequired) {\n      this.router.navigate(['/initial-config']);\n      return false;\n    }\n    return true;\n  }\n};\nRootGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], RootGuard);\nexport { RootGuard };","map":{"version":3,"names":["RootGuard","constructor","initialConfigService","router","canActivate","setupRequired","needsInitialConfiguration","InitialCheck","subscribe","response","navigate","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\root-guard.guard.ts"],"sourcesContent":["@Injectable({\n  providedIn: 'root',\n})\nexport class RootGuard implements CanActivate {\n  constructor(\n    private initialConfigService: InitialConfigService,\n    private router: Router\n  ) { }\n\n  canActivate(): boolean {\n    const setupRequired = this.initialConfigService.needsInitialConfiguration();\n    if (setupRequired === null) {\n      // Si no se ha verificado aún, realiza la verificación y guarda el resultado\n      this.initialConfigService.InitialCheck().subscribe(response => {\n        if (response.setupRequired) {\n          this.router.navigate(['/initial-config']);\n        } else {\n          this.router.navigate(['/auth']);\n        }\n      });\n      return false; // Detiene la navegación hasta que la verificación se complete\n    } else if (setupRequired) {\n      this.router.navigate(['/initial-config']);\n      return false;\n    }\n    return true;\n  }\n}\n"],"mappings":";AAGA,IAAaA,SAAS,GAAtB,MAAaA,SAAS;EACpBC,YACUC,oBAA0C,EAC1CC,MAAc;IADd,KAAAD,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,WAAWA,CAAA;IACT,MAAMC,aAAa,GAAG,IAAI,CAACH,oBAAoB,CAACI,yBAAyB,EAAE;IAC3E,IAAID,aAAa,KAAK,IAAI,EAAE;MAC1B;MACA,IAAI,CAACH,oBAAoB,CAACK,YAAY,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;QAC5D,IAAIA,QAAQ,CAACJ,aAAa,EAAE;UAC1B,IAAI,CAACF,MAAM,CAACO,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;SAC1C,MAAM;UACL,IAAI,CAACP,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAEnC,CAAC,CAAC;MACF,OAAO,KAAK,CAAC,CAAC;KACf,MAAM,IAAIL,aAAa,EAAE;MACxB,IAAI,CAACF,MAAM,CAACO,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;MACzC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;CACD;AAxBYV,SAAS,GAAAW,UAAA,EAHrBC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACWb,SAAS,CAwBrB;SAxBYA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}