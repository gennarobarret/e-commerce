{"ast":null,"code":"import { __decorate } from \"tslib\";\n// activation.component.ts\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ActivationComponent = class ActivationComponent {\n  constructor(route, formBuilder, _initialConfigService // Suponiendo que tienes un servicio para autenticación\n  ) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this._initialConfigService = _initialConfigService;\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    // Agrega validaciones adicionales según sea necesario\n  }\n\n  onActivate() {\n    // if (this.activationForm.valid) {\n    //   this._initialConfigService.activateAccount(this.token, this.activationForm.value.password).subscribe(\n    //     response => {\n    //       // Maneja la respuesta\n    //     },\n    //     error => {\n    //       // Maneja los errores\n    //     }\n    //   );\n    // }\n  }\n};\nActivationComponent = __decorate([Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})], ActivationComponent);\nexport { ActivationComponent };","map":{"version":3,"names":["Component","Validators","ActivationComponent","constructor","route","formBuilder","_initialConfigService","activationForm","group","password","required","minLength","confirmPassword","ngOnInit","token","snapshot","paramMap","get","onActivate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activacion\\activacion.component.ts"],"sourcesContent":["// activation.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n  \nexport class ActivationComponent implements OnInit {\n  activationForm: FormGroup = this.formBuilder.group({\n    password: ['', [Validators.required, Validators.minLength(8)]],\n    confirmPassword: ['', [Validators.required]]\n  });\n  token: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private _initialConfigService: InitialConfigService // Suponiendo que tienes un servicio para autenticación\n  ) { }\n\n  ngOnInit(): void {\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    // Agrega validaciones adicionales según sea necesario\n  }\n\n  onActivate() {\n    // if (this.activationForm.valid) {\n    //   this._initialConfigService.activateAccount(this.token, this.activationForm.value.password).subscribe(\n    //     response => {\n    //       // Maneja la respuesta\n    //     },\n    //     error => {\n    //       // Maneja los errores\n    //     }\n    //   );\n    // }\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AASnE,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAO9BC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,qBAA2C,CAAC;EAAA,E;IAF5C,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,qBAAqB,GAArBA,qBAAqB;IAT/B,KAAAC,cAAc,GAAc,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACjDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC;KAC5C,CAAC;EAOE;EAEJG,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACV,KAAK,CAACW,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;IACtD,IAAI,CAACV,cAAc,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC;KAC5C,CAAC;IACF;EACF;;EAEAQ,UAAUA,CAAA;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;CAEH;AAlCYhB,mBAAmB,GAAAiB,UAAA,EAN/BnB,SAAS,CAAC;EACToB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EAEWpB,mBAAmB,CAkC/B;SAlCYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}