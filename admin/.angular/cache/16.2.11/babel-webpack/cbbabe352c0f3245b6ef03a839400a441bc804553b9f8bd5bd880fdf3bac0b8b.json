{"ast":null,"code":"export {};\n// import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n//  import { Router } from '@angular/router';\n// import { AuthService } from 'src/app/core/auth/auth.service';\n// import { ToastService } from 'src/app/shared/services/toast.service';\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// import { catchError, finalize } from 'rxjs/operators';\n// import { throwError } from 'rxjs';\n// interface ApiResponse {\n//   data?: any;\n//   token?: string;\n// }\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css'],\n//   changeDetection: ChangeDetectionStrategy.OnPush\n// })\n// export class LoginComponent implements OnInit {\n//   public user: any = {};\n//   public token: any = '';\n//   public loginForm: FormGroup;\n//   constructor(\n//     private formBuilder: FormBuilder,\n//     private _authService: AuthService,\n//     private _router: Router,\n//     private _toastService: ToastService\n//   ) {\n//     this.token = this._authService.getToken();\n//     this.loginForm = this.formBuilder.group({\n//       email: ['', [Validators.required, Validators.email]],\n//       password: ['', Validators.required],\n//     });\n//   }\n//   ngOnInit(): void {\n//     if (this.token) {\n//       this._router.navigate(['']);\n//     }\n//   }\n//   login() {\n//     if (this.loginForm.valid) {\n//       const { email, password } = this.loginForm.value;\n//       const data = { email, password };\n//       this._authService.login_admin(data).subscribe(\n//         (response: ApiResponse) => {\n//           if (!response.data) {\n//             this._toastService.showToast('error', 'There was an error during login');\n//           } else {\n//             this.handleSuccessfulLogin(response);\n//           }\n//         },\n//         (error) => {\n//           this._toastService.showToast('error', 'There was an error during login');\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       this._toastService.showToast('error', 'Invalid form data');\n//     }\n//   }\n//   private handleSuccessfulLogin(response: ApiResponse) {\n//     this.user = response.data;\n//     localStorage.setItem('token', response.token || '');\n//     this._router.navigate(['/']);\n//   }\n// }\n// import { Component } from '@angular/core';\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css']\n// })\n// export class LoginComponent {\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { LoginCredentials\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush // Estrategia de detección de cambios\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.authService.getToken()) {\n      this.router.navigate(['']);\n    }\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      this.authService.login_admin(this.loginForm.value).subscribe(\n        () => {\n          // El manejo del inicio de sesión exitoso se hace en AuthService\n        },\n        error => {\n          this.toastService.showToast('error', 'There was an error during login');\n          console.error(error);\n        }\n      );\n    } else {\n      this.toastService.showToast('error', 'Invalid form data');\n    }\n  }\n}\n\n\n// import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n//  import { Router } from '@angular/router';\n// import { AuthService } from 'src/app/core/auth/auth.service';\n// import { ToastService } from 'src/app/shared/services/toast.service';\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// import { catchError, finalize } from 'rxjs/operators';\n// import { throwError } from 'rxjs';\n\n\n// interface ApiResponse {\n//   data?: any;\n//   token?: string;\n// }\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css'],\n//   changeDetection: ChangeDetectionStrategy.OnPush\n// })\n// export class LoginComponent implements OnInit {\n//   public user: any = {};\n//   public token: any = '';\n//   public loginForm: FormGroup;\n\n//   constructor(\n//     private formBuilder: FormBuilder,\n//     private _authService: AuthService,\n//     private _router: Router,\n//     private _toastService: ToastService\n//   ) {\n//     this.token = this._authService.getToken();\n//     this.loginForm = this.formBuilder.group({\n//       email: ['', [Validators.required, Validators.email]],\n//       password: ['', Validators.required],\n//     });\n//   }\n\n//   ngOnInit(): void {\n//     if (this.token) {\n//       this._router.navigate(['']);\n//     }\n//   }\n\n//   login() {\n//     if (this.loginForm.valid) {\n//       const { email, password } = this.loginForm.value;\n//       const data = { email, password };\n//       this._authService.login_admin(data).subscribe(\n//         (response: ApiResponse) => {\n//           if (!response.data) {\n//             this._toastService.showToast('error', 'There was an error during login');\n//           } else {\n//             this.handleSuccessfulLogin(response);\n//           }\n//         },\n//         (error) => {\n//           this._toastService.showToast('error', 'There was an error during login');\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       this._toastService.showToast('error', 'Invalid form data');\n//     }\n//   }\n\n//   private handleSuccessfulLogin(response: ApiResponse) {\n//     this.user = response.data;\n//     localStorage.setItem('token', response.token || '');\n//     this._router.navigate(['/']);\n//   }\n\n// }\n\n// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css']\n// })\n// export class LoginComponent {\n\n\n// }\n"],"mappings":";AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}