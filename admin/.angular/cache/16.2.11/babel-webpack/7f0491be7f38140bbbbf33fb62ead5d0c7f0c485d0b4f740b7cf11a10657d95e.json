{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/initial-config.service\";\nimport * as i2 from \"@angular/router\";\nclass RootGuard {\n  constructor(initialConfigService, router) {\n    this.initialConfigService = initialConfigService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.initialConfigService.InitialCheck()) {\n      this.router.navigate(['/initial-config']);\n      return false;\n    }\n    return true;\n  }\n  static #_ = this.ɵfac = function RootGuard_Factory(t) {\n    return new (t || RootGuard)(i0.ɵɵinject(i1.InitialConfigService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RootGuard,\n    factory: RootGuard.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { RootGuard };","map":{"version":3,"names":["RootGuard","constructor","initialConfigService","router","canActivate","InitialCheck","navigate","_","i0","ɵɵinject","i1","InitialConfigService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\root-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { InitialConfigService } from '../services/initial-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RootGuard implements CanActivate {\n  constructor(\n    private initialConfigService: InitialConfigService,\n    private router: Router\n  ) { }\n\n  canActivate(): boolean {\n    if (this.initialConfigService.InitialCheck()) {\n      this.router.navigate(['/initial-config']);\n      return false;\n    }\n    return true;\n  }\n}\n"],"mappings":";;;AAIA,MAGaA,SAAS;EACpBC,YACUC,oBAA0C,EAC1CC,MAAc;IADd,KAAAD,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,oBAAoB,CAACG,YAAY,EAAE,EAAE;MAC5C,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;MACzC,OAAO,KAAK;;IAEd,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBAZUP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATd,SAAS;IAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;IAAAC,UAAA,EAFR;EAAM;;SAEPjB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}