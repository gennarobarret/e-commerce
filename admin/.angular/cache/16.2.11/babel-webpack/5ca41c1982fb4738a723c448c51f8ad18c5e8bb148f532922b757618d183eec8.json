{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass UIBootstrapService {\n  constructor() {}\n  activateFeatherIcons() {\n    if (typeof feather !== 'undefined') {\n      feather.replace();\n    }\n  }\n  enableTooltipsGlobally() {\n    const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    tooltipTriggerList.forEach(tooltipTriggerEl => {\n      new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n  }\n  enablePopoversGlobally() {\n    const popoverTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"popover\"]'));\n    popoverTriggerList.forEach(popoverTriggerEl => {\n      new bootstrap.Popover(popoverTriggerEl);\n    });\n  }\n  activateScrollspyForStickyNav() {\n    const stickyNav = document.body.querySelector('#stickyNav');\n    if (stickyNav) {\n      new bootstrap.ScrollSpy(document.body, {\n        target: '#stickyNav',\n        offset: 82\n      });\n    }\n  }\n  toggleSideNavigation() {\n    const sidebarToggle = document.body.querySelector('#sidebarToggle');\n    if (sidebarToggle) {\n      if (localStorage.getItem('sb|sidebar-toggle') === 'true') {\n        document.body.classList.toggle('sidenav-toggled');\n      }\n      sidebarToggle.addEventListener('click', event => {\n        event.preventDefault();\n        document.body.classList.toggle('sidenav-toggled');\n        localStorage.setItem('sb|sidebar-toggle', document.body.classList.contains('sidenav-toggled').toString());\n      });\n    }\n  }\n  closeSideNavigationOnWidthChange() {\n    const sidenavContent = document.body.querySelector('#layoutSidenav_content');\n    if (sidenavContent) {\n      sidenavContent.addEventListener('click', event => {\n        const BOOTSTRAP_LG_WIDTH = 992;\n        if (window.innerWidth < BOOTSTRAP_LG_WIDTH && document.body.classList.contains(\"sidenav-toggled\")) {\n          document.body.classList.toggle(\"sidenav-toggled\");\n        }\n      });\n    }\n  }\n  addActiveStateToSidebarNavLinks() {\n    const matchResult = window.location.pathname.match(/\\/([\\w-]+\\.html)$/);\n    const activatedPath = matchResult ? matchResult[1] : 'index.html';\n    const targetAnchors = Array.from(document.querySelectorAll(`[href=\"${activatedPath}\"].nav-link`));\n    targetAnchors.forEach(targetAnchor => {\n      let parentNode = targetAnchor.parentNode;\n      while (parentNode !== null && parentNode !== document.documentElement) {\n        if (parentNode.classList.contains('collapse')) {\n          parentNode.classList.add('show');\n          const parentNavLink = document.body.querySelector(`[data-bs-target=\"#${parentNode.id}\"]`);\n          if (parentNavLink) {\n            parentNavLink.classList.remove('collapsed');\n            parentNavLink.classList.add('active');\n          }\n        }\n        parentNode = parentNode.parentNode;\n      }\n      targetAnchor.classList.add('active');\n    });\n  }\n  static #_ = this.ɵfac = function UIBootstrapService_Factory(t) {\n    return new (t || UIBootstrapService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UIBootstrapService,\n    factory: UIBootstrapService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { UIBootstrapService };","map":{"version":3,"names":["UIBootstrapService","constructor","activateFeatherIcons","feather","replace","enableTooltipsGlobally","tooltipTriggerList","Array","from","document","querySelectorAll","forEach","tooltipTriggerEl","bootstrap","Tooltip","enablePopoversGlobally","popoverTriggerList","popoverTriggerEl","Popover","activateScrollspyForStickyNav","stickyNav","body","querySelector","ScrollSpy","target","offset","toggleSideNavigation","sidebarToggle","localStorage","getItem","classList","toggle","addEventListener","event","preventDefault","setItem","contains","toString","closeSideNavigationOnWidthChange","sidenavContent","BOOTSTRAP_LG_WIDTH","window","innerWidth","addActiveStateToSidebarNavLinks","matchResult","location","pathname","match","activatedPath","targetAnchors","targetAnchor","parentNode","documentElement","add","parentNavLink","id","remove","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\uibootstrap.service.ts"],"sourcesContent":["import { Injectable, HostListener } from '@angular/core';\n\ndeclare var feather: any;\ndeclare var bootstrap:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UIBootstrapService {\n\n  constructor() { }\n\n  activateFeatherIcons(): void {\n    if (typeof feather !== 'undefined') {\n      feather.replace();\n    }\n  }\n\n  enableTooltipsGlobally(): void {\n    const tooltipTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    tooltipTriggerList.forEach(tooltipTriggerEl => {\n      new bootstrap.Tooltip(tooltipTriggerEl);\n    });\n  }\n\n  enablePopoversGlobally(): void {\n    const popoverTriggerList = Array.from(document.querySelectorAll('[data-bs-toggle=\"popover\"]'));\n    popoverTriggerList.forEach(popoverTriggerEl => {\n      new bootstrap.Popover(popoverTriggerEl);\n    });\n  }\n\n  activateScrollspyForStickyNav(): void {\n    const stickyNav = document.body.querySelector('#stickyNav');\n    if (stickyNav) {\n      new bootstrap.ScrollSpy(document.body, {\n        target: '#stickyNav',\n        offset: 82,\n      });\n    }\n  }\n\n  toggleSideNavigation(): void {\n    const sidebarToggle = document.body.querySelector('#sidebarToggle');\n    if (sidebarToggle) {\n      if (localStorage.getItem('sb|sidebar-toggle') === 'true') {\n        document.body.classList.toggle('sidenav-toggled');\n      }\n      sidebarToggle.addEventListener('click', event => {\n        event.preventDefault();\n        document.body.classList.toggle('sidenav-toggled');\n        localStorage.setItem('sb|sidebar-toggle', document.body.classList.contains('sidenav-toggled').toString());\n      });\n    }\n  }\n\n  closeSideNavigationOnWidthChange(): void {\n    const sidenavContent = document.body.querySelector('#layoutSidenav_content');\n    if (sidenavContent) {\n      sidenavContent.addEventListener('click', event => {\n        const BOOTSTRAP_LG_WIDTH = 992;\n        if (window.innerWidth < BOOTSTRAP_LG_WIDTH && document.body.classList.contains(\"sidenav-toggled\")) {\n          document.body.classList.toggle(\"sidenav-toggled\");\n        }\n      });\n    }\n  }\n  addActiveStateToSidebarNavLinks(): void {\n    const matchResult = window.location.pathname.match(/\\/([\\w-]+\\.html)$/);\n    const activatedPath = matchResult ? matchResult[1] : 'index.html';\n  \n    const targetAnchors = Array.from(document.querySelectorAll(`[href=\"${activatedPath}\"].nav-link`));\n    targetAnchors.forEach(targetAnchor => {\n      let parentNode = targetAnchor.parentNode as HTMLElement;\n      while (parentNode !== null && parentNode !== document.documentElement) {\n        if (parentNode.classList.contains('collapse')) {\n          parentNode.classList.add('show');\n          const parentNavLink = document.body.querySelector(`[data-bs-target=\"#${parentNode.id}\"]`);\n          if (parentNavLink) {\n            parentNavLink.classList.remove('collapsed');\n            parentNavLink.classList.add('active');\n          }\n        }\n        parentNode = parentNode.parentNode as HTMLElement;\n      }\n      targetAnchor.classList.add('active');\n    });\n  } \n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}