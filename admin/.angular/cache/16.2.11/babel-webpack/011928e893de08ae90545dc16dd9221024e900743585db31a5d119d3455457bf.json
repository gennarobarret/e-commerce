{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nclass IsLoggedInGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  static #_ = this.ɵfac = function IsLoggedInGuard_Factory(t) {\n    return new (t || IsLoggedInGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IsLoggedInGuard,\n    factory: IsLoggedInGuard.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { IsLoggedInGuard };\nexport const isLoggedInGuard = (route, state) => {\n  return true;\n};","map":{"version":3,"names":["IsLoggedInGuard","constructor","authService","router","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn","isLoggedInGuard","route","state"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\auth\\guards\\is-logged-in.guard.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n\n// import {\n//   CanActivate,\n//   Router,\n// } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { AuthService } from '../auth.service';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class IsLoggedInGuard implements CanActivate {\n//   constructor(\n//     private _adminService: AuthService, \n//     private _router: Router\n//     ) {}\n\n//   canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n//     return this._adminService.check_admin_exists().pipe(\n//       map(response => {\n//         if (response.setupRequired) {\n//           this._router.navigate(['/register']);\n//           return false;\n//         } else {\n//           if (!this._adminService.isAuthenticated(['admin'])) {\n//           this._router.navigate(['/login']);\n//           return false;\n//           }\n//         }\n//         return true;\n//       })\n//     );\n//   }\n// }\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { CanMatch, Router, UrlTree, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsLoggedInGuard implements CanMatch {\n  constructor(\n    private authService: AuthService,\n    private router: Router\n    ) {}\n\n  // canMatch(route: Route): Observable<boolean | UrlTree> {\n  //   return this.authService.isLoggedIn$.pipe(\n  //     map((isLoggedIn) => isLoggedIn || this.router.createUrlTree(['auth/login']))\n  //   );\n  // }\n}\n\nimport { CanActivateFn } from '@angular/router';\n\nexport const isLoggedInGuard: CanActivateFn = (route, state) => {\n  return true;\n};\n"],"mappings":";;;AA8CA,MAGaA,eAAe;EAC1BC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACX;EAAC,QAAAC,CAAA,G;qBAJKJ,eAAe,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfX,eAAe;IAAAY,OAAA,EAAfZ,eAAe,CAAAa,IAAA;IAAAC,UAAA,EAFd;EAAM;;SAEPd,eAAe;AAe5B,OAAO,MAAMe,eAAe,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC7D,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}