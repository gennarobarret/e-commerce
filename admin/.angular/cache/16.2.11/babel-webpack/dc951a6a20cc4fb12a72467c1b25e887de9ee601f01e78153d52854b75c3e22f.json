{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  constructor(_adminService, _router) {\n    this._adminService = _adminService;\n    this._router = _router;\n  }\n  canActivate() {\n    return this._adminService.check_admin_exists().pipe(map(response => {\n      if (response.setupRequired) {\n        // Si no hay administrador, permitir acceso a la página de registro\n        this._router.navigate(['/register']);\n        return false;\n      } else {\n        // Si ya existe un administrador, redirigir al login\n        if (!this._adminService.isAuthenticated(['admin'])) {\n          this._router.navigate(['/login']);\n          return false;\n        }\n      }\n      return true;\n    }));\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthService };","map":{"version":3,"names":["map","AuthService","constructor","_adminService","_router","canActivate","check_admin_exists","pipe","response","setupRequired","navigate","isAuthenticated","_","i0","ɵɵinject","i1","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\auth\\guards\\is-logged-in.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService implements CanActivate {\n  constructor(\n    private _adminService: AuthService, \n    private _router: Router\n    ) {}\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this._adminService.check_admin_exists().pipe(\n      map(response => {\n        if (response.setupRequired) {\n          // Si no hay administrador, permitir acceso a la página de registro\n          this._router.navigate(['/register']);\n          return false;\n        } else {\n          // Si ya existe un administrador, redirigir al login\n          if (!this._adminService.isAuthenticated(['admin'])) {\n          this._router.navigate(['/login']);\n          return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n}\n\n\n\n\n// import { Injectable } from '@angular/core';\n// import { CanMatch, Router, UrlTree, Route } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { AuthService } from '../auth.service';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class IsLoggedInGuard implements CanMatch {\n//   constructor(\n//     private authService: AuthService,\n//     private router: Router\n//     ) {}\n\n//   canMatch(route: Route): Observable<boolean | UrlTree> {\n//     return this.authService.isLoggedIn$.pipe(\n//       map((isLoggedIn) => isLoggedIn || this.router.createUrlTree(['auth/login']))\n//     );\n//   }\n// }\n\n// import { CanActivateFn } from '@angular/router';\n\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\n"],"mappings":"AAMA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAGpC,MAGaC,WAAW;EACtBC,YACUC,aAA0B,EAC1BC,OAAe;IADf,KAAAD,aAAa,GAAbA,aAAa;IACb,KAAAC,OAAO,GAAPA,OAAO;EACZ;EAELC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,aAAa,CAACG,kBAAkB,EAAE,CAACC,IAAI,CACjDP,GAAG,CAACQ,QAAQ,IAAG;MACb,IAAIA,QAAQ,CAACC,aAAa,EAAE;QAC1B;QACA,IAAI,CAACL,OAAO,CAACM,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;QACpC,OAAO,KAAK;OACb,MAAM;QACL;QACA,IAAI,CAAC,IAAI,CAACP,aAAa,CAACQ,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;UACpD,IAAI,CAACP,OAAO,CAACM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;UACjC,OAAO,KAAK;;;MAGd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;EAAC,QAAAE,CAAA,G;qBAvBUX,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAd,WAAA,GAAAY,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}