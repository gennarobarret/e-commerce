{"ast":null,"code":"// import { CanActivateFn } from '@angular/router';\nexport function isLoggedInGuardFactory(authService, router) {\n  return (route, state) => {\n    const allowRoles = ['admin', 'user']; // Ajusta los roles según sea necesario\n    if (authService.isAuthenticated(allowRoles)) {\n      return true;\n    } else {\n      router.navigate(['/login']);\n      return false;\n    }\n  };\n}","map":{"version":3,"names":["isLoggedInGuardFactory","authService","router","route","state","allowRoles","isAuthenticated","navigate"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\is-logged-in.guard.ts"],"sourcesContent":["// import { CanActivateFn } from '@angular/router';\n\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\n\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\n\nexport function isLoggedInGuardFactory(authService: AuthService, router: Router): CanActivateFn {\n  return (route, state) => {\n    const allowRoles = ['admin', 'user']; // Ajusta los roles según sea necesario\n    if (authService.isAuthenticated(allowRoles)) {\n      return true;\n    } else {\n      router.navigate(['/login']);\n      return false;\n    }\n  };\n}\n"],"mappings":"AAAA;AASA,OAAM,SAAUA,sBAAsBA,CAACC,WAAwB,EAAEC,MAAc;EAC7E,OAAO,CAACC,KAAK,EAAEC,KAAK,KAAI;IACtB,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IACtC,IAAIJ,WAAW,CAACK,eAAe,CAACD,UAAU,CAAC,EAAE;MAC3C,OAAO,IAAI;KACZ,MAAM;MACLH,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC3B,OAAO,KAAK;;EAEhB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}