{"ast":null,"code":"// import { CanActivateFn } from '@angular/router';\nimport { __decorate } from \"tslib\";\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\nimport { Injectable } from '@angular/core';\nlet LayoutChildGuard = class LayoutChildGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    // Verifica si el usuario está autenticado o tiene los permisos necesarios para acceder a las rutas del LayoutModule\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      // Si el usuario no está autenticado, redirige a la página de inicio de sesión o a la página que desees.\n      return this.router.createUrlTree(['/auth/login']);\n    }\n  }\n};\nLayoutChildGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], LayoutChildGuard);\nexport { LayoutChildGuard };","map":{"version":3,"names":["Injectable","LayoutChildGuard","constructor","authService","router","canActivate","next","state","isAuthenticated","createUrlTree","__decorate","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\is-logged-in.guard.ts"],"sourcesContent":["// import { CanActivateFn } from '@angular/router';\n\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { AuthService } from '../auth.service'; // Asegúrate de que la ruta sea correcta\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutChildGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree {\n    // Verifica si el usuario está autenticado o tiene los permisos necesarios para acceder a las rutas del LayoutModule\n    if (this.authService.isAuthenticated()) {\n      return true;\n    } else {\n      // Si el usuario no está autenticado, redirige a la página de inicio de sesión o a la página que desees.\n      return this.router.createUrlTree(['/auth/login']);\n    }\n  }\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AAEA,SAASA,UAAU,QAAQ,eAAe;AAO1C,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAE3BC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACb;EAEHC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B;IACA,IAAI,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI;KACZ,MAAM;MACL;MACA,OAAO,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC;;EAErD;CACD;AAlBYR,gBAAgB,GAAAS,UAAA,EAH5BV,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,C,EACWV,gBAAgB,CAkB5B;SAlBYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}