{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nlet ProfileComponent = class ProfileComponent {\n  constructor(_formBuilder, _authService, _router, _toastService) {\n    this._formBuilder = _formBuilder;\n    this._authService = _authService;\n    this._router = _router;\n    this._toastService = _toastService;\n    this.user = {\n      data: {}\n    };\n    this.submitted = false;\n    this.updateForm = this._formBuilder.group({\n      inputUserName: ['', [Validators.required, Validators.minLength(12), Validators.maxLength(25), Validators.pattern(/^\\S*$/), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      inputFirstName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputLastName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputOrganizationName: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputEmailAddress: ['', [Validators.required, Validators.email]],\n      inputLocation: ['', [Validators.required]],\n      inputPhoneNumber: ['', [Validators.required]],\n      inputBirthday: ['', [Validators.required]],\n      inputRole: ['', [Validators.required]],\n      inputIdentification: ['', [Validators.required]],\n      inputAdditionalInfo: ['', [Validators.required]],\n      inputProfileImage: ['', [Validators.required]]\n    });\n  }\n  get f() {\n    return this.updateForm.controls;\n  }\n  ngOnInit() {\n    this.fetchUserData();\n  }\n  fetchUserData() {\n    this._authService.get_admin().subscribe(response => {\n      this.user = response;\n      console.log(\"🚀 ~ file: profile.component.ts:48 ~ ProfileComponent ~ fetchUserData ~ this.user:\", this.user);\n      if (response.data === undefined) {\n        this._router.navigate(['']);\n      } else {\n        const {\n          userName,\n          firstName,\n          lastName,\n          organizationName,\n          emailAddress,\n          location,\n          phoneNumber,\n          birthday,\n          role,\n          identification,\n          additionalInfo,\n          profileImage,\n          createdAt,\n          updatedAt\n        } = response.data;\n        this.updateForm.patchValue({\n          inputUserName: userName,\n          inputFirstName: firstName,\n          inputLastName: lastName,\n          inputOrganizationName: organizationName,\n          inputEmailAddress: emailAddress,\n          inputLocation: location,\n          inputPhoneNumber: phoneNumber,\n          inputBirthday: birthday,\n          inputRole: role,\n          inputIdentification: identification,\n          inputAdditionalInfo: additionalInfo,\n          inputProfileImage: profileImage,\n          inputCreatedAt: createdAt,\n          inputUpdatedAt: updatedAt\n        });\n      }\n    }, error => {\n      console.error(error);\n    });\n  }\n  update() {\n    this.submitted = true;\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"names":["Component","Validators","ProfileComponent","constructor","_formBuilder","_authService","_router","_toastService","user","data","submitted","updateForm","group","inputUserName","required","minLength","maxLength","pattern","inputFirstName","inputLastName","inputOrganizationName","inputEmailAddress","email","inputLocation","inputPhoneNumber","inputBirthday","inputRole","inputIdentification","inputAdditionalInfo","inputProfileImage","f","controls","ngOnInit","fetchUserData","get_admin","subscribe","response","console","log","undefined","navigate","userName","firstName","lastName","organizationName","emailAddress","location","phoneNumber","birthday","role","identification","additionalInfo","profileImage","createdAt","updatedAt","patchValue","inputCreatedAt","inputUpdatedAt","error","update","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\account-settings\\profile\\profile.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { GLOBAL } from 'src/app/core/config/GLOBAL';\nimport { FormBuilder, FormGroup, Validators, FormControl } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { ProfileData } from 'src/app/core/model/profile-data';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n  updateForm!: FormGroup;\n  public user: any = { data: {} };\n  submitted = false;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _router: Router,\n    private _toastService: ToastService\n  ) {\n    this.updateForm = this._formBuilder.group({\n      inputUserName: ['', [Validators.required, Validators.minLength(12), Validators.maxLength(25),  Validators.pattern(/^\\S*$/), Validators.pattern(/^[a-zA-Z0-9]*$/)]],\n      inputFirstName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputLastName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputOrganizationName: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputEmailAddress: ['', [Validators.required, Validators.email]],\n      inputLocation: ['', [Validators.required]],\n      inputPhoneNumber: ['', [Validators.required]],\n      inputBirthday: ['', [Validators.required]],\n      inputRole: ['', [Validators.required]],\n      inputIdentification: ['', [Validators.required]],\n      inputAdditionalInfo: ['', [Validators.required]],\n      inputProfileImage: ['', [Validators.required]],\n    });\n  }\n\n  get f() {\n    return this.updateForm.controls;\n  }\n\n\n  ngOnInit(): void {\n    this.fetchUserData();\n  }\n\n\n  fetchUserData() {\n    this._authService.get_admin().subscribe(\n      response => {\n        this.user = response;\n        console.log(\"🚀 ~ file: profile.component.ts:48 ~ ProfileComponent ~ fetchUserData ~ this.user:\", this.user)\n        if (response.data === undefined) {\n          this._router.navigate(['']);\n        } else {\n          const { userName, firstName, lastName, organizationName, emailAddress, location, phoneNumber, birthday, role, identification, additionalInfo, profileImage, createdAt, updatedAt } = response.data;\n          this.updateForm.patchValue({\n            inputUserName: userName,\n            inputFirstName: firstName,\n            inputLastName: lastName,\n            inputOrganizationName: organizationName,\n            inputEmailAddress: emailAddress,\n            inputLocation: location,\n            inputPhoneNumber: phoneNumber,\n            inputBirthday: birthday,\n            inputRole: role,\n            inputIdentification: identification,\n            inputAdditionalInfo: additionalInfo,\n            inputProfileImage: profileImage,\n            inputCreatedAt: createdAt,\n            inputUpdatedAt: updatedAt,\n          });\n\n        }\n\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n\n  update() {\n\n    this.submitted = true;\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}