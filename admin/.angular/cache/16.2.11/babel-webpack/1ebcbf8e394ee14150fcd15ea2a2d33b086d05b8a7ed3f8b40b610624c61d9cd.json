{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass AuthTokenInterceptor {\n  constructor(router) {\n    this.router = router;\n  }\n  intercept(request, next) {\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AuthTokenInterceptor_Factory(t) {\n    return new (t || AuthTokenInterceptor)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthTokenInterceptor,\n    factory: AuthTokenInterceptor.ɵfac\n  });\n}\nexport { AuthTokenInterceptor };","map":{"version":3,"names":["AuthTokenInterceptor","constructor","router","intercept","request","next","handle","_","i0","ɵɵinject","i1","Router","_2","factory","ɵfac"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\interceptors\\auth-token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request);\n  }\n}\n"],"mappings":";;AAaA,MACaA,oBAAoB;EAE/BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,OAAOA,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC;EAC7B;EAAC,QAAAG,CAAA,G;qBANUP,oBAAoB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBZ,oBAAoB;IAAAa,OAAA,EAApBb,oBAAoB,CAAAc;EAAA;;SAApBd,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}