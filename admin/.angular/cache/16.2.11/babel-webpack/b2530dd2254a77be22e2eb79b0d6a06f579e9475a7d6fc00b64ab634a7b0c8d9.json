{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ValidationService {\n  constructor() {}\n  mustMatch(controlName, matchingControlName) {\n    return group => {\n      const control = group.get(controlName);\n      const matchingControl = group.get(matchingControlName);\n      if (!control || !matchingControl) {\n        return null;\n      }\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n        return null;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({\n          mustMatch: true\n        });\n      } else {\n        matchingControl.setErrors(null);\n      }\n      return null;\n    };\n  }\n  static #_ = this.ɵfac = function ValidationService_Factory(t) {\n    return new (t || ValidationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidationService,\n    factory: ValidationService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ValidationService };","map":{"version":3,"names":["ValidationService","constructor","mustMatch","controlName","matchingControlName","group","control","get","matchingControl","errors","value","setErrors","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\validation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\n  \nexport class ValidationService {\n\n  constructor() { }\n\n  mustMatch(controlName: string, matchingControlName: string) {\n    return (group: AbstractControl) => {\n      const control = group.get(controlName);\n      const matchingControl = group.get(matchingControlName);\n\n      if (!control || !matchingControl) {\n        return null;\n      }\n\n      if (matchingControl.errors && !matchingControl.errors['mustMatch']) {\n        return null;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n\n      return null;\n    };\n  }\n\n}\n"],"mappings":";AAIA,MAIaA,iBAAiB;EAE5BC,YAAA,GAAgB;EAEhBC,SAASA,CAACC,WAAmB,EAAEC,mBAA2B;IACxD,OAAQC,KAAsB,IAAI;MAChC,MAAMC,OAAO,GAAGD,KAAK,CAACE,GAAG,CAACJ,WAAW,CAAC;MACtC,MAAMK,eAAe,GAAGH,KAAK,CAACE,GAAG,CAACH,mBAAmB,CAAC;MAEtD,IAAI,CAACE,OAAO,IAAI,CAACE,eAAe,EAAE;QAChC,OAAO,IAAI;;MAGb,IAAIA,eAAe,CAACC,MAAM,IAAI,CAACD,eAAe,CAACC,MAAM,CAAC,WAAW,CAAC,EAAE;QAClE,OAAO,IAAI;;MAGb,IAAIH,OAAO,CAACI,KAAK,KAAKF,eAAe,CAACE,KAAK,EAAE;QAC3CF,eAAe,CAACG,SAAS,CAAC;UAAET,SAAS,EAAE;QAAI,CAAE,CAAC;OAC/C,MAAM;QACLM,eAAe,CAACG,SAAS,CAAC,IAAI,CAAC;;MAGjC,OAAO,IAAI;IACb,CAAC;EACH;EAAC,QAAAC,CAAA,G;qBAzBUZ,iBAAiB;EAAA;EAAA,QAAAa,EAAA,G;WAAjBb,iBAAiB;IAAAc,OAAA,EAAjBd,iBAAiB,CAAAe,IAAA;IAAAC,UAAA,EAHhB;EAAM;;SAGPhB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}