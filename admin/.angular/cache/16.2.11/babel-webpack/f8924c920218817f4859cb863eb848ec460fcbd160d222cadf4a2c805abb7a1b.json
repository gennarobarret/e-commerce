{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass DateService {\n  constructor() {}\n  convertDateFormat(dateString) {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  static #_ = this.ɵfac = function DateService_Factory(t) {\n    return new (t || DateService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DateService,\n    factory: DateService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { DateService };","map":{"version":3,"names":["DateService","constructor","convertDateFormat","dateString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\shared\\services\\date.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor() { }\n\n  convertDateFormat(dateString: string): string {\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n\n\n\n\n}\n"],"mappings":";AAGA,MAGaA,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,iBAAiBA,CAACC,UAAkB;IAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,IAAI,GAAGF,IAAI,CAACG,WAAW,EAAE;IAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACL,IAAI,CAACM,QAAQ,EAAE,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1D,MAAMC,GAAG,GAAGH,MAAM,CAACL,IAAI,CAACS,OAAO,EAAE,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;EAClC;EAAC,QAAAE,CAAA,G;qBAVUd,WAAW;EAAA;EAAA,QAAAe,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}