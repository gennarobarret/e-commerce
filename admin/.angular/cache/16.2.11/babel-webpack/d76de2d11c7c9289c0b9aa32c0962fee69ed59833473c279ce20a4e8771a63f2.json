{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n// @Injectable()\n// export class AuthTokenInterceptor implements HttpInterceptor {\n//   constructor(private router: Router) {}\n//   intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n//     return next.handle(request).pipe(\n//       catchError((error: HttpErrorResponse) => {\n//         if (error.status === 401 || error.status === 403) {\n//           localStorage.removeItem('token');\n//           this.router.navigate(['/auth/login']);\n//         }\n//         return throwError(error);\n//       })\n//     );\n//   }\n// }\nlet AuthTokenInterceptor = class AuthTokenInterceptor {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  intercept(req, next) {\n    const token = this.authService.getToken();\n    let modifiedReq = req;\n    if (token) {\n      const headers = req.headers.set('Authorization', `Bearer ${token}`);\n      modifiedReq = req.clone({\n        headers\n      });\n    }\n    return next.handle(modifiedReq).pipe(catchError(error => {\n      if (error.status === 401 || error.status === 403) {\n        this.authService.logout();\n      }\n      return throwError(error);\n    }));\n  }\n};\nAuthTokenInterceptor = __decorate([Injectable()], AuthTokenInterceptor);\nexport { AuthTokenInterceptor };","map":{"version":3,"names":["Injectable","throwError","catchError","AuthTokenInterceptor","constructor","authService","router","intercept","req","next","token","getToken","modifiedReq","headers","set","clone","handle","pipe","error","status","logout","__decorate"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\interceptors\\auth-token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n// @Injectable()\n// export class AuthTokenInterceptor implements HttpInterceptor {\n\n//   constructor(private router: Router) {}\n\n//   intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n//     return next.handle(request).pipe(\n//       catchError((error: HttpErrorResponse) => {\n//         if (error.status === 401 || error.status === 403) {\n//           localStorage.removeItem('token');\n//           this.router.navigate(['/auth/login']);\n//         }\n//         return throwError(error);\n//       })\n//     );\n//   }\n// }\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getToken();\n    let modifiedReq = req;\n    \n    if (token) {\n      const headers = req.headers.set('Authorization', `Bearer ${token}`);\n      modifiedReq = req.clone({ headers });\n    }\n\n    return next.handle(modifiedReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401 || error.status === 403) {\n          this.authService.logout();\n        }\n        return throwError(error);\n      })\n    );\n  }\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQ1C,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;AAI3C;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAC/BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,IAAIC,WAAW,GAAGJ,GAAG;IAErB,IAAIE,KAAK,EAAE;MACT,MAAMG,OAAO,GAAGL,GAAG,CAACK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;MACnEE,WAAW,GAAGJ,GAAG,CAACO,KAAK,CAAC;QAAEF;MAAO,CAAE,CAAC;;IAGtC,OAAOJ,IAAI,CAACO,MAAM,CAACJ,WAAW,CAAC,CAACK,IAAI,CAClCf,UAAU,CAAEgB,KAAwB,IAAI;MACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,IAAID,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QAChD,IAAI,CAACd,WAAW,CAACe,MAAM,EAAE;;MAE3B,OAAOnB,UAAU,CAACiB,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;CACD;AArBYf,oBAAoB,GAAAkB,UAAA,EADhCrB,UAAU,EAAE,C,EACAG,oBAAoB,CAqBhC;SArBYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}