{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ToastService {\n  constructor() {}\n  showToast(type, message) {\n    let options = {\n      position: \"topRight\",\n      message: message\n    };\n    switch (type) {\n      case 'success':\n        iziToast.success({\n          ...options,\n          title: \"SUCCESS\",\n          titleColor: \"#1DC74C\",\n          color: \"#FFF\",\n          class: \"text-success\"\n        });\n        break;\n      case 'warning':\n        iziToast.warning({\n          ...options,\n          title: \"CAUTION\"\n        });\n        break;\n      case 'error':\n        iziToast.error({\n          ...options,\n          title: \"ERROR\"\n        });\n        break;\n      default:\n        throw new Error(`Unrecognized toast type: ${type}`);\n    }\n  }\n  static #_ = this.ɵfac = function ToastService_Factory(t) {\n    return new (t || ToastService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToastService,\n    factory: ToastService.ɵfac,\n    providedIn: 'root' // Esto asegura que el servicio sea un singleton\n  });\n}\n\nexport { ToastService };","map":{"version":3,"names":["ToastService","constructor","showToast","type","message","options","position","iziToast","success","title","titleColor","color","class","warning","error","Error","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\shared\\services\\toast.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\ndeclare let iziToast: any;\n\n\n@Injectable({\n  providedIn: 'root' // Esto asegura que el servicio sea un singleton\n})\n\n\nexport class ToastService {\n\n  constructor() { }\n\n  showToast(type: 'success' | 'warning' | 'error', message: string) {\n    let options = {\n      position: \"topRight\",\n      message: message\n    };\n\n    switch (type) {\n      case 'success':\n        iziToast.success({\n          ...options,\n          title: \"SUCCESS\",\n          titleColor: \"#1DC74C\",\n          color: \"#FFF\",\n          class: \"text-success\",\n        });\n        break;\n      case 'warning':\n        iziToast.warning({\n          ...options,\n          title: \"CAUTION\",\n        });\n        break;\n      case 'error':\n        iziToast.error({\n          ...options,\n          title: \"ERROR\",\n        });\n        break;\n      default:\n        throw new Error(`Unrecognized toast type: ${type}`);\n    }\n  }\n}\n"],"mappings":";AAIA,MAKaA,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,SAASA,CAACC,IAAqC,EAAEC,OAAe;IAC9D,IAAIC,OAAO,GAAG;MACZC,QAAQ,EAAE,UAAU;MACpBF,OAAO,EAAEA;KACV;IAED,QAAQD,IAAI;MACV,KAAK,SAAS;QACZI,QAAQ,CAACC,OAAO,CAAC;UACf,GAAGH,OAAO;UACVI,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE,SAAS;UACrBC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;SACR,CAAC;QACF;MACF,KAAK,SAAS;QACZL,QAAQ,CAACM,OAAO,CAAC;UACf,GAAGR,OAAO;UACVI,KAAK,EAAE;SACR,CAAC;QACF;MACF,KAAK,OAAO;QACVF,QAAQ,CAACO,KAAK,CAAC;UACb,GAAGT,OAAO;UACVI,KAAK,EAAE;SACR,CAAC;QACF;MACF;QACE,MAAM,IAAIM,KAAK,CAAC,4BAA4BZ,IAAI,EAAE,CAAC;;EAEzD;EAAC,QAAAa,CAAA,G;qBAnCUhB,YAAY;EAAA;EAAA,QAAAiB,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAJX,MAAM,CAAC;;;;SAIRpB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}