{"ast":null,"code":"import { GLOBAL } from '../config/GLOBAL';\nimport { catchError, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass InitialConfigService {\n  constructor(_http, _router) {\n    this._http = _http;\n    this._router = _router;\n    this.url = GLOBAL.url;\n  }\n  InitialCheck() {\n    return this._http.get(`${this.url}/InitialCheck`).pipe(map(response => response.data), catchError(error => {\n      console.error('Error en InitialCheck:', error);\n      return of({\n        setupRequired: false,\n        verificationRequired: false\n      });\n    }));\n  }\n  createMasterAdmin(data) {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n  activateAccount(token) {\n    const url = `${this.url}/activation/${token}`; // Modificado para usar GET con el token en la URL\n    return this._http.get(url).pipe(catchError(error => {\n      console.error('Error activating account:', error);\n      return of(null); // O maneja el error como prefieras\n    }));\n  }\n  static #_ = this.ɵfac = function InitialConfigService_Factory(t) {\n    return new (t || InitialConfigService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InitialConfigService,\n    factory: InitialConfigService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { InitialConfigService };","map":{"version":3,"names":["GLOBAL","catchError","map","of","InitialConfigService","constructor","_http","_router","url","InitialCheck","get","pipe","response","data","error","console","setupRequired","verificationRequired","createMasterAdmin","post","activateAccount","token","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\initial-config.service.ts"],"sourcesContent":["//initial-config.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GLOBAL } from '../config/GLOBAL';\nimport { Observable, catchError, map, of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitialConfigService {\n\n  private url: string = GLOBAL.url;\n  constructor(private _http: HttpClient, private _router: Router) { }\n\n  InitialCheck(): Observable<{ setupRequired: boolean, verificationRequired: boolean }> {\n    return this._http.get<{ status: string, message: string, data: { setupRequired: boolean, verificationRequired: boolean } }>(`${this.url}/InitialCheck`)\n      .pipe(\n        map(response => response.data),\n        catchError(error => {\n          console.error('Error en InitialCheck:', error);\n          return of({ setupRequired: false, verificationRequired: false });\n        })\n      );\n  }\n  createMasterAdmin(data: any): Observable<any> {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n\n  activateAccount(token: string): Observable<any> {\n    const url = `${this.url}/activation/${token}`; // Modificado para usar GET con el token en la URL\n    return this._http.get(url).pipe(\n      catchError(error => {\n        console.error('Error activating account:', error);\n        return of(null); // O maneja el error como prefieras\n      })\n    );\n  }\n\n\n}\n"],"mappings":"AAIA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAAqBC,UAAU,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;;AAGtD,MAGaC,oBAAoB;EAG/BC,YAAoBC,KAAiB,EAAUC,OAAe;IAA1C,KAAAD,KAAK,GAALA,KAAK;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAD9C,KAAAC,GAAG,GAAWR,MAAM,CAACQ,GAAG;EACkC;EAElEC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAuG,GAAG,IAAI,CAACF,GAAG,eAAe,CAAC,CACpJG,IAAI,CACHT,GAAG,CAACU,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,EAC9BZ,UAAU,CAACa,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAOX,EAAE,CAAC;QAAEa,aAAa,EAAE,KAAK;QAAEC,oBAAoB,EAAE;MAAK,CAAE,CAAC;IAClE,CAAC,CAAC,CACH;EACL;EACAC,iBAAiBA,CAACL,IAAS;IACzB,OAAO,IAAI,CAACP,KAAK,CAACa,IAAI,CAAC,GAAG,IAAI,CAACX,GAAG,mBAAmB,EAAEK,IAAI,CAAC;EAC9D;EAEAO,eAAeA,CAACC,KAAa;IAC3B,MAAMb,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,eAAea,KAAK,EAAE,CAAC,CAAC;IAC/C,OAAO,IAAI,CAACf,KAAK,CAACI,GAAG,CAACF,GAAG,CAAC,CAACG,IAAI,CAC7BV,UAAU,CAACa,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAOX,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACH;EACH;EAAC,QAAAmB,CAAA,G;qBA3BUlB,oBAAoB,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBzB,oBAAoB;IAAA0B,OAAA,EAApB1B,oBAAoB,CAAA2B,IAAA;IAAAC,UAAA,EAFnB;EAAM;;SAEP5B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}