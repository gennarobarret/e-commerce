{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/initial-config.service\";\nimport * as i4 from \"@angular/common\";\nfunction ActivationComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivationComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, ActivationComponent_div_11_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵtemplate(2, ActivationComponent_div_11_div_2_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"password\"].errors[\"minlength\"]);\n  }\n}\nfunction ActivationComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Confirm Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivationComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Passwords must match \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, ActivationComponent_div_17_div_1_Template, 2, 0, \"div\", 13);\n    i0.ɵɵtemplate(2, ActivationComponent_div_17_div_2_Template, 2, 0, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"confirmPassword\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"confirmPassword\"].errors[\"mustMatch\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass ActivationComponent {\n  constructor(route, router, formBuilder, _initialConfigService) {\n    this.route = route;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this._initialConfigService = _initialConfigService;\n  }\n  ngOnInit() {\n    // Inicializa el formulario con validadores\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    // Obtiene el token de la URL\n    this.route.params.subscribe(params => {\n      this.token = params['token'];\n      // Utiliza el token como sea necesario en tu lógica de activación.\n    });\n  }\n\n  onActivate() {\n    if (this.activationForm.valid) {\n      // Llama a tu servicio para activar la cuenta\n      this._initialConfigService.activateAccount(this.token, this.activationForm.value.password).subscribe(response => {\n        // Maneja la respuesta exitosa\n        // Redirige a una página de éxito o a donde sea necesario\n        this.router.navigate(['/activation-success']);\n      }, error => {\n        // Maneja los errores, por ejemplo, muestra un mensaje de error en la página\n        console.error('Error al activar la cuenta:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ActivationComponent_Factory(t) {\n    return new (t || ActivationComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.InitialConfigService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActivationComponent,\n    selectors: [[\"app-activation\"]],\n    decls: 18,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Nueva contrase\\u00F1a\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirmar contrase\\u00F1a\"], [\"type\", \"submit\"], [1, \"row\", \"gx-3\"], [1, \"col-md-6\"], [1, \"mb-3\"], [\"for\", \"inputPassword\", 1, \"small\", \"mb-1\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Enter password\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"inputConfirmPassword\", 1, \"small\", \"mb-1\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"id\", \"inputConfirmPassword\", \"placeholder\", \"Confirm password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function ActivationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ActivationComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onActivate();\n        });\n        i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2);\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Activar cuenta\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, ActivationComponent_div_11_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 11);\n        i0.ɵɵtemplate(17, ActivationComponent_div_17_Template, 3, 2, \"div\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.activationForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f[\"confirmPassword\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"confirmPassword\"].errors);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ActivationComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ActivationComponent_div_11_div_1_Template","ActivationComponent_div_11_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","errors","ActivationComponent_div_17_div_1_Template","ActivationComponent_div_17_div_2_Template","ctx_r1","ActivationComponent","constructor","route","router","formBuilder","_initialConfigService","ngOnInit","activationForm","group","password","required","minLength","confirmPassword","params","subscribe","token","onActivate","valid","activateAccount","value","response","navigate","error","console","_","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","FormBuilder","i3","InitialConfigService","_2","selectors","decls","vars","consts","template","ActivationComponent_Template","rf","ctx","ɵɵlistener","ActivationComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ActivationComponent_div_11_Template","ActivationComponent_div_17_Template","ɵɵpureFunction1","_c0","submitted"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n\nexport class ActivationComponent implements OnInit {\n  activationForm!: FormGroup; // Usa \"!\" para indicar que será inicializada en ngOnInit\n  token!: string; // Usa \"!\" para indicar que será inicializada en ngOnInit\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private _initialConfigService: InitialConfigService\n  ) { }\n\n  ngOnInit(): void {\n    // Inicializa el formulario con validadores\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n\n    // Obtiene el token de la URL\n    this.route.params.subscribe(params => {\n      this.token = params['token'];\n      // Utiliza el token como sea necesario en tu lógica de activación.\n    });\n  }\n\n  onActivate() {\n    if (this.activationForm.valid) {\n      // Llama a tu servicio para activar la cuenta\n      this._initialConfigService.activateAccount(this.token, this.activationForm.value.password).subscribe(\n        response => {\n          // Maneja la respuesta exitosa\n          // Redirige a una página de éxito o a donde sea necesario\n          this.router.navigate(['/activation-success']);\n        },\n        error => {\n          // Maneja los errores, por ejemplo, muestra un mensaje de error en la página\n          console.error('Error al activar la cuenta:', error);\n        }\n      );\n    }\n  }\n}\n","<form [formGroup]=\"activationForm\" (ngSubmit)=\"onActivate()\">\n    <input type=\"password\" formControlName=\"password\" placeholder=\"Nueva contraseña\">\n    <input type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirmar contraseña\">\n    <button type=\"submit\">Activar cuenta</button>\n</form>\n\n<div class=\"row gx-3\">\n    <div class=\"col-md-6\">\n        <!-- Form Group (password)-->\n        <div class=\"mb-3\">\n            <label class=\"small mb-1\" for=\"inputPassword\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"inputPassword\"\n                placeholder=\"Enter password\" [ngClass]=\"{\n                                                                            'is-invalid': submitted && f['password'].errors\n                                                                            }\" />\n            <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['password'].errors['required']\">\n                    Password is required\n                </div>\n                <div *ngIf=\"f['password'].errors['minlength']\">\n                    Password must be at least 6 characters\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n        <!-- Form Group (confirm password)-->\n        <div class=\"mb-3\">\n            <label class=\"small mb-1\" for=\"inputConfirmPassword\">Confirm\n                Password</label>\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" id=\"inputConfirmPassword\"\n                placeholder=\"Confirm password\" [ngClass]=\"{\n                                                                            'is-invalid':\n                                                                            submitted && f['confirmPassword'].errors\n                                                                            }\" />\n            <div *ngIf=\"submitted && f['confirmPassword'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['confirmPassword'].errors['required']\">\n                    Confirm Password is required\n                </div>\n                <div *ngIf=\"f['confirmPassword'].errors['mustMatch']\">\n                    Passwords must match\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}