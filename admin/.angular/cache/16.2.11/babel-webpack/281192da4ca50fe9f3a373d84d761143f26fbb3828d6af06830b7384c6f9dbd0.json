{"ast":null,"code":"import { GLOBAL } from '../config/GLOBAL';\nimport { catchError, map, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass InitialConfigService {\n  constructor(_http, _router) {\n    this._http = _http;\n    this._router = _router;\n    this.url = GLOBAL.url;\n  }\n  InitialCheck() {\n    return this._http.get(`${this.url}/InitialCheck`).pipe(map(response => response.data), catchError(error => {\n      console.error('Error en InitialCheck:', error);\n      return of({\n        setupRequired: false\n      });\n    }));\n  }\n  createMasterAdmin(data) {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n  // MÃ©todo para activar la cuenta\n  activateAccount(token, password) {\n    const url = `${this.url}/activateMasterAdmin`;\n    const body = {\n      token,\n      password\n    };\n    console.log(\"ðŸš€ ~ InitialConfigService ~ activateAccount ~ body:\", body);\n    return this._http.post(url, body);\n  }\n  static #_ = this.Éµfac = function InitialConfigService_Factory(t) {\n    return new (t || InitialConfigService)(i0.ÉµÉµinject(i1.HttpClient), i0.ÉµÉµinject(i2.Router));\n  };\n  static #_2 = this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n    token: InitialConfigService,\n    factory: InitialConfigService.Éµfac,\n    providedIn: 'root'\n  });\n}\nexport { InitialConfigService };","map":{"version":3,"names":["GLOBAL","catchError","map","of","InitialConfigService","constructor","_http","_router","url","InitialCheck","get","pipe","response","data","error","console","setupRequired","createMasterAdmin","post","activateAccount","token","password","body","log","_","i0","ÉµÉµinject","i1","HttpClient","i2","Router","_2","factory","Éµfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\initial-config.service.ts"],"sourcesContent":["//initial-config.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { GLOBAL } from '../config/GLOBAL';\nimport { Observable, catchError, map, of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitialConfigService {\n\n  private url: string = GLOBAL.url;\n  constructor(private _http: HttpClient, private _router: Router) { }\n\n  InitialCheck(): Observable<{ setupRequired: boolean }> {\n    return this._http.get<{ status: string, message: string, data: { setupRequired: boolean } }>(`${this.url}/InitialCheck`)\n      .pipe(\n        map(response => response.data),\n        catchError(error => {\n          console.error('Error en InitialCheck:', error);\n          return of({ setupRequired: false });\n        })\n      );\n  }\n\n  createMasterAdmin(data: any): Observable<any> {\n    return this._http.post(`${this.url}createMasterAdmin`, data);\n  }\n  // MÃ©todo para activar la cuenta\n  activateAccount(token: string, password: string): Observable<any> {\n    const url = `${this.url}/activateMasterAdmin`;\n    const body = { token, password };\n    console.log(\"ðŸš€ ~ InitialConfigService ~ activateAccount ~ body:\", body)\n    return this._http.post(url, body);\n  }\n\n\n}\n"],"mappings":"AAIA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAAqBC,UAAU,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;;;;AAGtD,MAGaC,oBAAoB;EAG/BC,YAAoBC,KAAiB,EAAUC,OAAe;IAA1C,KAAAD,KAAK,GAALA,KAAK;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAD9C,KAAAC,GAAG,GAAWR,MAAM,CAACQ,GAAG;EACkC;EAElEC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,KAAK,CAACI,GAAG,CAAwE,GAAG,IAAI,CAACF,GAAG,eAAe,CAAC,CACrHG,IAAI,CACHT,GAAG,CAACU,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,EAC9BZ,UAAU,CAACa,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,OAAOX,EAAE,CAAC;QAAEa,aAAa,EAAE;MAAK,CAAE,CAAC;IACrC,CAAC,CAAC,CACH;EACL;EAEAC,iBAAiBA,CAACJ,IAAS;IACzB,OAAO,IAAI,CAACP,KAAK,CAACY,IAAI,CAAC,GAAG,IAAI,CAACV,GAAG,mBAAmB,EAAEK,IAAI,CAAC;EAC9D;EACA;EACAM,eAAeA,CAACC,KAAa,EAAEC,QAAgB;IAC7C,MAAMb,GAAG,GAAG,GAAG,IAAI,CAACA,GAAG,sBAAsB;IAC7C,MAAMc,IAAI,GAAG;MAAEF,KAAK;MAAEC;IAAQ,CAAE;IAChCN,OAAO,CAACQ,GAAG,CAAC,qDAAqD,EAAED,IAAI,CAAC;IACxE,OAAO,IAAI,CAAChB,KAAK,CAACY,IAAI,CAACV,GAAG,EAAEc,IAAI,CAAC;EACnC;EAAC,QAAAE,CAAA,G;qBAzBUpB,oBAAoB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApB3B,oBAAoB;IAAA4B,OAAA,EAApB5B,oBAAoB,CAAA6B,IAAA;IAAAC,UAAA,EAFnB;EAAM;;SAEP9B,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}