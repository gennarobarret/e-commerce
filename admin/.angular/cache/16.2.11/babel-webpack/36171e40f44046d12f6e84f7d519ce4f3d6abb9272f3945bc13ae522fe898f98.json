{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nlet ActivationComponent = class ActivationComponent {\n  constructor(route, formBuilder, initialConfigService // Suponiendo que tienes un servicio para autenticación\n  ) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.initialConfigService = initialConfigService;\n  }\n  ngOnInit() {\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    // Agrega validaciones adicionales según sea necesario\n  }\n\n  onActivate() {\n    if (this.activationForm.valid) {\n      this.authService.activateAccount(this.token, this.activationForm.value.password).subscribe(response => {\n        // Maneja la respuesta\n      }, error => {\n        // Maneja los errores\n      });\n    }\n  }\n};\nActivationComponent = __decorate([Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})], ActivationComponent);\nexport { ActivationComponent };","map":{"version":3,"names":["Validators","ActivationComponent","constructor","route","formBuilder","initialConfigService","ngOnInit","token","snapshot","paramMap","get","activationForm","group","password","required","minLength","confirmPassword","onActivate","valid","authService","activateAccount","value","subscribe","response","error","__decorate","Component","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activacion\\activacion.component.ts"],"sourcesContent":["// activation.component.ts\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit {\n  activationForm: FormGroup;\n  token: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private initialConfigService: InitialConfigService // Suponiendo que tienes un servicio para autenticación\n  ) { }\n\n  ngOnInit(): void {\n    this.token = this.route.snapshot.paramMap.get('token');\n    this.activationForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    // Agrega validaciones adicionales según sea necesario\n  }\n\n  onActivate() {\n    if (this.activationForm.valid) {\n      this.authService.activateAccount(this.token, this.activationForm.value.password).subscribe(\n        response => {\n          // Maneja la respuesta\n        },\n        error => {\n          // Maneja los errores\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAI9BC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,oBAA0C,CAAC;EAAA,E;IAF3C,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,oBAAoB,GAApBA,oBAAoB;EAC1B;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;IACtD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC;MAC3CC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACc,QAAQ,CAAC;KAC5C,CAAC;IACF;EACF;;EAEAG,UAAUA,CAAA;IACR,IAAI,IAAI,CAACN,cAAc,CAACO,KAAK,EAAE;MAC7B,IAAI,CAACC,WAAW,CAACC,eAAe,CAAC,IAAI,CAACb,KAAK,EAAE,IAAI,CAACI,cAAc,CAACU,KAAK,CAACR,QAAQ,CAAC,CAACS,SAAS,CACxFC,QAAQ,IAAG;QACT;MAAA,CACD,EACDC,KAAK,IAAG;QACN;MAAA,CACD,CACF;;EAEL;CACD;AA/BYvB,mBAAmB,GAAAwB,UAAA,EAL/BC,SAAS,CAAC;EACTC,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACW5B,mBAAmB,CA+B/B;SA/BYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}