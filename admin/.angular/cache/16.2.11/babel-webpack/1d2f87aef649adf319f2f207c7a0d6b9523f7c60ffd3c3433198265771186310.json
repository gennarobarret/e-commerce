{"ast":null,"code":"import { __decorate } from \"tslib\";\nlet RootGuard = class RootGuard {\n  constructor(initialConfigService, router) {\n    this.initialConfigService = initialConfigService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.initialConfigService.InitialCheck().pipe(map(response => {\n      if (response.data.setupRequired) {\n        // Redirige a la configuración inicial solo si estamos en una ruta diferente\n        if (this.router.url !== '/initial-config') {\n          this.router.navigate(['/initial-config']);\n        }\n        return false;\n      }\n      // Si no se necesita configuración inicial, permite la navegación\n      return true;\n    }), catchError(() => {\n      // En caso de error, puedes decidir qué hacer, como redirigir al login o mostrar un mensaje\n      this.router.navigate(['/auth/login']);\n      return of(false);\n    }));\n  }\n};\nRootGuard = __decorate([Injectable({\n  providedIn: 'root'\n})], RootGuard);\nexport { RootGuard };","map":{"version":3,"names":["RootGuard","constructor","initialConfigService","router","canActivate","InitialCheck","pipe","map","response","data","setupRequired","url","navigate","catchError","of","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\root-guard.guard.ts"],"sourcesContent":["@Injectable({\n  providedIn: 'root',\n})\nexport class RootGuard implements CanActivate {\n  constructor(\n    private initialConfigService: InitialConfigService,\n    private router: Router\n  ) { }\n\n  canActivate(): Observable<boolean> {\n    return this.initialConfigService.InitialCheck().pipe(\n      map(response => {\n        if (response.data.setupRequired) {\n          // Redirige a la configuración inicial solo si estamos en una ruta diferente\n          if (this.router.url !== '/initial-config') {\n            this.router.navigate(['/initial-config']);\n          }\n          return false;\n        }\n        // Si no se necesita configuración inicial, permite la navegación\n        return true;\n      }),\n      catchError(() => {\n        // En caso de error, puedes decidir qué hacer, como redirigir al login o mostrar un mensaje\n        this.router.navigate(['/auth/login']);\n        return of(false);\n      })\n    );\n  }\n}\n"],"mappings":";AAGA,IAAaA,SAAS,GAAtB,MAAaA,SAAS;EACpBC,YACUC,oBAA0C,EAC1CC,MAAc;IADd,KAAAD,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,oBAAoB,CAACG,YAAY,EAAE,CAACC,IAAI,CAClDC,GAAG,CAACC,QAAQ,IAAG;MACb,IAAIA,QAAQ,CAACC,IAAI,CAACC,aAAa,EAAE;QAC/B;QACA,IAAI,IAAI,CAACP,MAAM,CAACQ,GAAG,KAAK,iBAAiB,EAAE;UACzC,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;QAE3C,OAAO,KAAK;;MAEd;MACA,OAAO,IAAI;IACb,CAAC,CAAC,EACFC,UAAU,CAAC,MAAK;MACd;MACA,IAAI,CAACV,MAAM,CAACS,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAOE,EAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;CACD;AA1BYd,SAAS,GAAAe,UAAA,EAHrBC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACWjB,SAAS,CA0BrB;SA1BYA,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}