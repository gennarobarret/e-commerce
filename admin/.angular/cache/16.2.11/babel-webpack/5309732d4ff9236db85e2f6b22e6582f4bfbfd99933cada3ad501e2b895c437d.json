{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ActivationComponent = class ActivationComponent {\n  constructor(route, pr) {\n    this.route = route;\n  }\n  ngOnInit() {\n    this.token = this.route.snapshot.paramMap.get('token');\n  }\n  activateAccount() {\n    this.yourService.activateAccount(this.token).subscribe({\n      next: response => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: error => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n};\nActivationComponent = __decorate([Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})], ActivationComponent);\nexport { ActivationComponent };","map":{"version":3,"names":["Component","ActivationComponent","constructor","route","pr","ngOnInit","token","snapshot","paramMap","get","activateAccount","yourService","subscribe","next","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n\nexport class ActivationComponent implements OnInit {\n  token: string;\n\n  constructor(private route: ActivatedRoute,\n  pr) { }\n\n  ngOnInit() {\n    this.token = this.route.snapshot.paramMap.get('token');\n  }\n\n  activateAccount() {\n    this.yourService.activateAccount(this.token).subscribe({\n      next: (response) => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: (error) => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAG9BC,YAAoBC,KAAqB,EACzCC,EAAE;IADkB,KAAAD,KAAK,GAALA,KAAK;EACnB;EAENE,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;EACxD;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACC,WAAW,CAACD,eAAe,CAAC,IAAI,CAACJ,KAAK,CAAC,CAACM,SAAS,CAAC;MACrDC,IAAI,EAAGC,QAAQ,IAAI;QACjB;MAAA,CACD;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf;MAAA;KAEH,CAAC;EACJ;CAED;AArBYd,mBAAmB,GAAAe,UAAA,EAN/BhB,SAAS,CAAC;EACTiB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EAEWlB,mBAAmB,CAqB/B;SArBYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}