{"ast":null,"code":"import { __decorate } from \"tslib\";\n// account-setup.component.ts\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AccountSetupComponent = class AccountSetupComponent {\n  constructor(_router, _formBuilder, _validationService, _renderer, _toastService, _geoInfoService, _sharedDataBetweenStepService) {\n    this._router = _router;\n    this._formBuilder = _formBuilder;\n    this._validationService = _validationService;\n    this._renderer = _renderer;\n    this._toastService = _toastService;\n    this._geoInfoService = _geoInfoService;\n    this._sharedDataBetweenStepService = _sharedDataBetweenStepService;\n    this.user = null;\n    this.countries = [];\n    this.states = [];\n    this.filteredStates = [];\n    this.load_data = false;\n    this.load_btn = false;\n    this.accountSetupForm = this._formBuilder.group({\n      inputUserName: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(20), Validators.pattern(\"^[a-zA-Z0-9]+$\")]],\n      inputFirstName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputLastName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputOrganizationName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(30), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      inputCountryAddress: [\"\", [Validators.required]],\n      inputStateAddress: [\"\", [Validators.required]],\n      inputPhoneNumber: [\"\", [Validators.required, Validators.pattern(\"[0-9]+\")]],\n      inputBirthday: [\"\", [Validators.required, this._validationService.validateDate.bind(this)]],\n      inputRole: [{\n        value: \"MasterAdministrator\",\n        disabled: true\n      }, [Validators.required]],\n      inputIdentification: [\"\", [Validators.required]],\n      inputAdditionalInfo: [\"\", [Validators.required, Validators.minLength(10), Validators.maxLength(50), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]]\n    });\n  }\n  ngOnInit() {\n    this.loadCountries();\n  }\n  loadCountries() {\n    this._geoInfoService.get_Countries().subscribe(data => {\n      this.countries = data.sort((a, b) => a.name.localeCompare(b.name));\n      this.loadStates();\n    }, error => {\n      console.error(\"Error loading countries\", error);\n    });\n  }\n  loadStates() {\n    this._geoInfoService.get_States().subscribe(data => {\n      this.states = data.sort((a, b) => a.province_name.localeCompare(b.province_name));\n    }, error => {\n      console.error(\"Error loading states\", error);\n    });\n  }\n  filterStatesByCountry(countryId) {\n    const numericCountryId = Number(countryId);\n    this.filteredStates = this.states.filter(state => state.country_id === numericCountryId);\n    const stateControl = this.accountSetupForm.get(\"inputState\");\n    if (stateControl) {\n      stateControl.setValue(null);\n    }\n  }\n  onCountryChange(event) {\n    const selectElement = event.target;\n    const countryId = selectElement.value;\n    this.filterStatesByCountry(countryId);\n    const stateControl = this.accountSetupForm.get('inputStateAddress');\n    if (stateControl) {\n      stateControl.setValue(\"\");\n    }\n  }\n  goToNextStep() {\n    const savedData = this._sharedDataBetweenStepService.getStepData('accountSetup');\n    if (savedData) {\n      this.accountSetupForm.patchValue(savedData);\n    }\n    this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n    this._router.navigate(['/initial-config/step2']);\n  }\n  goToPreviousStep() {\n    this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n    this._router.navigate(['/initial-config/step1']);\n  }\n};\nAccountSetupComponent = __decorate([Component({\n  selector: 'app-account-setup',\n  templateUrl: './account-setup.component.html',\n  styleUrls: ['./account-setup.component.css']\n})], AccountSetupComponent);\nexport { AccountSetupComponent };","map":{"version":3,"names":["Component","Validators","AccountSetupComponent","constructor","_router","_formBuilder","_validationService","_renderer","_toastService","_geoInfoService","_sharedDataBetweenStepService","user","countries","states","filteredStates","load_data","load_btn","accountSetupForm","group","inputUserName","required","minLength","maxLength","pattern","inputFirstName","inputLastName","inputOrganizationName","inputEmailAddress","email","inputCountryAddress","inputStateAddress","inputPhoneNumber","inputBirthday","validateDate","bind","inputRole","value","disabled","inputIdentification","inputAdditionalInfo","ngOnInit","loadCountries","get_Countries","subscribe","data","sort","a","b","name","localeCompare","loadStates","error","console","get_States","province_name","filterStatesByCountry","countryId","numericCountryId","Number","filter","state","country_id","stateControl","get","setValue","onCountryChange","event","selectElement","target","goToNextStep","savedData","getStepData","patchValue","setStepData","navigate","goToPreviousStep","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\account-setup\\account-setup.component.ts"],"sourcesContent":["// account-setup.component.ts\nimport { Component, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidationService } from 'src/app/core/services/validation.service';\nimport { SharedDataBetweenStepService } from 'src/app/core/services/shared-data-between-step.service';\nimport { GeoInfoService } from 'src/app/shared/services/geo-info.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { User } from 'src/app/core/models/user.interface';\nimport { Country } from 'src/app/core/models/country.model';\nimport { State } from 'src/app/core/models/state.model';\n\n\n@Component({\n  selector: 'app-account-setup',\n  templateUrl: './account-setup.component.html',\n  styleUrls: ['./account-setup.component.css']\n})\nexport class AccountSetupComponent {\n\n  accountSetupForm!: FormGroup;\n  user: User | null = null;\n  countries: Country[] = [];\n  states: State[] = [];\n  filteredStates: State[] = [];\n  load_data: boolean = false;\n  load_btn: boolean = false;\n\n\n\n  constructor(\n    private _router: Router,\n    private _formBuilder: FormBuilder,\n    private _validationService: ValidationService,\n    private _renderer: Renderer2,\n    private _toastService: ToastService,\n    private _geoInfoService: GeoInfoService,\n    private _sharedDataBetweenStepService: SharedDataBetweenStepService,\n  ) {\n    this.accountSetupForm = this._formBuilder.group({\n      inputUserName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(20),\n          Validators.pattern(\"^[a-zA-Z0-9]+$\")\n        ]\n      ],\n      inputFirstName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputLastName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputOrganizationName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(30),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      \n      inputCountryAddress: [\"\", [Validators.required]],\n      inputStateAddress: [\"\", [Validators.required]],\n      inputPhoneNumber: [\n        \"\",\n        [Validators.required, Validators.pattern(\"[0-9]+\")]\n      ],\n      inputBirthday: [\n        \"\",\n        [Validators.required, this._validationService.validateDate.bind(this)]\n      ],\n      inputRole: [{ value: \"MasterAdministrator\", disabled: true }, [Validators.required]],\n      inputIdentification: [\n        \"\",\n        [Validators.required]\n      ],\n      inputAdditionalInfo: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(50),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ]\n    });\n  }\n\n\n  ngOnInit(): void {\n    this.loadCountries();\n  }\n\n\n  private loadCountries() {\n    this._geoInfoService.get_Countries().subscribe(\n      data => {\n        this.countries = data.sort((a: Country, b: Country) =>\n          a.name.localeCompare(b.name)\n        );\n        this.loadStates();\n      },\n      error => {\n        console.error(\"Error loading countries\", error);\n      }\n    );\n  }\n\n  private loadStates() {\n    this._geoInfoService.get_States().subscribe(\n      data => {\n        this.states = data.sort((a: State, b: State) =>\n          a.province_name.localeCompare(b.province_name)\n        );\n      },\n      error => {\n        console.error(\"Error loading states\", error);\n      }\n    );\n  }\n\n  filterStatesByCountry(countryId: string | number) {\n    const numericCountryId = Number(countryId);\n    this.filteredStates = this.states.filter(\n      state => state.country_id === numericCountryId\n    );\n    const stateControl = this.accountSetupForm.get(\"inputState\");\n    if (stateControl) {\n      stateControl.setValue(null);\n    }\n  }\n\n  onCountryChange(event: Event) {\n    const selectElement = event.target as HTMLSelectElement;\n    const countryId = selectElement.value;\n    this.filterStatesByCountry(countryId);\n    const stateControl = this.accountSetupForm.get('inputStateAddress');\n    if (stateControl) {\n      stateControl.setValue(\"\");\n    }\n  }\n\n\n  goToNextStep() {\n    const savedData = this._sharedDataBetweenStepService.getStepData('accountSetup');\n    if (savedData) {\n      this.accountSetupForm.patchValue(savedData);\n    }\n    this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n    this._router.navigate(['/initial-config/step2']);\n  }\n  goToPreviousStep() {\n    this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n    this._router.navigate(['/initial-config/step1']);\n  }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}