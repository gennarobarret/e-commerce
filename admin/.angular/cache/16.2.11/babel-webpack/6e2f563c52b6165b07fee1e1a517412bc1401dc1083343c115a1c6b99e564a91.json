{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { isLoggedInGuardFactory } from './core/guards/is-logged-in.guard';\nimport { AuthService } from './core/auth/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'auth',\n  loadChildren: () => import('./modules/auth/auth.module').then(m => m.AuthModule)\n}, {\n  path: '',\n  loadChildren: () => import('./modules/layout/layout.module').then(m => m.LayoutModule),\n  canActivate: [isLoggedInGuardFactory] // Esto puede variar dependiendo de cómo manejas la inyección de dependencias\n}];\n\nclass AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: 'isLoggedInGuard',\n      useFactory: isLoggedInGuardFactory,\n      deps: [AuthService, Router]\n    }],\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","isLoggedInGuardFactory","AuthService","routes","path","loadChildren","then","m","AuthModule","LayoutModule","canActivate","AppRoutingModule","_","_2","_3","provide","useFactory","deps","Router","imports","forRoot","i1","exports"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { isLoggedInGuardFactory } from './core/guards/is-logged-in.guard';\nimport { AuthService } from './core/auth/auth.service';\n\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\n  },\n  {\n    path: '',\n    loadChildren: () =>\n      import('./modules/layout/layout.module').then((m) => m.LayoutModule),\n      canActivate: [isLoggedInGuardFactory], // Esto puede variar dependiendo de cómo manejas la inyección de dependencias\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: 'isLoggedInGuard',\n      useFactory: isLoggedInGuardFactory,\n      deps: [AuthService, Router],\n    },\n  ]\n})\nexport class AppRoutingModule {}\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,sBAAsB,QAAQ,kCAAkC;AACzE,SAASC,WAAW,QAAQ,0BAA0B;;;AAGtD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU;CAChE,EACD;EACEJ,IAAI,EAAE,EAAE;EACRC,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,YAAY,CAAC;EACpEC,WAAW,EAAE,CAACT,sBAAsB,CAAC,CAAE;CAC1C,CACF;;AAED,MAWaU,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;eARhB,CACT;MACEC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAEf,sBAAsB;MAClCgB,IAAI,EAAE,CAACf,WAAW,EAAEgB,MAAM;KAC3B,CACF;IAAAC,OAAA,GARSnB,YAAY,CAACoB,OAAO,CAACjB,MAAM,CAAC,EAC5BH,YAAY;EAAA;;SASXW,gBAAgB;;2EAAhBA,gBAAgB;IAAAQ,OAAA,GAAAE,EAAA,CAAArB,YAAA;IAAAsB,OAAA,GATjBtB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}