{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/shared/services/toast.service\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" First name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" First name must be at least one character long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" First name must be no more than 25 characters long. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Only letters, numbers, spaces, \\\"\\u00F1\\\" and \\\"\\u00F1\\\" are allowed. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, LoginComponent_div_16_span_1_Template, 2, 0, \"span\", 27);\n    i0.ɵɵtemplate(2, LoginComponent_div_16_span_2_Template, 2, 0, \"span\", 27);\n    i0.ɵɵtemplate(3, LoginComponent_div_16_span_3_Template, 2, 0, \"span\", 27);\n    i0.ɵɵtemplate(4, LoginComponent_div_16_span_4_Template, 2, 0, \"span\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.updateForm.get(\"inputFirstName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.updateForm.get(\"inputFirstName\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.updateForm.get(\"inputFirstName\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.updateForm.get(\"inputFirstName\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"UserName is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, LoginComponent_div_21_span_1_Template, 2, 0, \"span\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"userName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_26_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, LoginComponent_div_26_span_1_Template, 2, 0, \"span\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass LoginComponent {\n  constructor(formBuilder, authService, router, toastService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.toastService = toastService;\n    this.submitted = false;\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  ngOnInit() {\n    if (this.authService.getToken()) {\n      this.router.navigate(['']);\n    }\n  }\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      this.authService.login_admin(this.loginForm.value).subscribe(response => {}, error => {\n        let errorMessage = 'Invalid credentials';\n        if (error.error && error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.toastService.showToast('error', errorMessage);\n      });\n      this.handleSuccessfulLogin();\n    } else {\n      this.toastService.showToast('error', 'Missing form data');\n    }\n  }\n  handleSuccessfulLogin() {\n    this.authService.loginSuccessObservable.subscribe(success => {\n      if (success) {\n        this.toastService.showToast('success', 'Welcome ' + this.loginForm.value.userName);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 44,\n    vars: 13,\n    consts: [[\"id\", \"layoutAuthentication\"], [\"id\", \"layoutAuthentication_content\"], [1, \"container-xl\", \"px-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-5\"], [1, \"card\", \"shadow-lg\", \"border-0\", \"rounded-lg\", \"mt-5\"], [1, \"card-header\", \"justify-content-center\"], [1, \"fw-light\", \"my-4\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"userName\", 1, \"small\", \"mb-1\"], [\"id\", \"inputFirstName\", \"type\", \"text\", \"placeholder\", \"Enter your first name\", \"formControlName\", \"inputFirstName\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"userName\", \"id\", \"userName\", \"placeholder\", \"Enter your username\", \"required\", \"\", \"autocomplete\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputPassword\", 1, \"small\", \"mb-1\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"floatingPassword\", \"placeholder\", \"Password\", \"required\", \"\", \"autocomplete\", \"current-password\", 1, \"form-control\", \"appended-form-control\", 3, \"ngClass\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"mt-4\", \"mb-0\"], [\"href\", \"auth-password-basic.html\", 1, \"small\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\", \"btn-block\"], [\"id\", \"layoutAuthentication_footer\"], [1, \"footer-admin\", \"mt-auto\", \"footer-dark\"], [1, \"row\"], [1, \"col-md-6\", \"small\"], [1, \"col-md-6\", \"text-md-end\", \"small\"], [\"href\", \"#!\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"main\")(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h3\", 7);\n        i0.ɵɵtext(9, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12);\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 5, 4, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10)(18, \"label\", 11);\n        i0.ɵɵtext(19, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 14);\n        i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 10)(23, \"label\", 15);\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 16);\n        i0.ɵɵtemplate(26, LoginComponent_div_26_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 17)(28, \"a\", 18);\n        i0.ɵɵtext(29, \"Forgot Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 19);\n        i0.ɵɵtext(31, \"Login\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n        i0.ɵɵelementStart(32, \"div\", 20)(33, \"footer\", 21)(34, \"div\", 2)(35, \"div\", 22)(36, \"div\", 23);\n        i0.ɵɵtext(37, \"Copyright \\u00A9 Your Website 2021\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 24)(39, \"a\", 25);\n        i0.ɵɵtext(40, \"Privacy Policy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41, \" \\u00B7 \");\n        i0.ɵɵelementStart(42, \"a\", 25);\n        i0.ɵɵtext(43, \"Terms & Conditions\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_1_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_1_0.touched))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.updateForm.get(\"inputFirstName\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ((tmp_3_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_3_0.touched))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_4_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_4_0.touched)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_6_0.touched));\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n    changeDetection: 0\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_16_span_1_Template","LoginComponent_div_16_span_2_Template","LoginComponent_div_16_span_3_Template","LoginComponent_div_16_span_4_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","updateForm","get","errors","tmp_1_0","tmp_2_0","tmp_3_0","LoginComponent_div_21_span_1_Template","ctx_r1","loginForm","LoginComponent_div_26_span_1_Template","ctx_r2","LoginComponent","constructor","formBuilder","authService","router","toastService","submitted","group","userName","required","password","f","controls","ngOnInit","getToken","navigate","login","valid","login_admin","value","subscribe","response","error","errorMessage","message","showToast","handleSuccessfulLogin","loginSuccessObservable","success","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","ToastService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","ɵɵelement","LoginComponent_div_16_Template","LoginComponent_div_21_Template","LoginComponent_div_26_Template","ɵɵpureFunction1","_c0","invalid","dirty","touched","tmp_4_0","tmp_6_0"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\login\\login.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { LoginCredentials } from 'src/app/core/model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n    \n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n  \n  ngOnInit(): void {\n    if (this.authService.getToken()) {\n      this.router.navigate(['']);\n    }\n  }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      this.authService\n        .login_admin(this.loginForm.value as LoginCredentials)\n        .subscribe(\n          (response) => {\n          },\n          (error: HttpErrorResponse) => {\n            let errorMessage = 'Invalid credentials';\n            if (error.error && error.error.message) {\n              errorMessage = error.error.message;\n            }\n            this.toastService.showToast('error', errorMessage);\n          }\n        );\n        this.handleSuccessfulLogin();\n  \n    } else {\n      this.toastService.showToast('error', 'Missing form data');\n    }\n  }\n\n  private handleSuccessfulLogin(){\n    this.authService.loginSuccessObservable.subscribe((success: boolean) => {\n      if (success) {\n        this.toastService.showToast(\n          'success',\n          'Welcome ' + this.loginForm.value.userName\n        );\n      }\n    });\n  }\n\n\n\n}\n\n\n\n\n// import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n//  import { Router } from '@angular/router';\n// import { AuthService } from 'src/app/core/auth/auth.service';\n// import { ToastService } from 'src/app/shared/services/toast.service';\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// import { catchError, finalize } from 'rxjs/operators';\n// import { throwError } from 'rxjs';\n\n// interface ApiResponse {\n//   data?: any;\n//   token?: string;\n// }\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css'],\n//   changeDetection: ChangeDetectionStrategy.OnPush\n// })\n// export class LoginComponent implements OnInit {\n//   public user: any = {};\n//   public token: any = '';\n//   public loginForm: FormGroup;\n\n//   constructor(\n//     private formBuilder: FormBuilder,\n//     private _authService: AuthService,\n//     private _router: Router,\n//     private _toastService: ToastService\n//   ) {\n//     this.token = this._authService.getToken();\n//     this.loginForm = this.formBuilder.group({\n//       userName: ['', [Validators.required, Validators.userName]],\n//       password: ['', Validators.required],\n//     });\n//   }\n\n//   ngOnInit(): void {\n//     if (this.token) {\n//       this._router.navigate(['']);\n//     }\n//   }\n\n//   login() {\n//     if (this.loginForm.valid) {\n//       const { userName, password } = this.loginForm.value;\n//       const data = { userName, password };\n//       this._authService.login_admin(data).subscribe(\n//         (response: ApiResponse) => {\n//           if (!response.data) {\n//             this._toastService.showToast('error', 'There was an error during login');\n//           } else {\n//             this.handleSuccessfulLogin(response);\n//           }\n//         },\n//         (error) => {\n//           this._toastService.showToast('error', 'There was an error during login');\n//           console.error(error);\n//         }\n//       );\n//     } else {\n//       this._toastService.showToast('error', 'Invalid form data');\n//     }\n//   }\n\n//   private handleSuccessfulLogin(response: ApiResponse) {\n//     this.user = response.data;\n//     localStorage.setItem('token', response.token || '');\n//     this._router.navigate(['/']);\n//   }\n\n// }\n\n// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-login',\n//   templateUrl: './login.component.html',\n//   styleUrls: ['./login.component.css']\n// })\n// export class LoginComponent {\n\n// }\n","<!-- <h1>login works</h1> -->\n<div id=\"layoutAuthentication\">\n    <div id=\"layoutAuthentication_content\">\n\n        <main>\n            <div class=\"container-xl px-4\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-lg-5\">\n                        <!-- Basic login form-->\n                        <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                            <div class=\"card-header justify-content-center\">\n                                <h3 class=\"fw-light my-4\">Login</h3>\n                            </div>\n                            <div class=\"card-body\">\n                                <!-- Login form-->\n                                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                                    <!-- Form Group (userName)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"small mb-1\" for=\"userName\">UserName</label>\n                                        <input class=\"form-control\" id=\"inputFirstName\" type=\"text\"\n                                        placeholder=\"Enter your first name\" formControlName=\"inputFirstName\" \n                                        [ngClass]=\"{'is-invalid': updateForm.get('inputFirstName')?.invalid && (updateForm.get('inputFirstName')?.dirty || updateForm.get('inputFirstName')?.touched)}\" />\n                                        <div *ngIf=\"updateForm.get('inputFirstName')?.invalid && (updateForm.get('inputFirstName')?.dirty || updateForm.get('inputFirstName')?.touched)\" class=\"text-danger\">\n                                            <span *ngIf=\"updateForm.get('inputFirstName')?.errors?.['required']\">\n                                                First name is required.\n                                            </span>\n                                            <span *ngIf=\"updateForm.get('inputFirstName')?.errors?.['minlength']\">\n                                                First name must be at least one character long.\n                                            </span>\n                                            <span *ngIf=\"updateForm.get('inputFirstName')?.errors?.['maxlength']\">\n                                                First name must be no more than 25 characters long.\n                                            </span>\n                                            <span *ngIf=\"updateForm.get('inputFirstName')?.errors?.['pattern']\">\n                                                Only letters, numbers, spaces, \"ñ\" and \"ñ\" are allowed.\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"mb-3\">\n                                        <label class=\"small mb-1\" for=\"userName\">UserName</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"userName\"\n                                        id=\"userName\" placeholder=\"Enter your username\" required\n                                        autocomplete=\"username\" \n                                        [ngClass]=\"{'is-invalid': submitted && loginForm.get('userName')?.invalid && (loginForm.get('userName')?.dirty || loginForm.get('userName')?.touched)}\" />\n                                        <div *ngIf=\"submitted && loginForm.get('userName')?.invalid && (loginForm.get('userName')?.dirty || loginForm.get('userName')?.touched)\" class=\"text-danger\">\n                                            <span *ngIf=\"loginForm.get('userName')?.errors?.['required']\">UserName is required.</span>\n                                        </div>\n                                    </div>\n                                    <!-- Form Group (password)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"small mb-1\" for=\"inputPassword\">Password</label>\n                                        <input type=\"password\" class=\"form-control appended-form-control\"\n                                            formControlName=\"password\" id=\"floatingPassword\" placeholder=\"Password\"\n                                            required autocomplete=\"current-password\"  [ngClass]=\"{\n                                                'is-invalid': submitted && f['password'].errors\n                                                }\"  />\n                                        <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\"\n                                            class=\"text-danger\">\n                                            <span *ngIf=\"loginForm.get('password')?.errors?.['required']\">Password is\n                                                required.</span>\n                                        </div>\n                                    </div>\n\n                                    <!-- Form Group (login box)-->\n                                    <div class=\"d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                        <a class=\"small\" href=\"auth-password-basic.html\">Forgot Password?</a>\n                                        <!-- <a class=\"btn btn-primary\" href=\"dashboard-1.html\">Login</a> -->\n                                        <button type=\"submit\" class=\"btn btn-outline-secondary btn-block\">Login</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n\n    </div>\n    <div id=\"layoutAuthentication_footer\">\n        <footer class=\"footer-admin mt-auto footer-dark\">\n            <div class=\"container-xl px-4\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 small\">Copyright &copy; Your Website 2021</div>\n                    <div class=\"col-md-6 text-md-end small\">\n                        <a href=\"#!\">Privacy Policy</a>\n                        &middot;\n                        <a href=\"#!\">Terms &amp; Conditions</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n\n</div>"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICqBvBC,EAAA,CAAAC,cAAA,WAAqE;IACjED,EAAA,CAAAE,MAAA,gCACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACPH,EAAA,CAAAC,cAAA,WAAsE;IAClED,EAAA,CAAAE,MAAA,wDACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACPH,EAAA,CAAAC,cAAA,WAAsE;IAClED,EAAA,CAAAE,MAAA,4DACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACPH,EAAA,CAAAC,cAAA,WAAoE;IAChED,EAAA,CAAAE,MAAA,8EACJ;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAZXH,EAAA,CAAAC,cAAA,cAAqK;IACjKD,EAAA,CAAAI,UAAA,IAAAC,qCAAA,mBAEO;IACPL,EAAA,CAAAI,UAAA,IAAAE,qCAAA,mBAEO;IACPN,EAAA,CAAAI,UAAA,IAAAG,qCAAA,mBAEO;IACPP,EAAA,CAAAI,UAAA,IAAAI,qCAAA,mBAEO;IACXR,EAAA,CAAAG,YAAA,EAAM;;;;;;;;IAZKH,EAAA,CAAAS,SAAA,GAA4D;IAA5DT,EAAA,CAAAU,UAAA,UAAAC,OAAA,GAAAC,MAAA,CAAAC,UAAA,CAAAC,GAAA,qCAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,aAA4D;IAG5Df,EAAA,CAAAS,SAAA,GAA6D;IAA7DT,EAAA,CAAAU,UAAA,UAAAM,OAAA,GAAAJ,MAAA,CAAAC,UAAA,CAAAC,GAAA,qCAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAA6D;IAG7Df,EAAA,CAAAS,SAAA,GAA6D;IAA7DT,EAAA,CAAAU,UAAA,UAAAO,OAAA,GAAAL,MAAA,CAAAC,UAAA,CAAAC,GAAA,qCAAAG,OAAA,CAAAF,MAAA,kBAAAE,OAAA,CAAAF,MAAA,cAA6D;IAG7Df,EAAA,CAAAS,SAAA,GAA2D;IAA3DT,EAAA,CAAAU,UAAA,UAAAQ,OAAA,GAAAN,MAAA,CAAAC,UAAA,CAAAC,GAAA,qCAAAI,OAAA,CAAAH,MAAA,kBAAAG,OAAA,CAAAH,MAAA,YAA2D;;;;;IAYlEf,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,4BAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAD9FH,EAAA,CAAAC,cAAA,cAA6J;IACzJD,EAAA,CAAAI,UAAA,IAAAe,qCAAA,mBAA0F;IAC9FnB,EAAA,CAAAG,YAAA,EAAM;;;;;IADKH,EAAA,CAAAS,SAAA,GAAqD;IAArDT,EAAA,CAAAU,UAAA,UAAAC,OAAA,GAAAS,MAAA,CAAAC,SAAA,CAAAP,GAAA,+BAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,aAAqD;;;;;IAa5Df,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,4BACjD;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAHxBH,EAAA,CAAAC,cAAA,cACwB;IACpBD,EAAA,CAAAI,UAAA,IAAAkB,qCAAA,mBACoB;IACxBtB,EAAA,CAAAG,YAAA,EAAM;;;;;IAFKH,EAAA,CAAAS,SAAA,GAAqD;IAArDT,EAAA,CAAAU,UAAA,UAAAC,OAAA,GAAAY,MAAA,CAAAF,SAAA,CAAAP,GAAA,+BAAAH,OAAA,CAAAI,MAAA,kBAAAJ,OAAA,CAAAI,MAAA,aAAqD;;;;;;;;ADjDxG,MAMaS,cAAc;EAIzBC,YACUC,WAAwB,EACxBC,WAAwB,EACxBC,MAAc,EACdC,YAA0B;IAH1B,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IANtB,KAAAC,SAAS,GAAG,KAAK;IAQf,IAAI,CAACT,SAAS,GAAG,IAAI,CAACK,WAAW,CAACK,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjC,UAAU,CAACkC,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAEnC,UAAU,CAACkC,QAAQ;KACnC,CAAC;EAEJ;EAEA,IAAIE,CAACA,CAAA;IACH,OAAO,IAAI,CAACd,SAAS,CAACe,QAAQ;EAChC;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,WAAW,CAACW,QAAQ,EAAE,EAAE;MAC/B,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE9B;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACV,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACT,SAAS,CAACoB,KAAK,EAAE;MACxB,IAAI,CAACd,WAAW,CACbe,WAAW,CAAC,IAAI,CAACrB,SAAS,CAACsB,KAAyB,CAAC,CACrDC,SAAS,CACPC,QAAQ,IAAI,CACb,CAAC,EACAC,KAAwB,IAAI;QAC3B,IAAIC,YAAY,GAAG,qBAAqB;QACxC,IAAID,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACE,OAAO,EAAE;UACtCD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;;QAEpC,IAAI,CAACnB,YAAY,CAACoB,SAAS,CAAC,OAAO,EAAEF,YAAY,CAAC;MACpD,CAAC,CACF;MACD,IAAI,CAACG,qBAAqB,EAAE;KAE/B,MAAM;MACL,IAAI,CAACrB,YAAY,CAACoB,SAAS,CAAC,OAAO,EAAE,mBAAmB,CAAC;;EAE7D;EAEQC,qBAAqBA,CAAA;IAC3B,IAAI,CAACvB,WAAW,CAACwB,sBAAsB,CAACP,SAAS,CAAEQ,OAAgB,IAAI;MACrE,IAAIA,OAAO,EAAE;QACX,IAAI,CAACvB,YAAY,CAACoB,SAAS,CACzB,SAAS,EACT,UAAU,GAAG,IAAI,CAAC5B,SAAS,CAACsB,KAAK,CAACX,QAAQ,CAC3C;;IAEL,CAAC,CAAC;EACJ;EAAC,QAAAqB,CAAA,G;qBA3DU7B,cAAc,EAAAxB,EAAA,CAAAsD,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxD,EAAA,CAAAsD,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAA1D,EAAA,CAAAsD,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAA5D,EAAA,CAAAsD,iBAAA,CAAAO,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdvC,cAAc;IAAAwC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb3BtE,EAAA,CAAAC,cAAA,aAA+B;QAU2BD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAExCH,EAAA,CAAAC,cAAA,cAAuB;QAEWD,EAAA,CAAAwE,UAAA,sBAAAC,kDAAA;UAAA,OAAYF,GAAA,CAAA/B,KAAA,EAAO;QAAA,EAAC;QAE9CxC,EAAA,CAAAC,cAAA,eAAkB;QAC2BD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzDH,EAAA,CAAA0E,SAAA,iBAEkK;QAClK1E,EAAA,CAAAI,UAAA,KAAAuE,8BAAA,kBAaM;QACV3E,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,eAAkB;QAC2BD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzDH,EAAA,CAAA0E,SAAA,iBAG0J;QAC1J1E,EAAA,CAAAI,UAAA,KAAAwE,8BAAA,kBAEM;QACV5E,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,eAAkB;QACgCD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC9DH,EAAA,CAAA0E,SAAA,iBAIc;QACd1E,EAAA,CAAAI,UAAA,KAAAyE,8BAAA,kBAIM;QACV7E,EAAA,CAAAG,YAAA,EAAM;QAGNH,EAAA,CAAAC,cAAA,eAAyE;QACpBD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAErEH,EAAA,CAAAC,cAAA,kBAAkE;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAWpHH,EAAA,CAAAC,cAAA,eAAsC;QAIMD,EAAA,CAAAE,MAAA,0CAAkC;QAAAF,EAAA,CAAAG,YAAA,EAAM;QACpEH,EAAA,CAAAC,cAAA,eAAwC;QACvBD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC/BH,EAAA,CAAAE,MAAA,gBACA;QAAAF,EAAA,CAAAC,cAAA,aAAa;QAAAD,EAAA,CAAAE,MAAA,0BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;;;QAtEzBH,EAAA,CAAAS,SAAA,IAAuB;QAAvBT,EAAA,CAAAU,UAAA,cAAA6D,GAAA,CAAAlD,SAAA,CAAuB;QAMrBrB,EAAA,CAAAS,SAAA,GAA+J;QAA/JT,EAAA,CAAAU,UAAA,YAAAV,EAAA,CAAA8E,eAAA,IAAAC,GAAA,IAAA/D,OAAA,GAAAuD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAE,OAAA,CAAAgE,OAAA,QAAAhE,OAAA,GAAAuD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAE,OAAA,CAAAiE,KAAA,OAAAjE,OAAA,GAAAuD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAE,OAAA,CAAAkE,OAAA,IAA+J;QACzJlF,EAAA,CAAAS,SAAA,GAAyI;QAAzIT,EAAA,CAAAU,UAAA,WAAAO,OAAA,GAAAsD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAG,OAAA,CAAA+D,OAAA,QAAA/D,OAAA,GAAAsD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAG,OAAA,CAAAgE,KAAA,OAAAhE,OAAA,GAAAsD,GAAA,CAAA1D,UAAA,CAAAC,GAAA,qCAAAG,OAAA,CAAAiE,OAAA,GAAyI;QAoB/IlF,EAAA,CAAAS,SAAA,GAAuJ;QAAvJT,EAAA,CAAAU,UAAA,YAAAV,EAAA,CAAA8E,eAAA,IAAAC,GAAA,EAAAR,GAAA,CAAAzC,SAAA,MAAAZ,OAAA,GAAAqD,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAI,OAAA,CAAA8D,OAAA,QAAA9D,OAAA,GAAAqD,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAI,OAAA,CAAA+D,KAAA,OAAA/D,OAAA,GAAAqD,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAI,OAAA,CAAAgE,OAAA,IAAuJ;QACjJlF,EAAA,CAAAS,SAAA,GAAiI;QAAjIT,EAAA,CAAAU,UAAA,SAAA6D,GAAA,CAAAzC,SAAA,MAAAqD,OAAA,GAAAZ,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAqE,OAAA,CAAAH,OAAA,QAAAG,OAAA,GAAAZ,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAqE,OAAA,CAAAF,KAAA,OAAAE,OAAA,GAAAZ,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAqE,OAAA,CAAAD,OAAA,GAAiI;QASzFlF,EAAA,CAAAS,SAAA,GAEpC;QAFoCT,EAAA,CAAAU,UAAA,YAAAV,EAAA,CAAA8E,eAAA,KAAAC,GAAA,EAAAR,GAAA,CAAAzC,SAAA,IAAAyC,GAAA,CAAApC,CAAA,aAAApB,MAAA,EAEpC;QACJf,EAAA,CAAAS,SAAA,GAA8E;QAA9ET,EAAA,CAAAU,UAAA,WAAA0E,OAAA,GAAAb,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAsE,OAAA,CAAAJ,OAAA,OAAAI,OAAA,GAAAb,GAAA,CAAAlD,SAAA,CAAAP,GAAA,+BAAAsE,OAAA,CAAAF,OAAA,EAA8E;;;;;;;;SDzC/G1D,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}