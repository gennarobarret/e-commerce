{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nlet ProfileComponent = class ProfileComponent {\n  constructor(_formBuilder, _authService, _router, _toastService) {\n    this._formBuilder = _formBuilder;\n    this._authService = _authService;\n    this._router = _router;\n    this._toastService = _toastService;\n    this.user = {\n      data: {}\n    };\n    this.submitted = false;\n    this.updateForm = this._formBuilder.group({\n      userName: ['', [Validators.required]],\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      location: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      identification: ['', [Validators.required]],\n      additionalInfo: ['', [Validators.required]],\n      profileImage: ['', [Validators.required]]\n    });\n  }\n  get f() {\n    return this.updateForm.controls;\n  }\n  ngOnInit() {\n    this.fetchUserData();\n  }\n  fetchUserData() {\n    this._authService.get_admin().subscribe(response => {\n      this.user = response;\n      console.log(\"ðŸš€ ~ file: profile.component.ts:48 ~ ProfileComponent ~ fetchUserData ~ this.user:\", this.user);\n      if (response.data === undefined) {\n        this._router.navigate(['']);\n      } else {\n        const {\n          userName,\n          firstName,\n          lastName,\n          email,\n          location,\n          phoneNumber,\n          role,\n          identification,\n          additionalInfo,\n          profileImage,\n          createdAt,\n          updatedAt\n        } = response.data;\n        this.updateForm.patchValue({\n          userName: userName,\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          location: location,\n          phoneNumber: phoneNumber,\n          role: role,\n          identification: identification,\n          additionalInfo: additionalInfo,\n          profileImage: profileImage,\n          createdAt: createdAt,\n          updatedAt: updatedAt\n        });\n      }\n    }, error => {\n      console.error(error);\n    });\n  }\n  update() {\n    this.submitted = true;\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"names":["Component","Validators","ProfileComponent","constructor","_formBuilder","_authService","_router","_toastService","user","data","submitted","updateForm","group","userName","required","firstName","lastName","email","location","phoneNumber","role","identification","additionalInfo","profileImage","f","controls","ngOnInit","fetchUserData","get_admin","subscribe","response","console","log","undefined","navigate","createdAt","updatedAt","patchValue","error","update","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\account-settings\\profile\\profile.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { GLOBAL } from 'src/app/core/config/GLOBAL';\nimport { FormBuilder, FormGroup, Validators, FormControl } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { ProfileData } from 'src/app/core/model/profile-data';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n  updateForm!: FormGroup;\n  public user: any = { data: {} };\n  submitted = false;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _router: Router,\n    private _toastService: ToastService\n  ) {\n    this.updateForm = this._formBuilder.group({\n      userName:['', [Validators.required]],\n      firstName:['', [Validators.required]],\n      lastName:['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      location:['', [Validators.required]],\n      phoneNumber:['', [Validators.required]],\n      role:['', [Validators.required]],\n      identification:['', [Validators.required]],\n      additionalInfo:['', [Validators.required]],\n      profileImage:['', [Validators.required]],\n    });\n  }\n\n  get f() {\n    return this.updateForm.controls;\n  }\n  \n\n  ngOnInit(): void {\n    this.fetchUserData();\n  }\n\n\n  fetchUserData() {\n    this._authService.get_admin().subscribe(\n      response => {\n        this.user = response;\n        console.log(\"ðŸš€ ~ file: profile.component.ts:48 ~ ProfileComponent ~ fetchUserData ~ this.user:\", this.user)\n        if (response.data === undefined) {\n          this._router.navigate(['']);\n        } else {\n          const { userName, firstName, lastName, email, location, phoneNumber, role, identification, additionalInfo, profileImage, createdAt, updatedAt } = response.data;\n          this.updateForm.patchValue({\n            userName: userName,\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            location: location,\n            phoneNumber: phoneNumber,\n            role: role,\n            identification: identification,\n            additionalInfo: additionalInfo,\n            profileImage: profileImage,\n            createdAt: createdAt,\n            updatedAt: updatedAt,\n          });\n\n        }\n      \n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n\n  update() {\n\n    this.submitted = true;\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAAiCC,UAAU,QAAqB,gBAAgB;AAYhF,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAK3BC,YACUC,YAAyB,EACzBC,YAAyB,EACzBC,OAAe,EACfC,aAA2B;IAH3B,KAAAH,YAAY,GAAZA,YAAY;IACZ,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,aAAa,GAAbA,aAAa;IAPhB,KAAAC,IAAI,GAAQ;MAAEC,IAAI,EAAE;IAAE,CAAE;IAC/B,KAAAC,SAAS,GAAG,KAAK;IAQf,IAAI,CAACC,UAAU,GAAG,IAAI,CAACP,YAAY,CAACQ,KAAK,CAAC;MACxCC,QAAQ,EAAC,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACa,QAAQ,CAAC,CAAC;MACpCC,SAAS,EAAC,CAAC,EAAE,EAAE,CAACd,UAAU,CAACa,QAAQ,CAAC,CAAC;MACrCE,QAAQ,EAAC,CAAC,EAAE,EAAE,CAACf,UAAU,CAACa,QAAQ,CAAC,CAAC;MACpCG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACgB,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAC,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACa,QAAQ,CAAC,CAAC;MACpCK,WAAW,EAAC,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACa,QAAQ,CAAC,CAAC;MACvCM,IAAI,EAAC,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACa,QAAQ,CAAC,CAAC;MAChCO,cAAc,EAAC,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACa,QAAQ,CAAC,CAAC;MAC1CQ,cAAc,EAAC,CAAC,EAAE,EAAE,CAACrB,UAAU,CAACa,QAAQ,CAAC,CAAC;MAC1CS,YAAY,EAAC,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACa,QAAQ,CAAC;KACxC,CAAC;EACJ;EAEA,IAAIU,CAACA,CAAA;IACH,OAAO,IAAI,CAACb,UAAU,CAACc,QAAQ;EACjC;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAGAA,aAAaA,CAAA;IACX,IAAI,CAACtB,YAAY,CAACuB,SAAS,EAAE,CAACC,SAAS,CACrCC,QAAQ,IAAG;MACT,IAAI,CAACtB,IAAI,GAAGsB,QAAQ;MACpBC,OAAO,CAACC,GAAG,CAAC,oFAAoF,EAAE,IAAI,CAACxB,IAAI,CAAC;MAC5G,IAAIsB,QAAQ,CAACrB,IAAI,KAAKwB,SAAS,EAAE;QAC/B,IAAI,CAAC3B,OAAO,CAAC4B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;OAC5B,MAAM;QACL,MAAM;UAAErB,QAAQ;UAAEE,SAAS;UAAEC,QAAQ;UAAEC,KAAK;UAAEC,QAAQ;UAAEC,WAAW;UAAEC,IAAI;UAAEC,cAAc;UAAEC,cAAc;UAAEC,YAAY;UAAEY,SAAS;UAAEC;QAAS,CAAE,GAAGN,QAAQ,CAACrB,IAAI;QAC/J,IAAI,CAACE,UAAU,CAAC0B,UAAU,CAAC;UACzBxB,QAAQ,EAAEA,QAAQ;UAClBE,SAAS,EAAEA,SAAS;UACpBC,QAAQ,EAAEA,QAAQ;UAClBC,KAAK,EAAEA,KAAK;UACZC,QAAQ,EAAEA,QAAQ;UAClBC,WAAW,EAAEA,WAAW;UACxBC,IAAI,EAAEA,IAAI;UACVC,cAAc,EAAEA,cAAc;UAC9BC,cAAc,EAAEA,cAAc;UAC9BC,YAAY,EAAEA,YAAY;UAC1BY,SAAS,EAAEA,SAAS;UACpBC,SAAS,EAAEA;SACZ,CAAC;;IAIN,CAAC,EACDE,KAAK,IAAG;MACNP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAGAC,MAAMA,CAAA;IAEJ,IAAI,CAAC7B,SAAS,GAAG,IAAI;EACvB;CAGD;AA3EYR,gBAAgB,GAAAsC,UAAA,EAL5BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWzC,gBAAgB,CA2E5B;SA3EYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}