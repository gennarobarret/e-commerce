{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { RootGuard } from './guards/root.guard'; // Asegúrate de tener este guardia\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  canActivate: [RootGuard],\n  children: [{\n    path: '',\n    loadChildren: () => import('./modules/auth/auth.module').then(m => m.AuthModule)\n  }, {\n    path: '',\n    loadChildren: () => import('./modules/layout/layout.module').then(m => m.LayoutModule)\n  }, {\n    path: 'initial-config',\n    loadChildren: () => import('./modules/initial-config/initial-config.module').then(m => m.InitialConfigModule)\n  }]\n}\n// ... otras rutas\n];\n\nclass AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","RootGuard","routes","path","canActivate","children","loadChildren","then","m","AuthModule","LayoutModule","InitialConfigModule","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RootGuard } from './guards/root.guard'; // Asegúrate de tener este guardia\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [RootGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          import('./modules/auth/auth.module').then((m) => m.AuthModule),\n      },\n      {\n        path: '',\n        loadChildren: () =>\n          import('./modules/layout/layout.module').then((m) => m.LayoutModule),\n      },\n      {\n        path: 'initial-config',\n        loadChildren: () =>\n          import('./modules/initial-config/initial-config.module').then((m) => m.InitialConfigModule),\n      },\n    ],\n  },\n  // ... otras rutas\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n// //app-routing.module.ts\n// import { NgModule } from '@angular/core';\n// import { RouterModule, Routes } from '@angular/router';\n\n// const routes: Routes = [\n//   {\n//     path: 'auth',\n//     loadChildren: () =>\n//       import('./modules/auth/auth.module').then((m) => m.AuthModule),\n//   },\n//   {\n//     path: '',\n//     loadChildren: () =>\n//       import('./modules/layout/layout.module').then((m) => m.LayoutModule),\n//   },\n// ];\n\n// @NgModule({\n//   imports: [RouterModule.forRoot(routes)],\n//   exports: [RouterModule],\n// })\n// export class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,SAAS,QAAQ,qBAAqB,CAAC,CAAC;;;AAEjD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,CAACH,SAAS,CAAC;EACxBI,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,EAAE;IACRG,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU;GAChE,EACD;IACEN,IAAI,EAAE,EAAE;IACRG,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACE,YAAY;GACtE,EACD;IACEP,IAAI,EAAE,gBAAgB;IACtBG,YAAY,EAAEA,CAAA,KACZ,MAAM,CAAC,gDAAgD,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACG,mBAAmB;GAC7F;;AAGL;AAAA,CACD;;AAED,MAIaC,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjBf,YAAY,CAACgB,OAAO,CAACd,MAAM,CAAC,EAC5BF,YAAY;EAAA;;SAEXY,gBAAgB;;2EAAhBA,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAAlB,YAAA;IAAAmB,OAAA,GAFjBnB,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}