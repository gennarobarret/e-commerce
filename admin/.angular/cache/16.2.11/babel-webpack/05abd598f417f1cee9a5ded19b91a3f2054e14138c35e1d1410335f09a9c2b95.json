{"ast":null,"code":"export {};\n// import { Injectable } from '@angular/core';\n// import { CanMatch, Router, UrlTree, Route } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { AuthService } from '../auth.service';\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class IsLoggedInGuard implements CanMatch {\n//   constructor(\n//     private authService: AuthService,\n//     private router: Router\n//     ) {}\n//   canMatch(route: Route): Observable<boolean | UrlTree> {\n//     return this.authService.isLoggedIn$.pipe(\n//       map((isLoggedIn) => isLoggedIn || this.router.createUrlTree(['auth/login']))\n//     );\n//   }\n// }\n// import { CanActivateFn } from '@angular/router';\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\auth\\guards\\is-logged-in.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private _adminService: AuthService, \n    private _router: Router\n    ) {}\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this._adminService.check_admin_exists().pipe(\n      map(response => {\n        if (response.setupRequired) {\n          // Si no hay administrador, permitir acceso a la p√°gina de registro\n          this._router.navigate(['/register']);\n          return false;\n        } else {\n          // Si ya existe un administrador, redirigir al login\n          if (!this._adminService.isAuthenticated(['admin'])) {\n          this._router.navigate(['/login']);\n          return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n}\n\n\n\n\n// import { Injectable } from '@angular/core';\n// import { CanMatch, Router, UrlTree, Route } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { AuthService } from '../auth.service';\n\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class IsLoggedInGuard implements CanMatch {\n//   constructor(\n//     private authService: AuthService,\n//     private router: Router\n//     ) {}\n\n//   canMatch(route: Route): Observable<boolean | UrlTree> {\n//     return this.authService.isLoggedIn$.pipe(\n//       map((isLoggedIn) => isLoggedIn || this.router.createUrlTree(['auth/login']))\n//     );\n//   }\n// }\n\n// import { CanActivateFn } from '@angular/router';\n\n// export const isLoggedInGuard: CanActivateFn = (route, state) => {\n//   return true;\n// };\n"],"mappings":";AAyCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}