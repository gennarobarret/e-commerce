{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ActivationComponent = class ActivationComponent {\n  constructor(_route, _initialConfigService) {\n    this._route = _route;\n    this._initialConfigService = _initialConfigService;\n  }\n  ngOnInit() {\n    this.token = this._route.snapshot.paramMap.get('token') || '';\n    if (!this.token) {\n      // Manejar la ausencia del token, por ejemplo, redirigir o mostrar un mensaje\n    }\n  }\n  activateAccount() {\n    this._initialConfigService.activateAccount(this.token).subscribe({\n      next: response => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: error => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n};\nActivationComponent = __decorate([Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})], ActivationComponent);\nexport { ActivationComponent };","map":{"version":3,"names":["Component","ActivationComponent","constructor","_route","_initialConfigService","ngOnInit","token","snapshot","paramMap","get","activateAccount","subscribe","next","response","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\activation\\activation.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n\nexport class ActivationComponent implements OnInit {\n  token!: string;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _initialConfigService: InitialConfigService\n  ) { }\n\n  ngOnInit() {\n    this.token = this._route.snapshot.paramMap.get('token') || '';\n    if (!this.token) {\n      // Manejar la ausencia del token, por ejemplo, redirigir o mostrar un mensaje\n    }\n  }\n\n  activateAccount() {\n    this._initialConfigService.activateAccount(this.token).subscribe({\n      next: (response) => {\n        // Manejar la respuesta positiva (redirigir al usuario, mostrar mensaje, etc.)\n      },\n      error: (error) => {\n        // Manejar errores (mostrar mensaje de error, etc.)\n      }\n    });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAG9BC,YACUC,MAAsB,EACtBC,qBAA2C;IAD3C,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,qBAAqB,GAArBA,qBAAqB;EAC3B;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,MAAM,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;IAC7D,IAAI,CAAC,IAAI,CAACH,KAAK,EAAE;MACf;IAAA;EAEJ;EAEAI,eAAeA,CAAA;IACb,IAAI,CAACN,qBAAqB,CAACM,eAAe,CAAC,IAAI,CAACJ,KAAK,CAAC,CAACK,SAAS,CAAC;MAC/DC,IAAI,EAAGC,QAAQ,IAAI;QACjB;MAAA,CACD;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf;MAAA;KAEH,CAAC;EACJ;CAED;AA1BYb,mBAAmB,GAAAc,UAAA,EAN/Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EAEWjB,mBAAmB,CA0B/B;SA1BYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}