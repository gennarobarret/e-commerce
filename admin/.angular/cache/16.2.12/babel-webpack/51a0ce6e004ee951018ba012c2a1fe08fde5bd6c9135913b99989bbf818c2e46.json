{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/initial-config.service\";\nimport * as i2 from \"@angular/router\";\nclass SetupVerificationGuard {\n  constructor(setupService, router) {\n    this.setupService = setupService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.setupService.InitialCheck().pipe(map(response => {\n      if (response.setupRequired === true && response.verificationRequired === false) {\n        this.router.navigate(['/initial-config/step1']);\n        return false;\n      } else if (response.setupRequired === false && response.verificationRequired === true) {\n        this.router.navigate(['/verification-pending']);\n        return false;\n      }\n      return true;\n    }), catchError(error => {\n      // Maneja cualquier error aquí\n      console.error(error);\n      return of(true); // O redirige a una página de error según sea necesario\n    }));\n  }\n  static #_ = this.ɵfac = function SetupVerificationGuard_Factory(t) {\n    return new (t || SetupVerificationGuard)(i0.ɵɵinject(i1.InitialConfigService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SetupVerificationGuard,\n    factory: SetupVerificationGuard.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { SetupVerificationGuard };","map":{"version":3,"names":["of","catchError","map","SetupVerificationGuard","constructor","setupService","router","canActivate","InitialCheck","pipe","response","setupRequired","verificationRequired","navigate","error","console","_","i0","ɵɵinject","i1","InitialConfigService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\setup-verification.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { InitialConfigService } from '../services/initial-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetupVerificationGuard implements CanActivate {\n  constructor(private setupService: InitialConfigService, private router: Router) { }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.setupService.InitialCheck().pipe(\n      map(response => {\n        if (response.setupRequired === true && response.verificationRequired === false) {\n          this.router.navigate(['/initial-config/step1']);\n          return false;\n        } else if (response.setupRequired === false && response.verificationRequired === true) {\n          this.router.navigate(['/verification-pending']);\n          return false;\n        }\n        return true;\n      }),\n      catchError((error) => {\n        // Maneja cualquier error aquí\n        console.error(error);\n        return of(true); // O redirige a una página de error según sea necesario\n      })\n    );\n  }\n}\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAGhD,MAGaC,sBAAsB;EACjCC,YAAoBC,YAAkC,EAAUC,MAAc;IAA1D,KAAAD,YAAY,GAAZA,YAAY;IAAgC,KAAAC,MAAM,GAANA,MAAM;EAAY;EAElFC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,YAAY,CAACG,YAAY,EAAE,CAACC,IAAI,CAC1CP,GAAG,CAACQ,QAAQ,IAAG;MACb,IAAIA,QAAQ,CAACC,aAAa,KAAK,IAAI,IAAID,QAAQ,CAACE,oBAAoB,KAAK,KAAK,EAAE;QAC9E,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;QAC/C,OAAO,KAAK;OACb,MAAM,IAAIH,QAAQ,CAACC,aAAa,KAAK,KAAK,IAAID,QAAQ,CAACE,oBAAoB,KAAK,IAAI,EAAE;QACrF,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;QAC/C,OAAO,KAAK;;MAEd,OAAO,IAAI;IACb,CAAC,CAAC,EACFZ,UAAU,CAAEa,KAAK,IAAI;MACnB;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAOd,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACH;EACH;EAAC,QAAAgB,CAAA,G;qBArBUb,sBAAsB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBpB,sBAAsB;IAAAqB,OAAA,EAAtBrB,sBAAsB,CAAAsB,IAAA;IAAAC,UAAA,EAFrB;EAAM;;SAEPvB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}