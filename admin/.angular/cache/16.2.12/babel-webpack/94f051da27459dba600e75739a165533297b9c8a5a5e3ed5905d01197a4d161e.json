{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BusinessSetupComponent = class BusinessSetupComponent {\n  constructor(formBuilder, __router, __toastService, _businessService) {\n    this.formBuilder = formBuilder;\n    this.__router = __router;\n    this.__toastService = __toastService;\n    this._businessService = _businessService;\n    this.load_data = false;\n    this.load_btn = false;\n    this.loading = false;\n    this.imageUrl = '';\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n  fileChangeEvent(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n      this.validateAndUpdateImg(this.selectedFile);\n    }\n  }\n  validateAndUpdateImg(file) {\n    if (!this.imageUrl && !file) {\n      this.updateForm.get('inputProfileImage').setErrors({\n        required: true\n      });\n      return;\n    }\n    if (file) {\n      const errors = this.validateFileUpdate(file);\n      if (errors) {\n        this.updateForm.get('inputProfileImage').setErrors(errors);\n      }\n    }\n  }\n  validateFileUpdate(file) {\n    if (file) {\n      const validTypes = ['image/png', 'image/webp', 'image/jpg', 'image/gif', 'image/jpeg'];\n      if (validTypes.includes(file.type)) {\n        if (file.size <= 4000000) {\n          let reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => {\n            if (reader.result !== null) {\n              this.imageUrl = reader.result;\n              this.updateForm.patchValue({\n                file: reader.result\n              });\n            }\n          };\n          return null;\n        } else {\n          console.error('error', 'The image cannot exceed 4 mb');\n          this.__toastService.showToast('error', 'The image cannot exceed 4 mb');\n          return {\n            invalidFileSize: true\n          };\n        }\n      } else {\n        console.error('The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        this.__toastService.showToast('error', 'The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        return {\n          invalidFileType: true\n        };\n      }\n    }\n    return null;\n  }\n  triggerFileInput() {\n    this._renderer.selectRootElement(this.fileInput.nativeElement).click();\n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this._toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: response => {\n        this._toastService.showToast('success', 'Business details saved successfully.');\n        this._router.navigate(['/next-step-route']);\n      },\n      error: error => {\n        this._toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n};\nBusinessSetupComponent = __decorate([Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})], BusinessSetupComponent);\nexport { BusinessSetupComponent };","map":{"version":3,"names":["Component","Validators","BusinessSetupComponent","constructor","formBuilder","__router","__toastService","_businessService","load_data","load_btn","loading","imageUrl","selectedFile","ngOnInit","businessSetupForm","group","businessName","required","maxLength","taxId","pattern","paymentGateway","physicalLocation","shippingService","companyEmail","email","customerServiceEmail","returnsEmail","currency","logo","fileChangeEvent","event","inputElement","target","files","length","validateAndUpdateImg","file","updateForm","get","setErrors","errors","validateFileUpdate","validTypes","includes","type","size","reader","FileReader","readAsDataURL","onload","result","patchValue","console","error","showToast","invalidFileSize","invalidFileType","triggerFileInput","_renderer","selectRootElement","fileInput","nativeElement","click","onFileChange","submitBusinessDetails","invalid","_toastService","businessService","saveBusinessConfig","value","subscribe","next","response","_router","navigate","complete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/_router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { BusinessConfigService } from 'src/app/core/services/business-config.service';\n\n@Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})\nexport class BusinessSetupComponent implements OnInit {\n  businessSetupForm!: FormGroup;\n  load_data: boolean = false;\n  load_btn: boolean = false;\n  loading: boolean = false;\n  imageUrl: any | ArrayBuffer = '';\n  selectedFile: File | null = null;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private __router: Router,\n    private __toastService: ToastService,\n    private _businessService: BusinessConfigService\n  ) { }\n\n  ngOnInit(): void {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n\n\n\n\n  fileChangeEvent(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n      this.validateAndUpdateImg(this.selectedFile);\n    }\n  }\n\n  private validateAndUpdateImg(file: File) {\n    if (!this.imageUrl && !file) {\n      this.updateForm.get('inputProfileImage')!.setErrors({ required: true });\n      return;\n    }\n    if (file) {\n      const errors = this.validateFileUpdate(file);\n      if (errors) {\n        this.updateForm.get('inputProfileImage')!.setErrors(errors);\n      }\n    }\n  }\n\n  private validateFileUpdate(file: File): { [key: string]: any } | null {\n    if (file) {\n      const validTypes = ['image/png', 'image/webp', 'image/jpg', 'image/gif', 'image/jpeg'];\n      if (validTypes.includes(file.type)) {\n        if (file.size <= 4000000) {\n          let reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = () => {\n            if (reader.result !== null) {\n              this.imageUrl = reader.result as string;\n              this.updateForm.patchValue({\n                file: reader.result\n              });\n            }\n          }\n          return null;\n        } else {\n          console.error('error', 'The image cannot exceed 4 mb');\n          this.__toastService.showToast('error', 'The image cannot exceed 4 mb');\n          return { invalidFileSize: true };\n        }\n      } else {\n        console.error('The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        this.__toastService.showToast('error', 'The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        return { invalidFileType: true };\n      }\n    }\n\n    return null;\n  }\n\n  triggerFileInput(): void {\n    this._renderer.selectRootElement(this.fileInput.nativeElement).click();\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this._toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: (response) => {\n        this._toastService.showToast('success', 'Business details saved successfully.');\n        this._router.navigate(['/next-step-route']);\n      },\n      error: (error) => {\n        this._toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}