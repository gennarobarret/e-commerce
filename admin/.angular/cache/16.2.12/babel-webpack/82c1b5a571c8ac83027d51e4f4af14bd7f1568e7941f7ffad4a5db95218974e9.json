{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/shared/services/toast.service\";\nimport * as i5 from \"src/app/core/services/auth-google.service\";\nimport * as i6 from \"@angular/common\";\nfunction LoginComponent_div_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" UserName is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_16_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"userName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_21_span_1_Template, 2, 0, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass LoginComponent {\n  constructor(formBuilder, authService, router, toastService, _authGoogleService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.toastService = toastService;\n    this._authGoogleService = _authGoogleService;\n    this.submitted = false;\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  ngOnInit() {\n    this.renderButton();\n    if (this.authService.getToken()) {\n      this.router.navigate(['']);\n    }\n  }\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: this.onSignIn\n    });\n    google.accounts.id.renderButton(document.getElementById(\"g_id_onload\"),\n    // El elemento donde se renderizará el botón\n    {\n      theme: \"outline\",\n      size: \"large\"\n    } // Opciones de personalización\n    );\n\n    google.accounts.id.prompt(); // Mostrar el prompt de sesión si es necesario\n  }\n\n  onSignIn(response) {\n    // Lógica para manejar la respuesta de inicio de sesión\n    console.log('Usuario ha iniciado sesión:', response);\n  }\n  // initGoogleSignIn() {\n  //   this._authGoogleService.login();\n  // }\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      this.authService.loginUser(this.loginForm.value).subscribe(response => {}, error => {\n        let errorMessage = 'Invalid credentials';\n        if (error.error && error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.toastService.showToast('error', errorMessage);\n      });\n      this.handleSuccessfulLogin();\n    } else {\n      this.toastService.showToast('error', 'Missing form data');\n    }\n  }\n  handleSuccessfulLogin() {\n    this.authService.loginSuccessObservable.subscribe(success => {\n      if (success) {\n        this.toastService.showToast('success', 'Welcome ' + this.loginForm.value.userName);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastService), i0.ɵɵdirectiveInject(i5.AuthGoogleService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 34,\n    vars: 9,\n    consts: [[\"id\", \"g_id_onload\", \"data-client_id\", \"TU_CLIENT_ID\", \"data-context\", \"use\", \"data-ux_mode\", \"popup\", \"data-login_uri\", \"http://localhost:4200/auth/login\", \"data-auto_select\", \"true\", \"data-itp_support\", \"true\"], [\"data-type\", \"standard\", \"data-shape\", \"rectangular\", \"data-theme\", \"outline\", \"data-text\", \"signin_with\", \"data-size\", \"large\", \"data-logo_alignment\", \"left\", 1, \"g_id_signin\"], [\"id\", \"layoutAuthentication\"], [\"id\", \"layoutAuthentication_content\"], [1, \"container-xl\", \"px-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-5\", \"col-lg-6\", \"col-md-8\", \"col-sm-11\"], [1, \"card\", \"my-5\"], [1, \"my-0\"], [1, \"card-body\", \"p-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"userName\", 1, \"small\", \"mb-1\"], [\"id\", \"userName\", \"type\", \"text\", \"placeholder\", \"Enter your userName\", \"formControlName\", \"userName\", \"autocomplete\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"small\", \"mb-1\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"formControlName\", \"password\", \"autocomplete\", \"current-password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\", \"mt-4\", \"mb-0\"], [\"href\", \"auth-password-basic.html\", 1, \"small\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-secondary\", \"btn-block\"], [1, \"card-body\", \"px-5\", \"py-4\"], [1, \"small\", \"text-center\"], [\"href\", \"auth-register-social.html\"], [\"id\", \"layoutAuthentication_footer\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"main\")(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵelement(9, \"hr\", 8);\n        i0.ɵɵelementStart(10, \"div\", 9)(11, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\", 12);\n        i0.ɵɵtext(14, \"UserName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 13);\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"label\", 15);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 16);\n        i0.ɵɵtemplate(21, LoginComponent_div_21_Template, 2, 1, \"div\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 17)(23, \"a\", 18);\n        i0.ɵɵtext(24, \"Forgot Password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 19);\n        i0.ɵɵtext(26, \"Login\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(27, \"hr\", 8);\n        i0.ɵɵelementStart(28, \"div\", 20)(29, \"div\", 21);\n        i0.ɵɵtext(30, \" New user? \");\n        i0.ɵɵelementStart(31, \"a\", 22);\n        i0.ɵɵtext(32, \"Create an account!\");\n        i0.ɵɵelementEnd()()()()()()()()();\n        i0.ɵɵelement(33, \"div\", 23);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ((tmp_1_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_1_0.touched))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched)));\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n    changeDetection: 0\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_16_span_1_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","errors","LoginComponent_div_21_span_1_Template","ctx_r1","LoginComponent","constructor","formBuilder","authService","router","toastService","_authGoogleService","submitted","group","userName","required","password","f","controls","ngOnInit","renderButton","getToken","navigate","google","accounts","id","initialize","client_id","callback","onSignIn","document","getElementById","theme","size","prompt","response","console","log","login","valid","loginUser","value","subscribe","error","errorMessage","message","showToast","handleSuccessfulLogin","loginSuccessObservable","success","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","ToastService","i5","AuthGoogleService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_11_listener","LoginComponent_div_16_Template","LoginComponent_div_21_Template","ɵɵpureFunction1","_c0","tmp_1_0","invalid","dirty","touched","tmp_2_0","tmp_3_0","tmp_4_0"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\login\\login.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { LoginCredentials } from 'src/app/core/models';\nimport { AuthGoogleService } from 'src/app/core/services/auth-google.service';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService,\n    private _authGoogleService: AuthGoogleService,\n  ) {\n\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', Validators.required],\n    });\n\n  }\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.renderButton();\n    if (this.authService.getToken()) {\n      this.router.navigate(['']);\n\n    }\n  }\n\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: this.onSignIn,\n    });\n\n    google.accounts.id.renderButton(\n      document.getElementById(\"g_id_onload\"), // El elemento donde se renderizará el botón\n      { theme: \"outline\", size: \"large\" }  // Opciones de personalización\n    );\n\n    google.accounts.id.prompt(); // Mostrar el prompt de sesión si es necesario\n  }\n\n  onSignIn(response: any) {\n    // Lógica para manejar la respuesta de inicio de sesión\n    console.log('Usuario ha iniciado sesión:', response);\n  }\n\n\n\n\n\n\n  // initGoogleSignIn() {\n  //   this._authGoogleService.login();\n  // }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      this.authService\n        .loginUser(this.loginForm.value as LoginCredentials)\n        .subscribe(\n          (response) => {\n          },\n          (error: HttpErrorResponse) => {\n            let errorMessage = 'Invalid credentials';\n            if (error.error && error.error.message) {\n              errorMessage = error.error.message;\n            }\n            this.toastService.showToast('error', errorMessage);\n          }\n        );\n      this.handleSuccessfulLogin();\n\n    } else {\n      this.toastService.showToast('error', 'Missing form data');\n    }\n  }\n\n  private handleSuccessfulLogin() {\n    this.authService.loginSuccessObservable.subscribe((success: boolean) => {\n      if (success) {\n        this.toastService.showToast(\n          'success',\n          'Welcome ' + this.loginForm.value.userName\n        );\n      }\n    });\n  }\n\n}\n","<div id=\"g_id_onload\" data-client_id=\"TU_CLIENT_ID\" data-context=\"use\" data-ux_mode=\"popup\"\n    data-login_uri=\"http://localhost:4200/auth/login\" data-auto_select=\"true\" data-itp_support=\"true\">\n</div>\n<div class=\"g_id_signin\" data-type=\"standard\" data-shape=\"rectangular\" data-theme=\"outline\" data-text=\"signin_with\"\n    data-size=\"large\" data-logo_alignment=\"left\">\n</div>\n\n<!-- <h1>login works</h1> -->\n<div id=\"layoutAuthentication\">\n    <div id=\"layoutAuthentication_content\">\n\n        <main>\n            <div class=\"container-xl px-4\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-11\">\n                        <!-- Social login form-->\n                        <div class=\"card my-5\">\n                            <!-- <div class=\"card-body p-5 text-center\">\n                                <div class=\"h3 fw-light mb-3\">Sign In</div>\n                                <!-- Social login links-->\n                            <!-- <a class=\"btn btn-icon btn-facebook mx-1\" href=\"#!\"><i\n                                        class=\"fab fa-facebook-f fa-fw fa-sm\"></i></a>\n                                <a class=\"btn btn-icon btn-github mx-1\" href=\"#!\"><i\n                                        class=\"fab fa-github fa-fw fa-sm\"></i></a>\n                                <a class=\"btn btn-icon btn-google mx-1\" (click)=\"initGoogleSignIn()\"><i\n                                        class=\"fab fa-google fa-fw fa-sm\"></i></a>\n                                <a class=\"btn btn-icon btn-twitter mx-1\" href=\"#!\"><i\n                                        class=\"fab fa-twitter fa-fw fa-sm text-white\"></i></a>\n                            </div> -->\n\n                            <hr class=\"my-0\" />\n                            <div class=\"card-body p-5\">\n                                <!-- Login form-->\n                                <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                                    <!-- Form Group (userName)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"small mb-1\" for=\"userName\">UserName</label>\n                                        <input class=\"form-control\" id=\"userName\" type=\"text\"\n                                            placeholder=\"Enter your userName\" formControlName=\"userName\"\n                                            autocomplete=\"username\"\n                                            [ngClass]=\"{'is-invalid': loginForm.get('userName')?.invalid && (loginForm.get('userName')?.dirty || loginForm.get('userName')?.touched)}\" />\n                                        <div *ngIf=\"loginForm.get('userName')?.invalid && (loginForm.get('userName')?.dirty || loginForm.get('userName')?.touched)\"\n                                            class=\"text-danger\">\n                                            <span *ngIf=\"loginForm.get('userName')?.errors?.['required']\">\n                                                UserName is required.\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <!-- Form Group (password)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"small mb-1\" for=\"password\">Password</label>\n                                        <input class=\"form-control\" id=\"password\" type=\"password\"\n                                            placeholder=\"Enter your password\" formControlName=\"password\"\n                                            autocomplete=\"current-password\"\n                                            [ngClass]=\"{'is-invalid': loginForm.get('password')?.invalid && (loginForm.get('password')?.dirty || loginForm.get('password')?.touched)}\" />\n                                        <div *ngIf=\"loginForm.get('password')?.invalid && (loginForm.get('password')?.dirty || loginForm.get('password')?.touched)\"\n                                            class=\"text-danger\">\n                                            <span *ngIf=\"loginForm.get('password')?.errors?.['required']\">\n                                                Password is required.\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <!-- Form Group (login box)-->\n                                    <div class=\"d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                        <a class=\"small\" href=\"auth-password-basic.html\">Forgot Password?</a>\n                                        <!-- <a class=\"btn btn-primary\" href=\"dashboard-1.html\">Login</a> -->\n                                        <button type=\"submit\" class=\"btn btn-outline-secondary btn-block\">Login</button>\n                                    </div>\n                                </form>\n                            </div>\n                            <hr class=\"my-0\" />\n                            <div class=\"card-body px-5 py-4\">\n                                <div class=\"small text-center\">\n                                    New user?\n                                    <a href=\"auth-register-social.html\">Create an account!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n\n    </div>\n    <div id=\"layoutAuthentication_footer\">\n        <!-- <app-footer></app-footer> -->\n    </div>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}