{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport {}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  forgotPasswordForm = new FormGroup({\n    inputForgotEmailAddress: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  constructor(\n    private _authService: AuthService,\n    private _toastService: ToastService\n  ) { }\n\n  onSubmit(): void {\n    if (this.forgotPasswordForm.valid) {\n      // Extrae emailAddress usando desestructuración y el operador de afirmación no nula\n      const { emailAddress } = this.forgotPasswordForm.value;\n      this._authService.forgotPassword({ emailAddress: emailAddress! }).subscribe({\n        next: (response) => {\n          // Maneja la respuesta exitosa aquí\n          this._toastService.showToast('success', 'If the email exists in our system, a password reset link will be sent.');\n          this.forgotPasswordForm.reset();\n        },\n        error: (error) => {\n          this._toastService.showToast('error', 'An error occurred while trying to send the password reset link.');\n          console.error(error);\n        }\n      });\n    }\n  }\n\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}