{"ast":null,"code":"import { __decorate } from \"tslib\";\n// create-master-admin.component.ts\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet CreateMasterAdminComponent = class CreateMasterAdminComponent {\n  constructor(_router, _formBuilder, _validationService, _renderer, _toastService, _initialConfigService) {\n    this._router = _router;\n    this._formBuilder = _formBuilder;\n    this._validationService = _validationService;\n    this._renderer = _renderer;\n    this._toastService = _toastService;\n    this._initialConfigService = _initialConfigService;\n    this.user = null;\n    this.countries = [];\n    this.states = [];\n    this.filteredStates = [];\n    this.load_data = false;\n    this.load_btn = false;\n    this.createMasterAdminForm = this._formBuilder.group({\n      inputUserName: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(20), Validators.pattern(\"^[a-zA-Z0-9]+$\")]],\n      inputFirstName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputLastName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      inputPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      inputConfirmPassword: [\"\", [Validators.required]],\n      inputRole: [{\n        value: 'MasterAdministrator',\n        disabled: true\n      }, [Validators.required]]\n    }, {\n      validator: this._validationService.mustMatch('inputPassword', 'inputConfirmPassword')\n    });\n  }\n  ngOnInit() {}\n  // goToNextStep() {\n  //   if (this.createMasterAdminForm.valid) {\n  //     this._sharedDataBetweenStepService.setStepData('accountSetup', this.createMasterAdminForm.value);\n  //     this._router.navigate(['/initial-config/step2']);\n  //   } else {\n  //     Object.keys(this.createMasterAdminForm.controls).forEach(field => {\n  //       const control = this.createMasterAdminForm.get(field);\n  //       control?.markAsTouched({ onlySelf: true });\n  //     });\n  //     this._toastService.showToast('error', 'Please fill all required fields');\n  //   }\n  // }\n  mapcreateMasterAdminFormToApiFormat(accountSetup) {\n    const mappedData = {};\n    for (const key in accountSetup) {\n      if (accountSetup.hasOwnProperty(key)) {\n        const newKey = key.replace('input', '');\n        mappedData[newKey.charAt(0).toLowerCase() + newKey.slice(1)] = accountSetup[key];\n      }\n    }\n    return mappedData;\n  }\n  onSubmit() {\n    this.load_btn = true;\n    const data = this.mapcreateMasterAdminFormToApiFormat(this.createMasterAdminForm.accountSetup);\n    delete data.confirmPassword;\n    data.role = 'MasterAdministrator';\n    this._initialConfigService.createMasterAdmin(data).subscribe(response => {\n      this._toastService.showToast('success', 'An email has been sent to the ' + ' ' + data.emailAddress);\n      this.createMasterAdminForm = {};\n      this.router.navigate(['/initial-config/verification-pending']);\n      this.load_btn = false;\n    }, error => {\n      this.load_btn = false;\n      this.router.navigate(['/initial-config/step1']);\n      if (error.status === 400 && error.error.message === 'A Master Administrator is already registered.') {\n        this._toastService.showToast('error', 'A Master Administrator is already registered.');\n      } else {\n        this._toastService.showToast('error', `Error: ${error.message}`);\n      }\n    });\n  }\n};\nCreateMasterAdminComponent = __decorate([Component({\n  selector: 'app-create-master-admin',\n  templateUrl: './create-master-admin.component.html',\n  styleUrls: ['./create-master-admin.component.css']\n})], CreateMasterAdminComponent);\nexport { CreateMasterAdminComponent };","map":{"version":3,"names":["Component","Validators","CreateMasterAdminComponent","constructor","_router","_formBuilder","_validationService","_renderer","_toastService","_initialConfigService","user","countries","states","filteredStates","load_data","load_btn","createMasterAdminForm","group","inputUserName","required","minLength","maxLength","pattern","inputFirstName","inputLastName","inputEmailAddress","email","inputPassword","inputConfirmPassword","inputRole","value","disabled","validator","mustMatch","ngOnInit","mapcreateMasterAdminFormToApiFormat","accountSetup","mappedData","key","hasOwnProperty","newKey","replace","charAt","toLowerCase","slice","onSubmit","data","confirmPassword","role","createMasterAdmin","subscribe","response","showToast","emailAddress","router","navigate","error","status","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\create-master-admin\\create-master-admin.component.ts"],"sourcesContent":["// create-master-admin.component.ts\nimport { Component, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidationService } from 'src/app/core/services/validation.service';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\n\nimport { SharedDataBetweenStepService } from 'src/app/core/services/shared-data-between-step.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { User } from 'src/app/core/models/user.interface';\nimport { Country } from 'src/app/core/models/country.model';\nimport { State } from 'src/app/core/models/state.model';\nimport { forkJoin } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-master-admin',\n  templateUrl: './create-master-admin.component.html',\n  styleUrls: ['./create-master-admin.component.css']\n})\nexport class CreateMasterAdminComponent  {\n  createMasterAdminForm!: FormGroup;\n  user: User | null = null;\n  countries: Country[] = [];\n  states: State[] = [];\n  filteredStates: State[] = [];\n  load_data: boolean = false;\n  load_btn: boolean = false;\n\n  constructor(\n    private _router: Router,\n    private _formBuilder: FormBuilder,\n    private _validationService: ValidationService,\n    private _renderer: Renderer2,\n    private _toastService: ToastService,\n    private _initialConfigService: InitialConfigService,\n  ) {\n    this.createMasterAdminForm = this._formBuilder.group({\n      inputUserName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(20),\n          Validators.pattern(\"^[a-zA-Z0-9]+$\")\n        ]\n      ],\n      inputFirstName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputLastName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      inputPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      inputConfirmPassword: [\"\", [Validators.required]],\n      inputRole: [{ value: 'MasterAdministrator', disabled: true }, [Validators.required]],\n\n    }, { validator: this._validationService.mustMatch('inputPassword', 'inputConfirmPassword') });\n  }\n\n  ngOnInit(): void {\n  }\n\n  // goToNextStep() {\n  //   if (this.createMasterAdminForm.valid) {\n  //     this._sharedDataBetweenStepService.setStepData('accountSetup', this.createMasterAdminForm.value);\n  //     this._router.navigate(['/initial-config/step2']);\n  //   } else {\n  //     Object.keys(this.createMasterAdminForm.controls).forEach(field => {\n  //       const control = this.createMasterAdminForm.get(field);\n  //       control?.markAsTouched({ onlySelf: true });\n  //     });\n  //     this._toastService.showToast('error', 'Please fill all required fields');\n  //   }\n  // }\n\n  mapcreateMasterAdminFormToApiFormat(accountSetup: any): any {\n    const mappedData: any = {};\n    for (const key in accountSetup) {\n      if (accountSetup.hasOwnProperty(key)) {\n        const newKey = key.replace('input', '');\n        mappedData[newKey.charAt(0).toLowerCase() + newKey.slice(1)] = accountSetup[key];\n      }\n    }\n    return mappedData;\n  }    \n\n  onSubmit() {\n    this.load_btn = true;\n    const data = this.mapcreateMasterAdminFormToApiFormat(this.createMasterAdminForm.accountSetup);\n    delete data.confirmPassword;\n    data.role = 'MasterAdministrator';\n    this._initialConfigService.createMasterAdmin(data).subscribe(\n      response => {\n        this._toastService.showToast('success', 'An email has been sent to the ' + ' ' + data.emailAddress);\n        this.createMasterAdminForm = {};\n        this.router.navigate(['/initial-config/verification-pending']);\n        this.load_btn = false;\n      },\n      error => {\n        this.load_btn = false;\n        this.router.navigate(['/initial-config/step1']);\n        if (error.status === 400 && error.error.message === 'A Master Administrator is already registered.') {\n          this._toastService.showToast('error', 'A Master Administrator is already registered.');\n        } else {\n          this._toastService.showToast('error', `Error: ${error.message}`);\n        }\n      }\n    );\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}