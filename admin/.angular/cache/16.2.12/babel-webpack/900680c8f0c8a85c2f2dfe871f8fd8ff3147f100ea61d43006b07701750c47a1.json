{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { Business\n\n@Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})\nexport class BusinessSetupComponent implements OnInit {\n  businessSetupForm!: FormGroup;\n  loading: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastService: ToastService,\n    private businessService: BusinessService\n  ) { }\n\n  ngOnInit(): void {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.submitBusinessDetails(this.businessSetupForm.value).subscribe({\n      next: (response) => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: (error) => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}