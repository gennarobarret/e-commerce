{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet BusinessSetupComponent = class BusinessSetupComponent {\n  constructor(formBuilder, router, toastService, businessService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.toastService = toastService;\n    this.businessService = businessService;\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.submitBusinessDetails(this.businessSetupForm.value).subscribe({\n      next: response => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: error => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n};\nBusinessSetupComponent = __decorate([Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})], BusinessSetupComponent);\nexport { BusinessSetupComponent };","map":{"version":3,"names":["Component","Validators","BusinessSetupComponent","constructor","formBuilder","router","toastService","businessService","loading","ngOnInit","businessSetupForm","group","businessName","required","maxLength","taxId","pattern","paymentGateway","physicalLocation","shippingService","companyEmail","email","customerServiceEmail","returnsEmail","currency","logo","onFileChange","event","target","files","length","file","patchValue","submitBusinessDetails","invalid","showToast","value","subscribe","next","response","navigate","error","console","complete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { BusinessConfigService } from 'src/app/core/services/business-config.service';\n\n@Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})\nexport class BusinessSetupComponent implements OnInit {\n  businessSetupForm!: FormGroup;\n  loading: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastService: ToastService,\n    private businessService: BusinessService\n  ) { }\n\n  ngOnInit(): void {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.submitBusinessDetails(this.businessSetupForm.value).subscribe({\n      next: (response) => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: (error) => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}