{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { GLOBAL } from '../config/GLOBAL';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass BusinessConfigService {\n  constructor(_http) {\n    this._http = _http;\n    this.url = GLOBAL.url;\n  }\n  // Obtener la configuración actual del negocio\n  getBusinessConfig() {\n    return this._http.get(`${this.url}/getBusinessConfig`).pipe(map(response => response), catchError(error => {\n      console.error('Error getting business config:', error);\n      return of(null);\n    }));\n  }\n  // Crear o actualizar la configuración del negocio\n  saveBusinessConfig(configData) {\n    return this._http.post(`${this.url}/saveBusinessConfig`, configData).pipe(catchError(error => {\n      console.error('Error saving business config:', error);\n      return of(null);\n    }));\n  }\n  // Ejemplo de método para actualizar la configuración del negocio, si decides separar la creación de la actualización\n  updateBusinessConfig(businessConfigId, configData) {\n    return this._http.put(`${this.url}/updateBusinessConfig/${businessConfigId}`, configData).pipe(catchError(error => {\n      console.error('Error updating business config:', error);\n      return of(null);\n    }));\n  }\n  static #_ = this.ɵfac = function BusinessConfigService_Factory(t) {\n    return new (t || BusinessConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BusinessConfigService,\n    factory: BusinessConfigService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { BusinessConfigService };","map":{"version":3,"names":["of","catchError","map","GLOBAL","BusinessConfigService","constructor","_http","url","getBusinessConfig","get","pipe","response","error","console","saveBusinessConfig","configData","post","updateBusinessConfig","businessConfigId","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\business-config.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { GLOBAL } from '../config/GLOBAL';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessConfigService {\n\n  private url: string = GLOBAL.url;\n\n  constructor(private _http: HttpClient) { }\n\n  // Obtener la configuración actual del negocio\n  getBusinessConfig(): Observable<any> {\n    return this._http.get(`${this.url}/getBusinessConfig`).pipe(\n      map(response => response),\n      catchError(error => {\n        console.error('Error getting business config:', error);\n        return of(null);\n      })\n    );\n  }\n\n  // Crear o actualizar la configuración del negocio\n  saveBusinessConfig(configData: any): Observable<any> {\n    return this._http.post(`${this.url}/saveBusinessConfig`, configData).pipe(\n      catchError(error => {\n        console.error('Error saving business config:', error);\n        return of(null);\n      })\n    );\n  }\n\n  // Ejemplo de método para actualizar la configuración del negocio, si decides separar la creación de la actualización\n  updateBusinessConfig(businessConfigId: string, configData: any): Observable<any> {\n    return this._http.put(`${this.url}/updateBusinessConfig/${businessConfigId}`, configData).pipe(\n      catchError(error => {\n        console.error('Error updating business config:', error);\n        return of(null);\n      })\n    );\n  }\n}"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAChD,SAASC,MAAM,QAAQ,kBAAkB;;;AAEzC,MAGaC,qBAAqB;EAIhCC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,GAAG,GAAWJ,MAAM,CAACI,GAAG;EAES;EAEzC;EACAC,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,GAAG,oBAAoB,CAAC,CAACG,IAAI,CACzDR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAAC,EACzBV,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAOZ,EAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH;EACH;EAEA;EACAc,kBAAkBA,CAACC,UAAe;IAChC,OAAO,IAAI,CAACT,KAAK,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,GAAG,qBAAqB,EAAEQ,UAAU,CAAC,CAACL,IAAI,CACvET,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAOZ,EAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH;EACH;EAEA;EACAiB,oBAAoBA,CAACC,gBAAwB,EAAEH,UAAe;IAC5D,OAAO,IAAI,CAACT,KAAK,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,GAAG,yBAAyBW,gBAAgB,EAAE,EAAEH,UAAU,CAAC,CAACL,IAAI,CAC5FT,UAAU,CAACW,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAOZ,EAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH;EACH;EAAC,QAAAoB,CAAA,G;qBAnCUhB,qBAAqB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBrB,qBAAqB;IAAAsB,OAAA,EAArBtB,qBAAqB,CAAAuB,IAAA;IAAAC,UAAA,EAFpB;EAAM;;SAEPxB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}