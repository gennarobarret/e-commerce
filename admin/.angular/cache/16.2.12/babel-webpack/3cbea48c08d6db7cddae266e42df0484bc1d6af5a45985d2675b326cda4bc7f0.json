{"ast":null,"code":"\"use strict\";\n\n// // auth-token.interceptor.ts\n// import { Injectable } from '@angular/core';\n// import {\n//   HttpRequest,\n//   HttpHandler,\n//   HttpEvent,\n//   HttpInterceptor,\n//   HttpErrorResponse,\n//   HttpHeaders\n// } from '@angular/common/http';\n// import { Observable, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../core/services/auth.service';\n// @Injectable()\n// export class AuthTokenInterceptor implements HttpInterceptor {\n//   constructor(private authService: AuthService, private router: Router) { }\n//   private getHeaders(token?: string): HttpHeaders {\n//     let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     if (token) {\n//       headers = headers.set('Authorization', token);\n//     }\n//     return headers;\n//   }\n//   intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n//     const token = this.authService.getToken();\n//     let authRequest = request;\n//     if (token) {\n//       authRequest = request.clone({\n//         headers: this.getHeaders(token)\n//       });\n//     }\n//     return next.handle(authRequest).pipe(\n//       catchError((error: HttpErrorResponse) => {\n//         if (error.status === 401 || error.status === 403) {\n//           this.authService.logout();\n//           this.router.navigate(['/auth/login']);\n//         }\n//         return throwError(error);\n//       })\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\interceptors\\auth-token.interceptor.ts"],"sourcesContent":["// // auth-token.interceptor.ts\n// import { Injectable } from '@angular/core';\n// import {\n//   HttpRequest,\n//   HttpHandler,\n//   HttpEvent,\n//   HttpInterceptor,\n//   HttpErrorResponse,\n//   HttpHeaders\n// } from '@angular/common/http';\n// import { Observable, throwError } from 'rxjs';\n// import { catchError } from 'rxjs/operators';\n// import { Router } from '@angular/router';\n// import { AuthService } from '../core/services/auth.service';\n\n// @Injectable()\n// export class AuthTokenInterceptor implements HttpInterceptor {\n\n//   constructor(private authService: AuthService, private router: Router) { }\n\n//   private getHeaders(token?: string): HttpHeaders {\n//     let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     if (token) {\n//       headers = headers.set('Authorization', token);\n//     }\n//     return headers;\n//   }\n\n//   intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n//     const token = this.authService.getToken();\n//     let authRequest = request;\n//     if (token) {\n//       authRequest = request.clone({\n//         headers: this.getHeaders(token)\n//       });\n//     }\n\n//     return next.handle(authRequest).pipe(\n//       catchError((error: HttpErrorResponse) => {\n//         if (error.status === 401 || error.status === 403) {\n//           this.authService.logout();\n//           this.router.navigate(['/auth/login']);\n//         }\n//         return throwError(error);\n//       })\n//     );\n//   }\n// }"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}