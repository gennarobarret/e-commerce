{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/auth-google.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AdminDashboardComponent_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showData());\n    });\n    i0.ɵɵtext(1, \"data\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminDashboardComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AdminDashboardComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.logOut());\n    });\n    i0.ɵɵtext(1, \"close\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass AdminDashboardComponent {\n  constructor(authGoogleService, router) {\n    this.authGoogleService = authGoogleService;\n    this.router = router;\n    this.isAuthenticated = false;\n  }\n  // En tu AppComponent o en un componente relevante\n  ngOnInit() {\n    this.authGoogleService.initLogin();\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authGoogleService.isAuthenticated();\n  }\n  showData() {\n    const data = JSON.stringify(this.authGoogleService.getProfile());\n    console.log(data);\n  }\n  logOut() {\n    this.authGoogleService.logout();\n    this.router.navigate(['auth/login']);\n  }\n  static #_ = this.ɵfac = function AdminDashboardComponent_Factory(t) {\n    return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthGoogleService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminDashboardComponent,\n    selectors: [[\"app-admin-dashboard\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[\"type\", \"button\", \"class\", \"btn btn-success\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AdminDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"admin-dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, AdminDashboardComponent_button_2_Template, 2, 0, \"button\", 0);\n        i0.ɵɵtemplate(3, AdminDashboardComponent_button_3_Template, 2, 0, \"button\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n      }\n    },\n    dependencies: [i3.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { AdminDashboardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","AdminDashboardComponent_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","showData","ɵɵtext","ɵɵelementEnd","AdminDashboardComponent_button_3_Template_button_click_0_listener","_r5","ctx_r4","logOut","AdminDashboardComponent","constructor","authGoogleService","router","isAuthenticated","ngOnInit","initLogin","data","JSON","stringify","getProfile","console","log","logout","navigate","_","ɵɵdirectiveInject","i1","AuthGoogleService","i2","Router","_2","selectors","decls","vars","consts","template","AdminDashboardComponent_Template","rf","ctx","ɵɵtemplate","AdminDashboardComponent_button_2_Template","AdminDashboardComponent_button_3_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\admin\\dashboards\\admin-dashboard\\admin-dashboard.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\admin\\dashboards\\admin-dashboard\\admin-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthGoogleService } from 'src/app/core/services/auth-google.service';\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  isAuthenticated: boolean = false;\n\n  constructor(\n    private authGoogleService: AuthGoogleService,\n    private router: Router\n  ) { }\n\n\n  // En tu AppComponent o en un componente relevante\n  ngOnInit() {\n    this.authGoogleService.initLogin();\n  }\n\n  ngOnInit() {\n    this.isAuthenticated = this.authGoogleService.isAuthenticated();\n  }\n\n  showData() {\n    const data = JSON.stringify(this.authGoogleService.getProfile());\n    console.log(data);\n  }\n\n  logOut() {\n    this.authGoogleService.logout();\n    this.router.navigate(['auth/login']);\n  }\n\n}\n","<p>admin-dashboard works!</p>\n<button *ngIf=\"!isAuthenticated\" type=\"button\" class=\"btn btn-success\" (click)=\"showData()\">data</button>\n<button  *ngIf=\"!isAuthenticated\" type=\"button\" class=\"btn btn-danger\" (click)=\"logOut()\">close</button>"],"mappings":";;;;;;;ICCAA,EAAA,CAAAC,cAAA,gBAA4F;IAArBD,EAAA,CAAAE,UAAA,mBAAAC,kEAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IAACT,EAAA,CAAAU,MAAA,WAAI;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;;;IACzGX,EAAA,CAAAC,cAAA,gBAA0F;IAAnBD,EAAA,CAAAE,UAAA,mBAAAU,kEAAA;MAAAZ,EAAA,CAAAI,aAAA,CAAAS,GAAA;MAAA,MAAAC,MAAA,GAAAd,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAQ,WAAA,CAAAM,MAAA,CAAAC,MAAA,EAAQ;IAAA,EAAC;IAACf,EAAA,CAAAU,MAAA,YAAK;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;ADCxG,MAKaK,uBAAuB;EAGlCC,YACUC,iBAAoC,EACpCC,MAAc;IADd,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,eAAe,GAAY,KAAK;EAK5B;EAGJ;EACAC,QAAQA,CAAA;IACN,IAAI,CAACH,iBAAiB,CAACI,SAAS,EAAE;EACpC;EAEAD,QAAQA,CAAA;IACN,IAAI,CAACD,eAAe,GAAG,IAAI,CAACF,iBAAiB,CAACE,eAAe,EAAE;EACjE;EAEAX,QAAQA,CAAA;IACN,MAAMc,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,iBAAiB,CAACQ,UAAU,EAAE,CAAC;IAChEC,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EACnB;EAEAR,MAAMA,CAAA;IACJ,IAAI,CAACG,iBAAiB,CAACW,MAAM,EAAE;IAC/B,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAAC,QAAAC,CAAA,G;qBA1BUf,uBAAuB,EAAAhB,EAAA,CAAAgC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAlC,EAAA,CAAAgC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBrB,uBAAuB;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRpC5C,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAU,MAAA,6BAAsB;QAAAV,EAAA,CAAAW,YAAA,EAAI;QAC7BX,EAAA,CAAA8C,UAAA,IAAAC,yCAAA,oBAAyG;QACzG/C,EAAA,CAAA8C,UAAA,IAAAE,yCAAA,oBAAwG;;;QAD/FhD,EAAA,CAAAiD,SAAA,GAAsB;QAAtBjD,EAAA,CAAAkD,UAAA,UAAAL,GAAA,CAAAzB,eAAA,CAAsB;QACrBpB,EAAA,CAAAiD,SAAA,GAAsB;QAAtBjD,EAAA,CAAAkD,UAAA,UAAAL,GAAA,CAAAzB,eAAA,CAAsB;;;;;;;SDMnBJ,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}