{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/toast.service\";\nimport * as i4 from \"src/app/core/services/business-config.service\";\nimport * as i5 from \"@angular/common\";\nfunction BusinessSetupComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"div\", 12)(3, \"span\", 13);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass BusinessSetupComponent {\n  constructor(formBuilder, router, toastService, businessService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.toastService = toastService;\n    this.businessService = businessService;\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: response => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: error => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n  static #_ = this.ɵfac = function BusinessSetupComponent_Factory(t) {\n    return new (t || BusinessSetupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.BusinessConfigService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BusinessSetupComponent,\n    selectors: [[\"app-business-setup\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[1, \"container\", \"mt-5\"], [4, \"ngIf\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"businessName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"businessName\", \"formControlName\", \"businessName\", 1, \"form-control\"], [\"for\", \"taxId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"taxId\", \"formControlName\", \"taxId\", 1, \"form-control\"], [\"for\", \"logo\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"logo\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"]],\n    template: function BusinessSetupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Business Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, BusinessSetupComponent_ng_container_3_Template, 5, 0, \"ng-container\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function BusinessSetupComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.submitBusinessDetails();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Business Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Tax ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Business Logo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 9);\n        i0.ɵɵlistener(\"change\", function BusinessSetupComponent_Template_input_change_16_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.load_data);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.businessSetupForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { BusinessSetupComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","BusinessSetupComponent","constructor","formBuilder","router","toastService","businessService","loading","ngOnInit","businessSetupForm","group","businessName","required","maxLength","taxId","pattern","paymentGateway","physicalLocation","shippingService","companyEmail","email","customerServiceEmail","returnsEmail","currency","logo","onFileChange","event","target","files","length","file","patchValue","submitBusinessDetails","invalid","showToast","saveBusinessConfig","value","subscribe","next","response","navigate","error","console","complete","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","ToastService","i4","BusinessConfigService","_2","selectors","decls","vars","consts","template","BusinessSetupComponent_Template","rf","ctx","ɵɵtemplate","BusinessSetupComponent_ng_container_3_Template","ɵɵlistener","BusinessSetupComponent_Template_form_ngSubmit_4_listener","ɵɵelement","BusinessSetupComponent_Template_input_change_16_listener","$event","ɵɵadvance","ɵɵproperty","load_data"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { BusinessConfigService } from 'src/app/core/services/business-config.service';\n\n@Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})\nexport class BusinessSetupComponent implements OnInit {\n  businessSetupForm!: FormGroup;\n  loading: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastService: ToastService,\n    private businessService: BusinessConfigService\n  ) { }\n\n  ngOnInit(): void {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: (response) => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: (error) => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n}\n","<div class=\"container mt-5\">\n    <h2>Business Details</h2>\n        <ng-container *ngIf=\"load_data\">\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </ng-container>\n    <form [formGroup]=\"businessSetupForm\" (ngSubmit)=\"submitBusinessDetails()\" enctype=\"multipart/form-data\">\n        <div class=\"mb-3\">\n            <label for=\"businessName\" class=\"form-label\">Business Name</label>\n            <input type=\"text\" id=\"businessName\" class=\"form-control\" formControlName=\"businessName\">\n            <!-- Error Messages -->\n        </div>\n        <div class=\"mb-3\">\n            <label for=\"taxId\" class=\"form-label\">Tax ID</label>\n            <input type=\"text\" id=\"taxId\" class=\"form-control\" formControlName=\"taxId\">\n            <!-- Error Messages -->\n        </div>\n        <!-- Repite la estructura anterior para cada campo requerido -->\n        <div class=\"mb-3\">\n            <label for=\"logo\" class=\"form-label\">Business Logo</label>\n            <input type=\"file\" id=\"logo\" (change)=\"onFileChange($event)\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading\">Submit</button>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}