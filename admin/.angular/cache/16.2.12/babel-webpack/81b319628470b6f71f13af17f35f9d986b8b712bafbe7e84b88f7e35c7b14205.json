{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/toast.service\";\nimport * as i4 from \"src/app/core/services/business-config.service\";\nimport * as i5 from \"@angular/common\";\nfunction BusinessSetupComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 27)(2, \"div\", 28)(3, \"span\", 29);\n    i0.ɵɵtext(4, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction BusinessSetupComponent_div_22_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1, \" User image name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BusinessSetupComponent_div_22_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1, \" User image must be png, jpeg, jpg, gif, webp. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BusinessSetupComponent_div_22_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1, \" User image must be no larger than 5 MB. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BusinessSetupComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, BusinessSetupComponent_div_22_span_1_Template, 2, 0, \"span\", 31);\n    i0.ɵɵtemplate(2, BusinessSetupComponent_div_22_span_2_Template, 2, 0, \"span\", 32);\n    i0.ɵɵtemplate(3, BusinessSetupComponent_div_22_span_3_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"invalidFileType\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"invalidFileSize\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass BusinessSetupComponent {\n  constructor(formBuilder, router, toastService, businessService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.toastService = toastService;\n    this.businessService = businessService;\n    this.load_data = false;\n    this.load_btn = false;\n    this.loading = false;\n    this.imageUrl = '';\n  }\n  ngOnInit() {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n  fileChangeEvent(event) {\n    const inputElement = event.target;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n      this.validateAndUpdateImg(this.selectedFile);\n    }\n  }\n  validateAndUpdateImg(file) {\n    if (!this.imageUrl && !file) {\n      this.updateForm.get('inputProfileImage').setErrors({\n        required: true\n      });\n      return;\n    }\n    if (file) {\n      const errors = this.validateFileUpdate(file);\n      if (errors) {\n        this.updateForm.get('inputProfileImage').setErrors(errors);\n      }\n    }\n  }\n  validateFileUpdate(file) {\n    if (file) {\n      const validTypes = ['image/png', 'image/webp', 'image/jpg', 'image/gif', 'image/jpeg'];\n      if (validTypes.includes(file.type)) {\n        if (file.size <= 4000000) {\n          let reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => {\n            if (reader.result !== null) {\n              this.imageUrl = reader.result;\n              this.updateForm.patchValue({\n                file: reader.result\n              });\n            }\n          };\n          return null;\n        } else {\n          console.error('error', 'The image cannot exceed 4 mb');\n          this._toastService.showToast('error', 'The image cannot exceed 4 mb');\n          return {\n            invalidFileSize: true\n          };\n        }\n      } else {\n        console.error('The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        this._toastService.showToast('error', 'The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        return {\n          invalidFileType: true\n        };\n      }\n    }\n    return null;\n  }\n  triggerFileInput() {\n    this._renderer.selectRootElement(this.fileInput.nativeElement).click();\n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: response => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: error => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n  static #_ = this.ɵfac = function BusinessSetupComponent_Factory(t) {\n    return new (t || BusinessSetupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastService), i0.ɵɵdirectiveInject(i4.BusinessConfigService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BusinessSetupComponent,\n    selectors: [[\"app-business-setup\"]],\n    decls: 41,\n    vars: 8,\n    consts: [[1, \"py-5\", \"py-xl-10\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xxl-6\", \"col-xl-8\"], [1, \"text-primary\"], [1, \"card-title\", \"mb-4\"], [4, \"ngIf\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\", \"text-center\"], [1, \"col-md-8\", \"themed-grid-col\"], [1, \"pb-3\"], [1, \"row\"], [1, \"col-md-6\", \"themed-grid-col\"], [1, \"col-md-4\", \"themed-grid-col\"], [\"alt\", \"logo\", 1, \"img-account-profile\", \"rounded-circle\", \"mb-2\", 3, \"src\"], [1, \"small\", \"font-italic\", \"text-muted\", \"mb-4\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"file\", \"formControlName\", \"inputProfileImage\", \"title\", \"logo\", 1, \"d-none\", 3, \"ngClass\", \"change\"], [\"fileInput\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"mb-3\"], [\"for\", \"businessName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"businessName\", \"formControlName\", \"businessName\", 1, \"form-control\"], [\"for\", \"taxId\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"taxId\", \"formControlName\", \"taxId\", 1, \"form-control\"], [\"for\", \"logo\", 1, \"form-label\"], [\"type\", \"file\", \"id\", \"logo\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"sr-only\"], [1, \"text-danger\"], [\"class\", \"small font-italic mb-4\", 4, \"ngIf\"], [\"class\", \"small font-italic  mb-4\", 4, \"ngIf\"], [1, \"small\", \"font-italic\", \"mb-4\"]],\n    template: function BusinessSetupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n        i0.ɵɵtext(4, \"Step 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 4);\n        i0.ɵɵtext(6, \"Enter your business details and information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, BusinessSetupComponent_ng_container_7_Template, 5, 0, \"ng-container\", 5);\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function BusinessSetupComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.submitBusinessDetails();\n        });\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9);\n        i0.ɵɵtext(12, \" .col-md-8 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n        i0.ɵɵtext(15, \".col-md-6\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11);\n        i0.ɵɵtext(17, \".col-md-6\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 12);\n        i0.ɵɵelement(19, \"img\", 13);\n        i0.ɵɵelementStart(20, \"div\", 14);\n        i0.ɵɵtext(21, \" PNG, JPEG, JPG,GIF, WEBP NO larger than 5 MB \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, BusinessSetupComponent_div_22_Template, 4, 3, \"div\", 15);\n        i0.ɵɵelementStart(23, \"input\", 16, 17);\n        i0.ɵɵlistener(\"change\", function BusinessSetupComponent_Template_input_change_23_listener($event) {\n          return ctx.fileChangeEvent($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function BusinessSetupComponent_Template_button_click_25_listener() {\n          return ctx.triggerFileInput();\n        });\n        i0.ɵɵtext(26, \"Upload new image \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 19)(28, \"label\", 20);\n        i0.ɵɵtext(29, \"Business Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 19)(32, \"label\", 22);\n        i0.ɵɵtext(33, \"Tax ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 19)(36, \"label\", 24);\n        i0.ɵɵtext(37, \"Business Logo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"input\", 25);\n        i0.ɵɵlistener(\"change\", function BusinessSetupComponent_Template_input_change_38_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"button\", 26);\n        i0.ɵɵtext(40, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.load_data);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.businessSetupForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"src\", ctx.imageUrl, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_3_0.invalid) && (((tmp_3_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_3_0.dirty) || ((tmp_3_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_3_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ((tmp_4_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_4_0.dirty) || ((tmp_4_0 = ctx.businessSetupForm.get(\"inputProfileImage\")) == null ? null : tmp_4_0.touched))));\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"disabled\", ctx.loading);\n      }\n    },\n    dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { BusinessSetupComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵtemplate","BusinessSetupComponent_div_22_span_1_Template","BusinessSetupComponent_div_22_span_2_Template","BusinessSetupComponent_div_22_span_3_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r1","businessSetupForm","get","errors","tmp_1_0","tmp_2_0","BusinessSetupComponent","constructor","formBuilder","router","toastService","businessService","load_data","load_btn","loading","imageUrl","ngOnInit","group","businessName","required","maxLength","taxId","pattern","paymentGateway","physicalLocation","shippingService","companyEmail","email","customerServiceEmail","returnsEmail","currency","logo","fileChangeEvent","event","inputElement","target","files","length","selectedFile","validateAndUpdateImg","file","updateForm","setErrors","validateFileUpdate","validTypes","includes","type","size","reader","FileReader","readAsDataURL","onload","result","patchValue","console","error","_toastService","showToast","invalidFileSize","invalidFileType","triggerFileInput","_renderer","selectRootElement","fileInput","nativeElement","click","onFileChange","submitBusinessDetails","invalid","saveBusinessConfig","value","subscribe","next","response","navigate","complete","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","ToastService","i4","BusinessConfigService","_2","selectors","decls","vars","consts","template","BusinessSetupComponent_Template","rf","ctx","BusinessSetupComponent_ng_container_7_Template","ɵɵlistener","BusinessSetupComponent_Template_form_ngSubmit_8_listener","ɵɵelement","BusinessSetupComponent_div_22_Template","BusinessSetupComponent_Template_input_change_23_listener","$event","BusinessSetupComponent_Template_button_click_25_listener","BusinessSetupComponent_Template_input_change_38_listener","ɵɵsanitizeUrl","tmp_3_0","dirty","touched","ɵɵpureFunction1","_c0","tmp_4_0"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\business-setup\\business-setup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { BusinessConfigService } from 'src/app/core/services/business-config.service';\n\n@Component({\n  selector: 'app-business-setup',\n  templateUrl: './business-setup.component.html',\n  styleUrls: ['./business-setup.component.css']\n})\nexport class BusinessSetupComponent implements OnInit {\n  businessSetupForm!: FormGroup;\n  load_data: boolean = false;\n  load_btn: boolean = false;\n  loading: boolean = false;\n  imageUrl: any | ArrayBuffer = '';\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastService: ToastService,\n    private businessService: BusinessConfigService\n  ) { }\n\n  ngOnInit(): void {\n    this.businessSetupForm = this.formBuilder.group({\n      businessName: ['', [Validators.required, Validators.maxLength(100)]],\n      taxId: ['', [Validators.required, Validators.pattern('[A-Z0-9]+')]],\n      paymentGateway: ['', Validators.required],\n      physicalLocation: ['', Validators.required],\n      shippingService: ['', Validators.required],\n      companyEmail: ['', [Validators.required, Validators.email]],\n      customerServiceEmail: ['', [Validators.required, Validators.email]],\n      returnsEmail: ['', [Validators.required, Validators.email]],\n      currency: ['', Validators.required],\n      // Consider adding file upload validators if necessary\n      logo: [null]\n    });\n  }\n\n\n\n\n  fileChangeEvent(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.selectedFile = inputElement.files[0];\n      this.validateAndUpdateImg(this.selectedFile);\n    }\n  }\n\n  private validateAndUpdateImg(file: File) {\n    if (!this.imageUrl && !file) {\n      this.updateForm.get('inputProfileImage')!.setErrors({ required: true });\n      return;\n    }\n    if (file) {\n      const errors = this.validateFileUpdate(file);\n      if (errors) {\n        this.updateForm.get('inputProfileImage')!.setErrors(errors);\n      }\n    }\n  }\n\n  private validateFileUpdate(file: File): { [key: string]: any } | null {\n    if (file) {\n      const validTypes = ['image/png', 'image/webp', 'image/jpg', 'image/gif', 'image/jpeg'];\n      if (validTypes.includes(file.type)) {\n        if (file.size <= 4000000) {\n          let reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = () => {\n            if (reader.result !== null) {\n              this.imageUrl = reader.result as string;\n              this.updateForm.patchValue({\n                file: reader.result\n              });\n            }\n          }\n          return null;\n        } else {\n          console.error('error', 'The image cannot exceed 4 mb');\n          this._toastService.showToast('error', 'The image cannot exceed 4 mb');\n          return { invalidFileSize: true };\n        }\n      } else {\n        console.error('The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        this._toastService.showToast('error', 'The file must be a PNG, WEBP, JPG, GIF, or JPEG image.');\n        return { invalidFileType: true };\n      }\n    }\n\n    return null;\n  }\n\n  triggerFileInput(): void {\n    this._renderer.selectRootElement(this.fileInput.nativeElement).click();\n  }\n\n  onFileChange(event: any) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.businessSetupForm.patchValue({\n        logo: file\n      });\n    }\n  }\n\n  submitBusinessDetails() {\n    if (this.businessSetupForm.invalid) {\n      this.toastService.showToast('error', 'Please fill all required fields correctly.');\n      return;\n    }\n\n    this.loading = true;\n    // Aquí iría la lógica para enviar los datos al servidor, incluyendo la carga del archivo del logo\n    // Simulamos una llamada al servicio de negocio\n    this.businessService.saveBusinessConfig(this.businessSetupForm.value).subscribe({\n      next: (response) => {\n        this.toastService.showToast('success', 'Business details saved successfully.');\n        this.router.navigate(['/next-step-route']);\n      },\n      error: (error) => {\n        this.toastService.showToast('error', 'An error occurred while saving business details.');\n        console.error('Error saving business details:', error);\n      },\n      complete: () => this.loading = false\n    });\n  }\n}\n","<!-- Wizard tab pane item 1 -->\n<div class=\"py-5 py-xl-10\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-xxl-6 col-xl-8\">\n            <h3 class=\"text-primary\">Step 2</h3>\n            <h5 class=\"card-title mb-4\">Enter your business details and information</h5>\n            <ng-container *ngIf=\"load_data\">\n                <div class=\"d-flex justify-content-center\">\n                    <div class=\"spinner-border text-primary\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            </ng-container>\n            <form [formGroup]=\"businessSetupForm\" (ngSubmit)=\"submitBusinessDetails()\" enctype=\"multipart/form-data\">\n                <div class=\"row mb-3 text-center\">\n                    <div class=\"col-md-8 themed-grid-col\">\n                        <div class=\"pb-3\">\n                            .col-md-8\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6 themed-grid-col\">.col-md-6</div>\n                            <div class=\"col-md-6 themed-grid-col\">.col-md-6</div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-4 themed-grid-col\"><!-- Profile picture image-->\n                    <img class=\"img-account-profile rounded-circle mb-2\" [src]=\"imageUrl\" alt=\"logo\" />\n                    <!-- Profile picture help block-->\n                    <div class=\"small font-italic text-muted mb-4\">\n                        PNG, JPEG, JPG,GIF, WEBP NO larger than 5 MB\n                    </div>\n                    <div *ngIf=\"businessSetupForm.get('inputProfileImage')?.invalid && (businessSetupForm.get('inputProfileImage')?.dirty || businessSetupForm.get('inputProfileImage')?.touched)\"\n                        class=\"text-danger\">\n                        <span class=\"small font-italic mb-4\" *ngIf=\"businessSetupForm.get('inputProfileImage')?.errors?.['required']\">\n                            User image name is required.\n                        </span>\n                        <span class=\"small font-italic  mb-4\" *ngIf=\"businessSetupForm.get('inputProfileImage')?.errors?.['invalidFileType']\">\n                            User image must be png, jpeg, jpg, gif, webp.\n                        </span>\n                        <span class=\"small font-italic  mb-4\" *ngIf=\"businessSetupForm.get('inputProfileImage')?.errors?.['invalidFileSize']\">\n                            User image must be no larger than 5 MB.\n                        </span>\n                    </div>\n                    <!-- Hidden file input for selecting image -->\n                    <input type=\"file\" #fileInput class=\"d-none\" (change)=\"fileChangeEvent($event)\" formControlName=\"inputProfileImage\"\n                        title=\"logo\"\n                        [ngClass]=\"{'is-invalid': businessSetupForm.get('inputProfileImage')?.invalid && (businessSetupForm.get('inputProfileImage')?.dirty || businessSetupForm.get('inputProfileImage')?.touched)}\" />\n                    <!-- Profile picture upload button-->\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"triggerFileInput()\">Upload new\n                        image\n                    </button></div>\n                </div>\n            \n                <div class=\"mb-3\">\n                    <label for=\"businessName\" class=\"form-label\">Business Name</label>\n                    <input type=\"text\" id=\"businessName\" class=\"form-control\" formControlName=\"businessName\">\n                    <!-- Error Messages -->\n                </div>\n                <div class=\"mb-3\">\n                    <label for=\"taxId\" class=\"form-label\">Tax ID</label>\n                    <input type=\"text\" id=\"taxId\" class=\"form-control\" formControlName=\"taxId\">\n                    <!-- Error Messages -->\n                </div>\n                <!-- Repite la estructura anterior para cada campo requerido -->\n                <div class=\"mb-3\">\n                    <label for=\"logo\" class=\"form-label\">Business Logo</label>\n                    <input type=\"file\" id=\"logo\" (change)=\"onFileChange($event)\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loading\">Submit</button>\n            </form>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}