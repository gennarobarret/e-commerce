{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet GoogleSigninComponent = class GoogleSigninComponent {\n  constructor(_router, _authService, _ngZone // Inyectar NgZone\n  ) {\n    this._router = _router;\n    this._authService = _authService;\n    this._ngZone = _ngZone;\n  } // Inyectar Router\n  ngOnInit() {\n    this.renderButton();\n  }\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: response => this.onSignIn(response)\n    });\n    google.accounts.id.renderButton(document.getElementById(\"g_id_onload\"), {\n      theme: \"outline\",\n      size: \"large\"\n    });\n    google.accounts.id.prompt();\n  }\n  // Dentro de GoogleSigninComponent\n  onSignIn(response) {\n    console.log('Usuario ha iniciado sesión:', response);\n    const userToken = response.credential;\n    this._authService.authenticateWithGoogle(userToken).subscribe({\n      next: data => {\n        console.log('Datos del usuario guardados/recuperados:', data);\n        this._router.navigate(['/dashboard']); // Navegar a otra vista tras la autenticación exitosa\n      },\n\n      error: error => {\n        console.error('Error al enviar token al backend:', error);\n        // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n      }\n    });\n  }\n};\n\nGoogleSigninComponent = __decorate([Component({\n  selector: 'app-google-signin',\n  templateUrl: './google-signin.component.html',\n  styleUrls: ['./google-signin.component.css']\n})], GoogleSigninComponent);\nexport { GoogleSigninComponent };","map":{"version":3,"names":["Component","GoogleSigninComponent","constructor","_router","_authService","_ngZone","ngOnInit","renderButton","google","accounts","id","initialize","client_id","callback","response","onSignIn","document","getElementById","theme","size","prompt","console","log","userToken","credential","authenticateWithGoogle","subscribe","next","data","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\google-signin\\google-signin.component.ts"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/_router'; // Importar Router\nimport { jwtDecode } from 'jwt-decode';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\ndeclare var google: any;\n\ninterface GoogleSignInResponse {\n  clientId: string;\n  credential: string;\n  select_by: string;\n}\n\n@Component({\n  selector: 'app-google-signin',\n  templateUrl: './google-signin.component.html',\n  styleUrls: ['./google-signin.component.css']\n})\n\nexport class GoogleSigninComponent implements OnInit {\n  constructor(\n    private _router: Router,\n    private _authService: AuthService,\n    private _ngZone: NgZone // Inyectar NgZone\n  ) { } // Inyectar Router\n\n  ngOnInit(): void {\n    this.renderButton();\n  }\n\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: (response: GoogleSignInResponse) => this.onSignIn(response),\n    });\n\n    google.accounts.id.renderButton(\n      document.getElementById(\"g_id_onload\"),\n      { theme: \"outline\", size: \"large\" }\n    );\n\n    google.accounts.id.prompt();\n  }\n\n  // Dentro de GoogleSigninComponent\n  onSignIn(response: GoogleSignInResponse) {\n    console.log('Usuario ha iniciado sesión:', response);\n    const userToken = response.credential;\n    this._authService.authenticateWithGoogle(userToken).subscribe({\n      next: (data) => {\n        console.log('Datos del usuario guardados/recuperados:', data);\n        this._router.navigate(['/dashboard']); // Navegar a otra vista tras la autenticación exitosa\n      },\n      error: (error) => {\n        console.error('Error al enviar token al backend:', error);\n        // Aquí puedes manejar errores, como mostrar un mensaje al usuario\n      }\n    });\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAwB,eAAe;AAmBzD,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAChCC,YACUC,OAAe,EACfC,YAAyB,EACzBC,OAAe,CAAC;EAAA,E;IAFhB,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,OAAO,GAAPA,OAAO;EACb,CAAC,CAAC;EAENC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACVC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;MAC5BC,SAAS,EAAE,0EAA0E;MACrFC,QAAQ,EAAGC,QAA8B,IAAK,IAAI,CAACC,QAAQ,CAACD,QAAQ;KACrE,CAAC;IAEFN,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACH,YAAY,CAC7BS,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,EACtC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAO,CAAE,CACpC;IAEDX,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACU,MAAM,EAAE;EAC7B;EAEA;EACAL,QAAQA,CAACD,QAA8B;IACrCO,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAER,QAAQ,CAAC;IACpD,MAAMS,SAAS,GAAGT,QAAQ,CAACU,UAAU;IACrC,IAAI,CAACpB,YAAY,CAACqB,sBAAsB,CAACF,SAAS,CAAC,CAACG,SAAS,CAAC;MAC5DC,IAAI,EAAGC,IAAI,IAAI;QACbP,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEM,IAAI,CAAC;QAC7D,IAAI,CAACzB,OAAO,CAAC0B,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC;;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfT,OAAO,CAACS,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD;MACF;KACD,CAAC;EACJ;CAGD;;AA1CY7B,qBAAqB,GAAA8B,UAAA,EANjC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EAEWjC,qBAAqB,CA0CjC;SA1CYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}