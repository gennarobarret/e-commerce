{"ast":null,"code":"import { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/initial-config.service\";\nimport * as i2 from \"@angular/router\";\nclass SetupVerificationGuard {\n  constructor(initialConfigService, router) {\n    this.initialConfigService = initialConfigService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.initialConfigService.InitialCheck().pipe(switchMap(response => {\n      if (response.setupRequired) {\n        // Si se requiere configuración inicial, redirige a la ruta de configuración inicial\n        this.router.navigate(['/initial-config']);\n        return of(false);\n      }\n      // Si no se requiere configuración inicial, permite el acceso a /auth/login\n      return of(true);\n    }));\n  }\n  static #_ = this.ɵfac = function SetupVerificationGuard_Factory(t) {\n    return new (t || SetupVerificationGuard)(i0.ɵɵinject(i1.InitialConfigService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SetupVerificationGuard,\n    factory: SetupVerificationGuard.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { SetupVerificationGuard };","map":{"version":3,"names":["of","switchMap","SetupVerificationGuard","constructor","initialConfigService","router","canActivate","InitialCheck","pipe","response","setupRequired","navigate","_","i0","ɵɵinject","i1","InitialConfigService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\root-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { InitialConfigService } from '../services/initial-config.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SetupVerificationGuard implements CanActivate {\n    constructor(\n        private initialConfigService: InitialConfigService,\n        private router: Router\n    ) { }\n\n    canActivate(): Observable<boolean> {\n        return this.initialConfigService.InitialCheck().pipe(\n            switchMap(response => {\n                if (response.setupRequired) {\n                    // Si se requiere configuración inicial, redirige a la ruta de configuración inicial\n                    this.router.navigate(['/initial-config']);\n                    return of(false);\n                }\n                // Si no se requiere configuración inicial, permite el acceso a /auth/login\n                return of(true);\n            })\n        );\n    }\n}\n\n"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,SAAS,QAAQ,gBAAgB;;;;AAG1C,MAGaC,sBAAsB;EAC/BC,YACYC,oBAA0C,EAC1CC,MAAc;IADd,KAAAD,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;EACd;EAEJC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACF,oBAAoB,CAACG,YAAY,EAAE,CAACC,IAAI,CAChDP,SAAS,CAACQ,QAAQ,IAAG;MACjB,IAAIA,QAAQ,CAACC,aAAa,EAAE;QACxB;QACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;QACzC,OAAOX,EAAE,CAAC,KAAK,CAAC;;MAEpB;MACA,OAAOA,EAAE,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,CACL;EACL;EAAC,QAAAY,CAAA,G;qBAlBQV,sBAAsB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAtBjB,sBAAsB;IAAAkB,OAAA,EAAtBlB,sBAAsB,CAAAmB,IAAA;IAAAC,UAAA,EAFnB;EAAM;;SAETpB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}