{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ReviewAndSubmitComponent = class ReviewAndSubmitComponent {\n  constructor(router, _sharedDataBetweenStepService, _initialConfigService, _toastService) {\n    this.router = router;\n    this._sharedDataBetweenStepService = _sharedDataBetweenStepService;\n    this._initialConfigService = _initialConfigService;\n    this._toastService = _toastService;\n    this.load_data = false;\n    this.load_btn = false;\n  }\n  ngOnInit() {\n    this.loadFormData();\n  }\n  isFormDataEmpty() {\n    if (!this.formData) {\n      return true;\n    }\n    return Object.keys(this.formData).length === 0;\n  }\n  loadFormData() {\n    this.formData = this._sharedDataBetweenStepService.getAllData();\n    console.log(\"ðŸš€ ~ ReviewAndSubmitComponent ~ loadFormData ~  this.formData:\", this.formData);\n  }\n  goToPreviousStep() {\n    this.router.navigate(['/initial-config/step3']);\n  }\n  mapFormDataToApiFormat(accountSetup) {\n    const mappedData = {};\n    for (const key in accountSetup) {\n      if (accountSetup.hasOwnProperty(key)) {\n        const newKey = key.replace('input', '');\n        mappedData[newKey.charAt(0).toLowerCase() + newKey.slice(1)] = accountSetup[key];\n      }\n    }\n    return mappedData;\n  }\n  onSubmit() {\n    // this.load_btn = true;\n    // const data = this.mapFormDataToApiFormat(this.formData.accountSetup);\n    // delete data.confirmPassword;\n    // data.role = 'MasterAdministrator';\n    // this._initialConfigService.createMasterAdmin(data).subscribe(\n    //   response => {\n    //     this._toastService.showToast('success', 'An email has been sent to the '+' '+data.emailAddress);\n    //     this.formData = {};\n    //     this.router.navigate(['/initial-config/verification-pending']);\n    //     this.load_btn = false;\n    //   },\n    //   error => {\n    //     this.load_btn = false;\n    //     this.router.navigate(['/initial-config/step1']);\n    //     if (error.status === 400 && error.error.message === 'A Master Administrator is already registered.') {\n    //       this._toastService.showToast('error', 'A Master Administrator is already registered.');\n    //     } else {\n    //       this._toastService.showToast('error', `Error: ${error.message}`);\n    //     }\n    //   }\n    // );\n  }\n};\nReviewAndSubmitComponent = __decorate([Component({\n  selector: 'app-review-and-submit',\n  templateUrl: './review-and-submit.component.html',\n  styleUrls: ['./review-and-submit.component.css']\n})], ReviewAndSubmitComponent);\nexport { ReviewAndSubmitComponent };","map":{"version":3,"names":["Component","ReviewAndSubmitComponent","constructor","router","_sharedDataBetweenStepService","_initialConfigService","_toastService","load_data","load_btn","ngOnInit","loadFormData","isFormDataEmpty","formData","Object","keys","length","getAllData","console","log","goToPreviousStep","navigate","mapFormDataToApiFormat","accountSetup","mappedData","key","hasOwnProperty","newKey","replace","charAt","toLowerCase","slice","onSubmit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\review-and-submit\\review-and-submit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SharedDataBetweenStepService } from 'src/app/core/services/shared-data-between-step.service';\n// import { InitialConfigService } from 'src/app/core/services/initial-config.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n\n@Component({\n  selector: 'app-review-and-submit',\n  templateUrl: './review-and-submit.component.html',\n  styleUrls: ['./review-and-submit.component.css']\n})\nexport class ReviewAndSubmitComponent implements OnInit {\n  formData: any;\n  load_data: boolean = false;\n  load_btn: boolean = false;\n\n  constructor(\n    private router: Router,\n    private _sharedDataBetweenStepService: SharedDataBetweenStepService,\n    private _initialConfigService: InitialConfigService,\n    private _toastService: ToastService,\n  ) { }\n\n  ngOnInit() {\n    this.loadFormData();\n  }\n\n  isFormDataEmpty(): boolean {\n    if (!this.formData) {\n      return true;\n    }\n    return Object.keys(this.formData).length === 0;\n  }\n\n\n  loadFormData() {\n    this.formData = this._sharedDataBetweenStepService.getAllData();\n    console.log(\"ðŸš€ ~ ReviewAndSubmitComponent ~ loadFormData ~  this.formData:\", this.formData)\n  }\n\n  goToPreviousStep() {\n    this.router.navigate(['/initial-config/step3']);\n  }\n\n  mapFormDataToApiFormat(accountSetup: any): any {\n    const mappedData: any = {};\n    for (const key in accountSetup) {\n      if (accountSetup.hasOwnProperty(key)) {\n        const newKey = key.replace('input', '');\n        mappedData[newKey.charAt(0).toLowerCase() + newKey.slice(1)] = accountSetup[key];\n      }\n    }\n    return mappedData;\n  }\n\n  onSubmit() {\n    // this.load_btn = true;\n    // const data = this.mapFormDataToApiFormat(this.formData.accountSetup);\n    // delete data.confirmPassword;\n    // data.role = 'MasterAdministrator';\n    // this._initialConfigService.createMasterAdmin(data).subscribe(\n    //   response => {\n    //     this._toastService.showToast('success', 'An email has been sent to the '+' '+data.emailAddress);\n    //     this.formData = {};\n    //     this.router.navigate(['/initial-config/verification-pending']);\n    //     this.load_btn = false;\n    //   },\n    //   error => {\n    //     this.load_btn = false;\n    //     this.router.navigate(['/initial-config/step1']);\n    //     if (error.status === 400 && error.error.message === 'A Master Administrator is already registered.') {\n    //       this._toastService.showToast('error', 'A Master Administrator is already registered.');\n    //     } else {\n    //       this._toastService.showToast('error', `Error: ${error.message}`);\n    //     }\n    //   }\n    // );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAYjD,IAAaC,wBAAwB,GAArC,MAAaA,wBAAwB;EAKnCC,YACUC,MAAc,EACdC,6BAA2D,EAC3DC,qBAA2C,EAC3CC,aAA2B;IAH3B,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,6BAA6B,GAA7BA,6BAA6B;IAC7B,KAAAC,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAC,aAAa,GAAbA,aAAa;IAPvB,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,QAAQ,GAAY,KAAK;EAOrB;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAC,eAAeA,CAAA;IACb,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,OAAO,IAAI;;IAEb,OAAOC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACF,QAAQ,CAAC,CAACG,MAAM,KAAK,CAAC;EAChD;EAGAL,YAAYA,CAAA;IACV,IAAI,CAACE,QAAQ,GAAG,IAAI,CAACR,6BAA6B,CAACY,UAAU,EAAE;IAC/DC,OAAO,CAACC,GAAG,CAAC,gEAAgE,EAAE,IAAI,CAACN,QAAQ,CAAC;EAC9F;EAEAO,gBAAgBA,CAAA;IACd,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;EACjD;EAEAC,sBAAsBA,CAACC,YAAiB;IACtC,MAAMC,UAAU,GAAQ,EAAE;IAC1B,KAAK,MAAMC,GAAG,IAAIF,YAAY,EAAE;MAC9B,IAAIA,YAAY,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;QACpC,MAAME,MAAM,GAAGF,GAAG,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;QACvCJ,UAAU,CAACG,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGR,YAAY,CAACE,GAAG,CAAC;;;IAGpF,OAAOD,UAAU;EACnB;EAEAQ,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;CAEH;AAnEY9B,wBAAwB,GAAA+B,UAAA,EALpChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACWlC,wBAAwB,CAmEpC;SAnEYA,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}