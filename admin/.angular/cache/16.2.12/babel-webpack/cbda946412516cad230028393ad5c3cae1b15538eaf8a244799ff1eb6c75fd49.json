{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.forgotPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n  onSubmit() {\n    if (this.forgotPasswordForm.valid) {\n      this.authService.forgotPassword(this.forgotPasswordForm.value.email).subscribe({\n        next: response => {\n          // Manejar respuesta exitosa\n          alert('Si el correo electrónico existe en nuestro sistema, se enviará un enlace de restablecimiento de contraseña.');\n        },\n        error: error => {\n          // Manejar error\n          console.error('Error al solicitar el restablecimiento de contraseña:', error);\n        }\n      });\n    }\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})], ForgotPasswordComponent);\nexport { ForgotPasswordComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","ForgotPasswordComponent","constructor","authService","forgotPasswordForm","email","required","onSubmit","valid","forgotPassword","value","subscribe","next","response","alert","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  forgotPasswordForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  constructor(private authService: AuthService) { }\n\n  onSubmit() {\n    if (this.forgotPasswordForm.valid) {\n      this.authService.forgotPassword(this.forgotPasswordForm.value.email)\n        .subscribe({\n          next: (response) => {\n            // Manejar respuesta exitosa\n            alert('Si el correo electrónico existe en nuestro sistema, se enviará un enlace de restablecimiento de contraseña.');\n          },\n          error: (error) => {\n            // Manejar error\n            console.error('Error al solicitar el restablecimiento de contraseña:', error);\n          }\n        });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAQnE,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAKlCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAJ/B,KAAAC,kBAAkB,GAAG,IAAIL,SAAS,CAAC;MACjCM,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACK,KAAK,CAAC;KACnE,CAAC;EAE8C;EAEhDE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,kBAAkB,CAACI,KAAK,EAAE;MACjC,IAAI,CAACL,WAAW,CAACM,cAAc,CAAC,IAAI,CAACL,kBAAkB,CAACM,KAAK,CAACL,KAAK,CAAC,CACjEM,SAAS,CAAC;QACTC,IAAI,EAAGC,QAAQ,IAAI;UACjB;UACAC,KAAK,CAAC,6GAA6G,CAAC;QACtH,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACf;UACAC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;QAC/E;OACD,CAAC;;EAER;CACD;AAtBYd,uBAAuB,GAAAgB,UAAA,EALnCpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWnB,uBAAuB,CAsBnC;SAtBYA,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}