{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ActivationComponent = class ActivationComponent {\n  constructor(_route, _router, _initialConfigService) {\n    this._route = _route;\n    this._router = _router;\n    this._initialConfigService = _initialConfigService;\n  }\n  ngOnInit() {\n    const token = this._route.snapshot.paramMap.get('token');\n    if (token) {\n      this._initialConfigService.activateAccount(token).subscribe({\n        next: response => {\n          // Manejar respuesta exitosa\n          // Redirigir al usuario a la página de inicio de sesión o confirmación\n          this._router.navigate(['/auth/login']);\n        },\n        error: error => {\n          // Manejar errores (token inválido, cuenta ya activada, etc.)\n        }\n      });\n    }\n  }\n};\nActivationComponent = __decorate([Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})], ActivationComponent);\nexport { ActivationComponent };","map":{"version":3,"names":["Component","ActivationComponent","constructor","_route","_router","_initialConfigService","ngOnInit","token","snapshot","paramMap","get","activateAccount","subscribe","next","response","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\activation\\activation.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/initial-config.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\n\nexport class ActivationComponent implements OnInit {\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _initialConfigService: AuthService\n  ) { }\n\n  ngOnInit() {\n    const token = this._route.snapshot.paramMap.get('token');\n    if (token) {\n      this._initialConfigService.activateAccount(token).subscribe({\n        next: (response) => {\n          // Manejar respuesta exitosa\n          // Redirigir al usuario a la página de inicio de sesión o confirmación\n          this._router.navigate(['/auth/login']);\n        },\n        error: (error) => {\n          // Manejar errores (token inválido, cuenta ya activada, etc.)\n        }\n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAWjD,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAE9BC,YACUC,MAAsB,EACtBC,OAAe,EACfC,qBAAkC;IAFlC,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,qBAAqB,GAArBA,qBAAqB;EAC3B;EAEJC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;IACxD,IAAIH,KAAK,EAAE;MACT,IAAI,CAACF,qBAAqB,CAACM,eAAe,CAACJ,KAAK,CAAC,CAACK,SAAS,CAAC;QAC1DC,IAAI,EAAGC,QAAQ,IAAI;UACjB;UACA;UACA,IAAI,CAACV,OAAO,CAACW,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;QACxC,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACf;QAAA;OAEH,CAAC;;EAEN;CACD;AAvBYf,mBAAmB,GAAAgB,UAAA,EAN/BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EAEWnB,mBAAmB,CAuB/B;SAvBYA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}