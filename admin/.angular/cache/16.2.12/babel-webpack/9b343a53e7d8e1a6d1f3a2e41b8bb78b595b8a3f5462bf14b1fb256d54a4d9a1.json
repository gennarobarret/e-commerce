{"ast":null,"code":"import { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/initial-config.service\";\nimport * as i2 from \"@angular/router\";\nclass initialConfigGuard {\n  constructor(initialConfigService, router) {\n    this.initialConfigService = initialConfigService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.initialConfigService.InitialCheck().pipe(switchMap(response => {\n      if (response.setupRequired) {\n        // Si se requiere configuración inicial, redirige a la ruta de configuración\n        this.router.navigate(['/initial-config']);\n        return of(false);\n      } else if (response.verificationRequired) {\n        // Si se requiere verificación, redirige a la ruta de reenvío de correo de verificación\n        this.router.navigate(['/initial-config/resend-email-verification']);\n        return of(false);\n      }\n      // Si no se requiere configuración inicial ni verificación, permite el acceso o redirige al login\n      this.router.navigate(['/auth/login']);\n      return of(false);\n    }));\n  }\n  static #_ = this.ɵfac = function initialConfigGuard_Factory(t) {\n    return new (t || initialConfigGuard)(i0.ɵɵinject(i1.InitialConfigService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: initialConfigGuard,\n    factory: initialConfigGuard.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { initialConfigGuard };","map":{"version":3,"names":["of","switchMap","initialConfigGuard","constructor","initialConfigService","router","canActivate","InitialCheck","pipe","response","setupRequired","navigate","verificationRequired","_","i0","ɵɵinject","i1","InitialConfigService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\initial-config.guard.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { CanActivate, Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { InitialConfigService } from '../services/initial-config.service';\n// import { first } from 'rxjs/operators';\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class initialConfigGuard implements CanActivate {\n//   constructor(\n//     private _initialConfigService: InitialConfigService,\n//     private _router: Router\n//   ) { }\n\n//   canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n//     return this._initialConfigService.InitialCheck().pipe(\n//       first(),\n//       map(response => {\n//         if (response.setupRequired) {\n//           // Permitir acceso a la ruta de configuración inicial\n//           return true;\n//         } else if (response.verificationRequired) {\n//           // Redirigir a la ruta de reenvío de correo si la verificación es necesaria\n//           this._router.navigate(['/initial-config/resend-email-verification']);\n//           return false;\n//         } else {\n//           // Redirigir al login si no se requiere configuración ni activación\n//           this._router.navigate(['/auth/login']);\n//           return false;\n//         }\n//       })\n\n//     );\n//   }\n// }\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { InitialConfigService } from '../services/initial-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class initialConfigGuard implements CanActivate {\n  constructor(\n    private initialConfigService: InitialConfigService,\n    private router: Router\n  ) { }\n\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    return this.initialConfigService.InitialCheck().pipe(\n      switchMap(response => {\n        if (response.setupRequired) {\n          // Si se requiere configuración inicial, redirige a la ruta de configuración\n          this.router.navigate(['/initial-config']);\n          return of(false);\n        } else if (response.verificationRequired) {\n          // Si se requiere verificación, redirige a la ruta de reenvío de correo de verificación\n          this.router.navigate(['/initial-config/resend-email-verification']);\n          return of(false);\n        }\n        // Si no se requiere configuración inicial ni verificación, permite el acceso o redirige al login\n        this.router.navigate(['/auth/login']);\n        return of(false);\n      })\n    );\n  }\n}\n"],"mappings":"AAuCA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,SAAS,QAAQ,gBAAgB;;;;AAG1C,MAGaC,kBAAkB;EAC7BC,YACUC,oBAA0C,EAC1CC,MAAc;IADd,KAAAD,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,oBAAoB,CAACG,YAAY,EAAE,CAACC,IAAI,CAClDP,SAAS,CAACQ,QAAQ,IAAG;MACnB,IAAIA,QAAQ,CAACC,aAAa,EAAE;QAC1B;QACA,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;QACzC,OAAOX,EAAE,CAAC,KAAK,CAAC;OACjB,MAAM,IAAIS,QAAQ,CAACG,oBAAoB,EAAE;QACxC;QACA,IAAI,CAACP,MAAM,CAACM,QAAQ,CAAC,CAAC,2CAA2C,CAAC,CAAC;QACnE,OAAOX,EAAE,CAAC,KAAK,CAAC;;MAElB;MACA,IAAI,CAACK,MAAM,CAACM,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACrC,OAAOX,EAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;EAAC,QAAAa,CAAA,G;qBAvBUX,kBAAkB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBlB,kBAAkB;IAAAmB,OAAA,EAAlBnB,kBAAkB,CAAAoB,IAAA;IAAAC,UAAA,EAFjB;EAAM;;SAEPrB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}