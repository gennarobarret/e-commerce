{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/initial-config.service\";\nclass VerificationPendingComponent {\n  constructor(_route, _initialConfigService) {\n    this._route = _route;\n    this._initialConfigService = _initialConfigService;\n    this.email = ''; // Inicializar con una cadena vacía\n  }\n\n  ngOnInit() {\n    const emailParam = this._route.snapshot.paramMap.get('email');\n    if (emailParam !== null) {\n      this.email = emailParam; // Asegurarse de que emailParam no sea null\n    } else {\n      // Manejar el caso donde emailParam es null\n      // Por ejemplo, redirigir al usuario o mostrar un mensaje de error\n    }\n  }\n  resendVerificationEmail() {\n    if (!this.email) {\n      // Mostrar algún mensaje de error o manejar el caso de email vacío\n      console.error('El correo electrónico está vacío');\n      return;\n    }\n    this._initialConfigService.resendVerificationEmail(this.email).subscribe(response => {\n      // Manejar la respuesta\n    }, error => {\n      // Manejar el error\n    });\n  }\n  static #_ = this.ɵfac = function VerificationPendingComponent_Factory(t) {\n    return new (t || VerificationPendingComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.InitialConfigService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VerificationPendingComponent,\n    selectors: [[\"app-verification-pending\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"verification-pending-container\"], [3, \"click\"], [\"href\", \"/auth/login\"]],\n    template: function VerificationPendingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Pending Verification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function VerificationPendingComponent_Template_button_click_6_listener() {\n          return ctx.resendVerificationEmail();\n        });\n        i0.ɵɵtext(7, \"Forward Verification Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"If you haven't received the email, check your spam folder or try sending it again.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"a\", 2);\n        i0.ɵɵtext(11, \"Back to Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"An email has been sent to \", ctx.email, \". Please verify your email to activate your account.\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { VerificationPendingComponent };","map":{"version":3,"names":["VerificationPendingComponent","constructor","_route","_initialConfigService","email","ngOnInit","emailParam","snapshot","paramMap","get","resendVerificationEmail","console","error","subscribe","response","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","InitialConfigService","_2","selectors","decls","vars","consts","template","VerificationPendingComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VerificationPendingComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\verification-pending\\verification-pending.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\verification-pending\\verification-pending.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InitialConfigService } from 'src/app/core/services/initial-config.service';\nimport { SharedDataBetweenStepService } from 'src/app/core/services/shared-data-between-step.service';\n\n\n@Component({\n  selector: 'app-verification-pending',\n  templateUrl: './verification-pending.component.html',\n  styleUrls: ['./verification-pending.component.css']\n})\n  \nexport class VerificationPendingComponent implements OnInit {\n  email: string = ''; // Inicializar con una cadena vacía\n\n  constructor(private _route: ActivatedRoute, private _initialConfigService: InitialConfigService) { }\n\n  ngOnInit() {\n    const emailParam = this._route.snapshot.paramMap.get('email');\n    if (emailParam !== null) {\n      this.email = emailParam; // Asegurarse de que emailParam no sea null\n    } else {\n      // Manejar el caso donde emailParam es null\n      // Por ejemplo, redirigir al usuario o mostrar un mensaje de error\n    }\n  }\n\n  resendVerificationEmail() {\n    if (!this.email) {\n      // Mostrar algún mensaje de error o manejar el caso de email vacío\n      console.error('El correo electrónico está vacío');\n      return;\n    }\n    this._initialConfigService.resendVerificationEmail(this.email).subscribe(\n      response => {\n        // Manejar la respuesta\n      },\n      error => {\n        // Manejar el error\n      }\n    );\n  }\n}","<!-- verification-pending.component.html -->\n<div class=\"verification-pending-container\">\n    <h1>Pending Verification</h1>\n    <p>An email has been sent to {{email}}. Please verify your email to activate your\n        account.</p>\n    <div>\n        <button (click)=\"resendVerificationEmail()\">Forward Verification Email</button>\n    </div>\n    <p>If you haven't received the email, check your spam folder or try sending it again.</p>\n    <a href=\"/auth/login\">Back to Login</a>\n</div>"],"mappings":";;;AAMA,MAMaA,4BAA4B;EAGvCC,YAAoBC,MAAsB,EAAUC,qBAA2C;IAA3E,KAAAD,MAAM,GAANA,MAAM;IAA0B,KAAAC,qBAAqB,GAArBA,qBAAqB;IAFzE,KAAAC,KAAK,GAAW,EAAE,CAAC,CAAC;EAE+E;;EAEnGC,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAG,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;IAC7D,IAAIH,UAAU,KAAK,IAAI,EAAE;MACvB,IAAI,CAACF,KAAK,GAAGE,UAAU,CAAC,CAAC;KAC1B,MAAM;MACL;MACA;IAAA;EAEJ;EAEAI,uBAAuBA,CAAA;IACrB,IAAI,CAAC,IAAI,CAACN,KAAK,EAAE;MACf;MACAO,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACjD;;IAEF,IAAI,CAACT,qBAAqB,CAACO,uBAAuB,CAAC,IAAI,CAACN,KAAK,CAAC,CAACS,SAAS,CACtEC,QAAQ,IAAG;MACT;IAAA,CACD,EACDF,KAAK,IAAG;MACN;IAAA,CACD,CACF;EACH;EAAC,QAAAG,CAAA,G;qBA7BUf,4BAA4B,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA5BtB,4BAA4B;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXzCb,EAAA,CAAAe,cAAA,aAA4C;QACpCf,EAAA,CAAAgB,MAAA,2BAAoB;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC7BjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,GACS;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAChBjB,EAAA,CAAAe,cAAA,UAAK;QACOf,EAAA,CAAAkB,UAAA,mBAAAC,8DAAA;UAAA,OAASL,GAAA,CAAApB,uBAAA,EAAyB;QAAA,EAAC;QAACM,EAAA,CAAAgB,MAAA,iCAA0B;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAEnFjB,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,yFAAkF;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QACzFjB,EAAA,CAAAe,cAAA,YAAsB;QAAAf,EAAA,CAAAgB,MAAA,qBAAa;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;;;QANpCjB,EAAA,CAAAoB,SAAA,GACS;QADTpB,EAAA,CAAAqB,kBAAA,+BAAAP,GAAA,CAAA1B,KAAA,yDACS;;;;;;SDQHJ,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}