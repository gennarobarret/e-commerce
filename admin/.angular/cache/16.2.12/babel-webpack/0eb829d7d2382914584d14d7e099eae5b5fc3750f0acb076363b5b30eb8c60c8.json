{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/core/services/auth.service\";\nclass GoogleSigninComponent {\n  constructor(router, uthService) {\n    this.router = router;\n    this.uthService = uthService;\n  } // Inyectar Router\n  ngOnInit() {\n    this.renderButton();\n  }\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: response => this.onSignIn(response)\n    });\n    google.accounts.id.renderButton(document.getElementById(\"g_id_onload\"), {\n      theme: \"outline\",\n      size: \"large\"\n    });\n    google.accounts.id.prompt();\n  }\n  // //  En tu método onSignIn\n  // onSignIn(response: GoogleSignInResponse) {\n  //   console.log('Usuario ha iniciado sesión:', response);\n  //   const userToken = response.credential;\n  //   sessionStorage.setItem('userToken', userToken);\n  //   // Decodifica el token JWT para obtener datos del usuario\n  //   const decodedToken = jwtDecode(userToken);\n  //   console.log(decodedToken);\n  //   // Navega al dashboard\n  //   this.router.navigate(['/dashboard']);\n  // }\n  // En tu componente de inicio de sesión de Google\n  onSignIn(googleUser) {\n    const id_token = googleUser.getAuthResponse().id_token;\n    this._authService.loginWithGoogle(id_token).subscribe({\n      next: response => {\n        // Manejar la respuesta, por ejemplo, almacenar el token de sesión, redirigir al usuario, etc.\n      },\n      error: error => {\n        console.error('Error al iniciar sesión con Google:', error);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function GoogleSigninComponent_Factory(t) {\n    return new (t || GoogleSigninComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GoogleSigninComponent,\n    selectors: [[\"app-google-signin\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"google-signin-container\"], [\"id\", \"g_id_onload\", \"data-client_id\", \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\", \"data-callback\", \"onSignIn\", \"data-theme\", \"outline\", \"data-size\", \"large\"]],\n    template: function GoogleSigninComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Iniciar sesi\\u00F3n con Google\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { GoogleSigninComponent };","map":{"version":3,"names":["GoogleSigninComponent","constructor","router","uthService","ngOnInit","renderButton","google","accounts","id","initialize","client_id","callback","response","onSignIn","document","getElementById","theme","size","prompt","googleUser","id_token","getAuthResponse","_authService","loginWithGoogle","subscribe","next","error","console","_","i0","ɵɵdirectiveInject","i1","Router","i2","AuthService","_2","selectors","decls","vars","consts","template","GoogleSigninComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\google-signin\\google-signin.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\google-signin\\google-signin.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'; // Importar Router\n// import { jwtDecode } from 'jwt-decode';\nimport { AuthService } from 'src/app/core/services/auth.service';}\n\ndeclare var google: any;\n\ninterface GoogleSignInResponse {\n  clientId: string;\n  credential: string;\n  select_by: string;\n}\n\n@Component({\n  selector: 'app-google-signin',\n  templateUrl: './google-signin.component.html',\n  styleUrls: ['./google-signin.component.css']\n})\n\nexport class GoogleSigninComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private uthService: AuthService\n  ) { } // Inyectar Router\n\n  ngOnInit(): void {\n    this.renderButton();\n  }\n\n  renderButton() {\n    google.accounts.id.initialize({\n      client_id: \"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\",\n      callback: (response: GoogleSignInResponse) => this.onSignIn(response),\n    });\n\n    google.accounts.id.renderButton(\n      document.getElementById(\"g_id_onload\"),\n      { theme: \"outline\", size: \"large\" }\n    );\n\n    google.accounts.id.prompt();\n  }\n\n  // //  En tu método onSignIn\n  // onSignIn(response: GoogleSignInResponse) {\n  //   console.log('Usuario ha iniciado sesión:', response);\n  //   const userToken = response.credential;\n  //   sessionStorage.setItem('userToken', userToken);\n\n  //   // Decodifica el token JWT para obtener datos del usuario\n  //   const decodedToken = jwtDecode(userToken);\n  //   console.log(decodedToken);\n\n  //   // Navega al dashboard\n  //   this.router.navigate(['/dashboard']);\n  // }\n\n  // En tu componente de inicio de sesión de Google\n\n  onSignIn(googleUser) {\n    const id_token = googleUser.getAuthResponse().id_token;\n    this._authService.loginWithGoogle(id_token).subscribe({\n      next: (response) => {\n        // Manejar la respuesta, por ejemplo, almacenar el token de sesión, redirigir al usuario, etc.\n      },\n      error: (error) => {\n        console.error('Error al iniciar sesión con Google:', error);\n      }\n    });\n  }\n\n\n}\n","<div class=\"google-signin-container\">\n    <h2>Iniciar sesión con Google</h2>\n    <!-- Contenedor para el botón de inicio de sesión de Google -->\n    <div id=\"g_id_onload\" data-client_id=\"142003720401-scrooc5tq3p8ht8m377p67kdrt3ablei.apps.googleusercontent.com\"\n        data-callback=\"onSignIn\" data-theme=\"outline\" data-size=\"large\">\n    </div>\n</div>"],"mappings":";;;AAaA,MAMaA,qBAAqB;EAChCC,YACUC,MAAc,EACdC,UAAuB;IADvB,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,UAAU,GAAVA,UAAU;EAChB,CAAC,CAAC;EAENC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACVC,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACC,UAAU,CAAC;MAC5BC,SAAS,EAAE,0EAA0E;MACrFC,QAAQ,EAAGC,QAA8B,IAAK,IAAI,CAACC,QAAQ,CAACD,QAAQ;KACrE,CAAC;IAEFN,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACH,YAAY,CAC7BS,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,EACtC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAO,CAAE,CACpC;IAEDX,MAAM,CAACC,QAAQ,CAACC,EAAE,CAACU,MAAM,EAAE;EAC7B;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEAL,QAAQA,CAACM,UAAU;IACjB,MAAMC,QAAQ,GAAGD,UAAU,CAACE,eAAe,EAAE,CAACD,QAAQ;IACtD,IAAI,CAACE,YAAY,CAACC,eAAe,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAC;MACpDC,IAAI,EAAGb,QAAQ,IAAI;QACjB;MAAA,CACD;MACDc,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;KACD,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAlDU5B,qBAAqB,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBnC,qBAAqB;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnBlCb,EAAA,CAAAe,cAAA,aAAqC;QAC7Bf,EAAA,CAAAgB,MAAA,qCAAyB;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAElCjB,EAAA,CAAAkB,SAAA,aAEM;QACVlB,EAAA,CAAAiB,YAAA,EAAM;;;;;;SDaO9C,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}