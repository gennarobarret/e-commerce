{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/auth.service\";\nimport * as i2 from \"src/app/shared/services/toast.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ForgotPasswordComponent_div_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Email address is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_19_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Must be a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_div_19_span_1_Template, 2, 0, \"span\", 24);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_div_19_span_2_Template, 2, 0, \"span\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nclass ForgotPasswordComponent {\n  constructor(_authService, _toastService) {\n    this._authService = _authService;\n    this._toastService = _toastService;\n    this.forgotPasswordForm = new FormGroup({\n      emailAddress: new FormControl('', [Validators.required, Validators.email])\n    });\n    // Variable para manejar mensajes de éxito/error\n    this.message = '';\n  }\n  onSubmit() {\n    if (this.forgotPasswordForm.valid) {\n      // Extrae emailAddress usando desestructuración y el operador de afirmación no nula\n      const {\n        emailAddress\n      } = this.forgotPasswordForm.value;\n      this._authService.forgotPassword({\n        emailAddress: emailAddress\n      }).subscribe({\n        next: response => {\n          // Maneja la respuesta exitosa aquí\n          this._toastService.showToast('success', 'If the email exists in our system, a password reset link will be sent.');\n          // this.message = 'If the email exists in our system, a password reset link will be sent.';\n          // Opcional: resetear el formulario o redirigir al usuario\n          this.forgotPasswordForm.reset();\n        },\n        error: error => {\n          this._toastService.showToast('error', 'An error occurred while trying to send the password reset link.');\n          // this.message = 'An error occurred while trying to send the password reset link.';\n          console.error(error);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 34,\n    vars: 6,\n    consts: [[\"id\", \"layoutAuthentication\"], [\"id\", \"layoutAuthentication_content\"], [1, \"container-xl\", \"px-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-5\", \"col-lg-6\", \"col-md-8\", \"col-sm-11\"], [1, \"card\", \"my-5\"], [1, \"card-body\", \"p-5\", \"text-center\"], [1, \"h3\", \"fw-light\", \"mb-0\"], [1, \"my-0\"], [1, \"card-body\", \"p-5\"], [1, \"text-center\", \"small\", \"text-muted\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"inputForgotEmailAddress\", 1, \"text-gray-600\", \"small\"], [\"id\", \"inputForgotEmailAddress\", \"type\", \"email\", \"autocomplete\", \"email\", \"placeholder\", \"Enter your email address\", \"aria-label\", \"Email Address\", \"aria-describedby\", \"emailExample\", \"formControlName\", \"inputForgotEmailAddress\", 1, \"form-control\", \"form-control-solid\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"id\", \"layoutAuthentication_footer\"], [1, \"footer-admin\", \"mt-auto\", \"footer-dark\"], [1, \"row\"], [1, \"col-md-6\", \"small\"], [1, \"col-md-6\", \"text-md-end\", \"small\"], [\"href\", \"#!\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"main\")(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵtext(9, \"Password Recovery\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"hr\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n        i0.ɵɵtext(13, \"Enter your email address below and we will send you a link to reset your password.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n        i0.ɵɵtext(17, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 14);\n        i0.ɵɵtemplate(19, ForgotPasswordComponent_div_19_Template, 3, 2, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵtext(21, \"Reset Password\");\n        i0.ɵɵelementEnd()()()()()()()()();\n        i0.ɵɵelementStart(22, \"div\", 17)(23, \"footer\", 18)(24, \"div\", 2)(25, \"div\", 19)(26, \"div\", 20);\n        i0.ɵɵtext(27, \"Copyright \\u00A9 Your Website 2021\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 21)(29, \"a\", 22);\n        i0.ɵɵtext(30, \"Privacy Policy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31, \" \\u00B7 \");\n        i0.ɵɵelementStart(32, \"a\", 22);\n        i0.ɵɵtext(33, \"Terms & Conditions\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ((tmp_1_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_1_0.touched))));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.createMasterAdminForm.get(\"inputForgotEmailAddress\")) == null ? null : tmp_2_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPasswordForm.valid);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ForgotPasswordComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ForgotPasswordComponent_div_19_span_1_Template","ForgotPasswordComponent_div_19_span_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","createMasterAdminForm","get","errors","tmp_1_0","ForgotPasswordComponent","constructor","_authService","_toastService","forgotPasswordForm","emailAddress","required","email","message","onSubmit","valid","value","forgotPassword","subscribe","next","response","showToast","reset","error","console","_","ɵɵdirectiveInject","i1","AuthService","i2","ToastService","_2","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_14_listener","ForgotPasswordComponent_div_19_Template","ɵɵpureFunction1","_c0","invalid","dirty","touched","tmp_2_0"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  forgotPasswordForm = new FormGroup({\n    emailAddress: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  // Variable para manejar mensajes de éxito/error\n  message: string = '';\n\n  constructor(\n    private _authService: AuthService,\n    private _toastService: ToastService\n  ) { }\n\n  onSubmit(): void {\n    if (this.forgotPasswordForm.valid) {\n      // Extrae emailAddress usando desestructuración y el operador de afirmación no nula\n      const { emailAddress } = this.forgotPasswordForm.value;\n      this._authService.forgotPassword({ emailAddress: emailAddress! }).subscribe({\n        next: (response) => {\n          // Maneja la respuesta exitosa aquí\n          this._toastService.showToast('success', 'If the email exists in our system, a password reset link will be sent.');\n          // this.message = 'If the email exists in our system, a password reset link will be sent.';\n          // Opcional: resetear el formulario o redirigir al usuario\n          this.forgotPasswordForm.reset();\n        },\n        error: (error) => {\n          this._toastService.showToast('error', 'An error occurred while trying to send the password reset link.');\n          // this.message = 'An error occurred while trying to send the password reset link.';\n          console.error(error);\n        }\n      });\n    }\n  }\n\n}\n","<div id=\"layoutAuthentication\">\n    <div id=\"layoutAuthentication_content\">\n        <main>\n            <div class=\"container-xl px-4\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-11\">\n                        <!-- Social forgot password form-->\n                        <div class=\"card my-5\">\n                            <div class=\"card-body p-5 text-center\">\n                                <div class=\"h3 fw-light mb-0\">Password Recovery</div>\n                            </div>\n                            <hr class=\"my-0\" />\n                            <div class=\"card-body p-5\">\n                                <div class=\"text-center small text-muted mb-4\">Enter your email address below and we\n                                    will send you a link to reset your password.</div>\n                                <!-- Forgot password form-->\n                                <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\n                                    <!-- Form Group (email address)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"text-gray-600 small\" for=\"inputForgotEmailAddress\">Email\n                                            address</label>\n                                        <input class=\"form-control form-control-solid\" id=\"inputForgotEmailAddress\"\n                                            type=\"email\" autocomplete=\"email\" placeholder=\"Enter your email address\"\n                                            aria-label=\"Email Address\" aria-describedby=\"emailExample\"\n                                            formControlName=\"inputForgotEmailAddress\"\n                                            [ngClass]=\"{'is-invalid': createMasterAdminForm.get('inputForgotEmailAddress')?.invalid && (createMasterAdminForm.get('inputForgotEmailAddress')?.dirty || createMasterAdminForm.get('inputForgotEmailAddress')?.touched)}\" />\n                                        <div *ngIf=\"createMasterAdminForm.get('inputForgotEmailAddress')?.invalid && (createMasterAdminForm.get('inputForgotEmailAddress')?.dirty || createMasterAdminForm.get('inputForgotEmailAddress')?.touched)\"\n                                            class=\"text-danger\">\n                                            <span\n                                                *ngIf=\"createMasterAdminForm.get('inputForgotEmailAddress')?.errors?.['required']\">\n                                                Email address is required.\n                                            </span>\n                                            <span\n                                                *ngIf=\"createMasterAdminForm.get('inputForgotEmailAddress')?.errors?.['email']\">\n                                                Must be a valid email address.\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <!-- Form Group (reset password button)    -->\n                                    <button class=\"btn btn-primary\" type=\"submit\"\n                                        [disabled]=\"!forgotPasswordForm.valid\">Reset Password</button>\n\n                                </form>\n                                <!-- <div *ngIf=\"message\" class=\"alert alert-info\">{{ message }}</div> -->\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n    </div>\n    <div id=\"layoutAuthentication_footer\">\n        <footer class=\"footer-admin mt-auto footer-dark\">\n            <div class=\"container-xl px-4\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 small\">Copyright &copy; Your Website 2021</div>\n                    <div class=\"col-md-6 text-md-end small\">\n                        <a href=\"#!\">Privacy Policy</a>\n                        &middot;\n                        <a href=\"#!\">Terms &amp; Conditions</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}