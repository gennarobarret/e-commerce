{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ForgotPasswordComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" A valid email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.message);\n  }\n}\nclass ForgotPasswordComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.forgotPasswordForm = new FormGroup({\n      emailAddress: new FormControl('', [Validators.required, Validators.email])\n    });\n    // Variable para manejar mensajes de éxito/error\n    this.message = '';\n  }\n  onSubmit() {\n    if (this.forgotPasswordForm.valid) {\n      // Extrae emailAddress usando desestructuración y el operador de afirmación no nula\n      const {\n        emailAddress\n      } = this.forgotPasswordForm.value;\n      this.authService.forgotPassword({\n        emailAddress: emailAddress\n      }).subscribe({\n        next: response => {\n          // Maneja la respuesta exitosa aquí\n          this.message = 'If the email exists in our system, a password reset link will be sent.';\n          // Opcional: resetear el formulario o redirigir al usuario\n          this.forgotPasswordForm.reset();\n        },\n        error: error => {\n          // Maneja errores aquí\n          this.message = 'An error occurred while trying to send the password reset link.';\n          console.error(error);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 35,\n    vars: 4,\n    consts: [[\"id\", \"layoutAuthentication\"], [\"id\", \"layoutAuthentication_content\"], [1, \"container-xl\", \"px-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-xl-5\", \"col-lg-6\", \"col-md-8\", \"col-sm-11\"], [1, \"card\", \"my-5\"], [1, \"card-body\", \"p-5\", \"text-center\"], [1, \"h3\", \"fw-light\", \"mb-0\"], [1, \"my-0\"], [1, \"card-body\", \"p-5\"], [1, \"text-center\", \"small\", \"text-muted\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"emailAddress\", 1, \"text-gray-600\", \"small\"], [\"type\", \"email\", \"id\", \"emailAddress\", \"formControlName\", \"emailAddress\", \"placeholder\", \"\", \"aria-label\", \"Email Address\", \"aria-describedby\", \"emailExample\", 1, \"form-control\", \"form-control-solid\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"id\", \"layoutAuthentication_footer\"], [1, \"footer-admin\", \"mt-auto\", \"footer-dark\"], [1, \"row\"], [1, \"col-md-6\", \"small\"], [1, \"col-md-6\", \"text-md-end\", \"small\"], [\"href\", \"#!\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-info\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"main\")(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵtext(9, \"Password Recovery\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"hr\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10);\n        i0.ɵɵtext(13, \"Enter your email address below and we will send you a link to reset your password.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"form\", 11);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n        i0.ɵɵtext(17, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 14);\n        i0.ɵɵtemplate(19, ForgotPasswordComponent_div_19_Template, 2, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵtext(21, \"Reset Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, ForgotPasswordComponent_div_22_Template, 2, 1, \"div\", 17);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(23, \"div\", 18)(24, \"footer\", 19)(25, \"div\", 2)(26, \"div\", 20)(27, \"div\", 21);\n        i0.ɵɵtext(28, \"Copyright \\u00A9 Your Website 2021\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 22)(30, \"a\", 23);\n        i0.ɵɵtext(31, \"Privacy Policy\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \" \\u00B7 \");\n        i0.ɵɵelementStart(33, \"a\", 23);\n        i0.ɵɵtext(34, \"Terms & Conditions\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.forgotPasswordForm.get(\"emailAddress\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.forgotPasswordForm.get(\"emailAddress\")) == null ? null : tmp_1_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPasswordForm.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { ForgotPasswordComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","message","ForgotPasswordComponent","constructor","authService","forgotPasswordForm","emailAddress","required","email","onSubmit","valid","value","forgotPassword","subscribe","next","response","reset","error","console","_","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_ngSubmit_14_listener","ɵɵtemplate","ForgotPasswordComponent_div_19_Template","ForgotPasswordComponent_div_22_Template","ɵɵproperty","tmp_1_0","get","invalid","touched"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\auth\\forgot-password\\forgot-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent {\n  forgotPasswordForm = new FormGroup({\n    emailAddress: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n  // Variable para manejar mensajes de éxito/error\n  message: string = '';\n\n  constructor(private authService: AuthService) { }\n\n  onSubmit(): void {\n    if (this.forgotPasswordForm.valid) {\n      // Extrae emailAddress usando desestructuración y el operador de afirmación no nula\n      const { emailAddress } = this.forgotPasswordForm.value;\n      this.authService.forgotPassword({ emailAddress: emailAddress! }).subscribe({\n        next: (response) => {\n          // Maneja la respuesta exitosa aquí\n          this.message = 'If the email exists in our system, a password reset link will be sent.';\n          // Opcional: resetear el formulario o redirigir al usuario\n          this.forgotPasswordForm.reset();\n        },\n        error: (error) => {\n          // Maneja errores aquí\n          this.message = 'An error occurred while trying to send the password reset link.';\n          console.error(error);\n        }\n      });\n    }\n  }\n\n}\n","<div id=\"layoutAuthentication\">\n    <div id=\"layoutAuthentication_content\">\n        <main>\n            <div class=\"container-xl px-4\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-11\">\n                        <!-- Social forgot password form-->\n                        <div class=\"card my-5\">\n                            <div class=\"card-body p-5 text-center\">\n                                <div class=\"h3 fw-light mb-0\">Password Recovery</div>\n                            </div>\n                            <hr class=\"my-0\" />\n                            <div class=\"card-body p-5\">\n                                <div class=\"text-center small text-muted mb-4\">Enter your email address below and we\n                                    will send you a link to reset your password.</div>\n                                <!-- Forgot password form-->\n                                <form [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"onSubmit()\">\n                                    <!-- Form Group (email address)-->\n                                    <div class=\"mb-3\">\n                                        <label class=\"text-gray-600 small\" for=\"emailAddress\">Email address</label>\n                                        <input class=\"form-control form-control-solid\" type=\"email\" id=\"emailAddress\"\n                                            formControlName=\"emailAddress\" placeholder=\"\" aria-label=\"Email Address\"\n                                            aria-describedby=\"emailExample\" />\n                                            <div *ngIf=\"forgotPasswordForm.get('emailAddress')?.invalid && forgotPasswordForm.get('emailAddress')?.touched\"\n                                                class=\"alert alert-danger\">\n                                                A valid email is required.\n                                            </div>\n                                    </div>\n                                    <!-- Form Group (reset password button)    -->\n                                    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!forgotPasswordForm.valid\">Reset Password</button>\n\n                                </form>\n                                <div *ngIf=\"message\" class=\"alert alert-info\">{{ message }}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n    </div>\n    <div id=\"layoutAuthentication_footer\">\n        <footer class=\"footer-admin mt-auto footer-dark\">\n            <div class=\"container-xl px-4\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 small\">Copyright &copy; Your Website 2021</div>\n                    <div class=\"col-md-6 text-md-end small\">\n                        <a href=\"#!\">Privacy Policy</a>\n                        &middot;\n                        <a href=\"#!\">Terms &amp; Conditions</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}