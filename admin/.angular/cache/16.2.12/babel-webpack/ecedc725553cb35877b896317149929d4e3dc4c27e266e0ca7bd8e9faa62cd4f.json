{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import { CanActivate, Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { InitialConfigService } from '../services/initial-config.service';\n// import { first } from 'rxjs/operators';\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class initialConfigGuard implements CanActivate {\n//   constructor(\n//     private _initialConfigService: InitialConfigService,\n//     private _router: Router\n//   ) { }\n//   canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n//     return this._initialConfigService.InitialCheck().pipe(\n//       first(),\n//       map(response => {\n//         if (response.setupRequired) {\n//           // Permitir acceso a la ruta de configuración inicial\n//           return true;\n//         } else if (response.verificationRequired) {\n//           // Redirigir a la ruta de reenvío de correo si la verificación es necesaria\n//           this._router.navigate(['/initial-config/resend-email-verification']);\n//           return false;\n//         } else {\n//           // Redirigir al login si no se requiere configuración ni activación\n//           this._router.navigate(['/auth/login']);\n//           return false;\n//         }\n//       })\n//     );\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\guards\\initial-config.guard.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { CanActivate, Router } from '@angular/router';\n// import { Observable } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// import { InitialConfigService } from '../services/initial-config.service';\n// import { first } from 'rxjs/operators';\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class initialConfigGuard implements CanActivate {\n//   constructor(\n//     private _initialConfigService: InitialConfigService,\n//     private _router: Router\n//   ) { }\n\n//   canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n//     return this._initialConfigService.InitialCheck().pipe(\n//       first(),\n//       map(response => {\n//         if (response.setupRequired) {\n//           // Permitir acceso a la ruta de configuración inicial\n//           return true;\n//         } else if (response.verificationRequired) {\n//           // Redirigir a la ruta de reenvío de correo si la verificación es necesaria\n//           this._router.navigate(['/initial-config/resend-email-verification']);\n//           return false;\n//         } else {\n//           // Redirigir al login si no se requiere configuración ni activación\n//           this._router.navigate(['/auth/login']);\n//           return false;\n//         }\n//       })\n\n//     );\n//   }\n// }"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}