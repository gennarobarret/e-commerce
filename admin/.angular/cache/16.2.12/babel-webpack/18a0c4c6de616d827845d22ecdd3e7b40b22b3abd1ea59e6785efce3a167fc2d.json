{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Javier/Documents/proyectos/e-commerce/admin/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, makeEnvironmentProviders, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, map, switchMap, first, catchError, take, mergeMap, timeout } from 'rxjs/operators';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nclass NullValidationHandler {\n  validateSignature(validationParams) {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams) {\n    return Promise.resolve(true);\n  }\n}\nclass OAuthModuleConfig {}\nclass OAuthResourceServerConfig {}\nclass DateTimeProvider {}\nclass SystemDateTimeProvider extends DateTimeProvider {\n  now() {\n    return Date.now();\n  }\n  new() {\n    return new Date();\n  }\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵSystemDateTimeProvider_BaseFactory;\n    return function SystemDateTimeProvider_Factory(t) {\n      return (ɵSystemDateTimeProvider_BaseFactory || (ɵSystemDateTimeProvider_BaseFactory = i0.ɵɵgetInheritedFactory(SystemDateTimeProvider)))(t || SystemDateTimeProvider);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SystemDateTimeProvider,\n    factory: SystemDateTimeProvider.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SystemDateTimeProvider, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nclass LoginOptions {\n  constructor() {\n    /**\n     * Set this to true to disable the nonce\n     * check which is used to avoid\n     * replay attacks.\n     * This flag should never be true in\n     * production environments.\n     */\n    this.disableNonceCheck = false;\n    /**\n     * Normally, you want to clear your hash fragment after\n     * the lib read the token(s) so that they are not displayed\n     * anymore in the url. If not, set this to true. For code flow\n     * this controls removing query string values.\n     */\n    this.preventClearHashAfterLogin = false;\n  }\n}\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nclass OAuthLogger {}\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nclass OAuthStorage {}\nclass MemoryStorage {\n  constructor() {\n    this.data = new Map();\n  }\n  getItem(key) {\n    return this.data.get(key);\n  }\n  removeItem(key) {\n    this.data.delete(key);\n  }\n  setItem(key, data) {\n    this.data.set(key, data);\n  }\n  static #_ = this.ɵfac = function MemoryStorage_Factory(t) {\n    return new (t || MemoryStorage)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MemoryStorage,\n    factory: MemoryStorage.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MemoryStorage, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nclass ReceivedTokens {}\nclass OAuthEvent {\n  constructor(type) {\n    this.type = type;\n  }\n}\nclass OAuthSuccessEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthInfoEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthErrorEvent extends OAuthEvent {\n  constructor(type, reason, params = null) {\n    super(type);\n    this.reason = reason;\n    this.params = params;\n  }\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\nfunction b64DecodeUnicode(str) {\n  const base64 = str.replace(/-/g, '+').replace(/_/g, '/');\n  return decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\nfunction base64UrlEncode(str) {\n  const base64 = btoa(str);\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nclass AuthConfig {\n  constructor(json) {\n    /**\n     * The client's id as registered with the auth server\n     */\n    this.clientId = '';\n    /**\n     * The client's redirectUri as registered with the auth server\n     */\n    this.redirectUri = '';\n    /**\n     * An optional second redirectUri where the auth server\n     * redirects the user to after logging out.\n     */\n    this.postLogoutRedirectUri = '';\n    /**\n     * Defines whether to use 'redirectUri' as a replacement\n     * of 'postLogoutRedirectUri' if the latter is not set.\n     */\n    this.redirectUriAsPostLogoutRedirectUriFallback = true;\n    /**\n     * The auth server's endpoint that allows to log\n     * the user in when using implicit flow.\n     */\n    this.loginUrl = '';\n    /**\n     * The requested scopes\n     */\n    this.scope = 'openid profile';\n    this.resource = '';\n    this.rngUrl = '';\n    /**\n     * Defines whether to use OpenId Connect during\n     * implicit flow.\n     */\n    this.oidc = true;\n    /**\n     * Defines whether to request an access token during\n     * implicit flow.\n     */\n    this.requestAccessToken = true;\n    this.options = null;\n    /**\n     * The issuer's uri.\n     */\n    this.issuer = '';\n    /**\n     * The logout url.\n     */\n    this.logoutUrl = '';\n    /**\n     * Defines whether to clear the hash fragment after logging in.\n     */\n    this.clearHashAfterLogin = true;\n    /**\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n     */\n    this.tokenEndpoint = null;\n    /**\n     * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\n     */\n    this.revocationEndpoint = null;\n    /**\n     * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\n     */\n    this.customTokenParameters = [];\n    /**\n     * Url of the userinfo endpoint as defined by OpenId Connect.\n     */\n    this.userinfoEndpoint = null;\n    this.responseType = '';\n    /**\n     * Defines whether additional debug information should\n     * be shown at the console. Note that in certain browsers\n     * the verbosity of the console needs to be explicitly set\n     * to include Debug level messages.\n     */\n    this.showDebugInformation = false;\n    /**\n     * The redirect uri used when doing silent refresh.\n     */\n    this.silentRefreshRedirectUri = '';\n    this.silentRefreshMessagePrefix = '';\n    /**\n     * Set this to true to display the iframe used for\n     * silent refresh for debugging.\n     */\n    this.silentRefreshShowIFrame = false;\n    /**\n     * Timeout for silent refresh.\n     * @internal\n     * @deprecated use silentRefreshTimeout\n     */\n    this.siletRefreshTimeout = 1000 * 20;\n    /**\n     * Timeout for silent refresh.\n     */\n    this.silentRefreshTimeout = 1000 * 20;\n    /**\n     * Some auth servers don't allow using password flow\n     * w/o a client secret while the standards do not\n     * demand for it. In this case, you can set a password\n     * here. As this password is exposed to the public\n     * it does not bring additional security and is therefore\n     * as good as using no password.\n     */\n    this.dummyClientSecret = '';\n    /**\n     * Defines whether https is required.\n     * The default value is remoteOnly which only allows\n     * http for localhost, while every other domains need\n     * to be used with https.\n     */\n    this.requireHttps = 'remoteOnly';\n    /**\n     * Defines whether every url provided by the discovery\n     * document has to start with the issuer's url.\n     */\n    this.strictDiscoveryDocumentValidation = true;\n    /**\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\n     * with keys used to validate received id_tokens.\n     * This is taken out of the disovery document. Can be set manually too.\n     */\n    this.jwks = null;\n    /**\n     * Map with additional query parameter that are appended to\n     * the request when initializing implicit flow.\n     */\n    this.customQueryParams = null;\n    this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\n    /**\n     * Defines when the token_timeout event should be raised.\n     * If you set this to the default value 0.75, the event\n     * is triggered after 75% of the token's life time.\n     */\n    this.timeoutFactor = 0.75;\n    /**\n     * If true, the lib will try to check whether the user\n     * is still logged in on a regular basis as described\n     * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n     */\n    this.sessionChecksEnabled = false;\n    /**\n     * Interval in msec for checking the session\n     * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n     */\n    this.sessionCheckIntervall = 3 * 1000;\n    /**\n     * Url for the iframe used for session checks\n     */\n    this.sessionCheckIFrameUrl = null;\n    /**\n     * Name of the iframe to use for session checks\n     */\n    this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\n    /**\n     * This property has been introduced to disable at_hash checks\n     * and is indented for Identity Provider that does not deliver\n     * an at_hash EVEN THOUGH its recommended by the OIDC specs.\n     * Of course, when disabling these checks then we are bypassing\n     * a security check which means we are more vulnerable.\n     */\n    this.disableAtHashCheck = false;\n    /**\n     * Defines wether to check the subject of a refreshed token after silent refresh.\n     * Normally, it should be the same as before.\n     */\n    this.skipSubjectCheck = false;\n    this.useIdTokenHintForSilentRefresh = false;\n    /**\n     * Defined whether to skip the validation of the issuer in the discovery document.\n     * Normally, the discovey document's url starts with the url of the issuer.\n     */\n    this.skipIssuerCheck = false;\n    /**\n     * final state sent to issuer is built as follows:\n     * state = nonce + nonceStateSeparator + additional state\n     * Default separator is ';' (encoded %3B).\n     * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\n     */\n    this.nonceStateSeparator = ';';\n    /**\n     * Set this to true to use HTTP BASIC auth for AJAX calls\n     */\n    this.useHttpBasicAuth = false;\n    /**\n     * Decreases the Expiration time of tokens by this number of seconds\n     */\n    this.decreaseExpirationBySec = 0;\n    /**\n     * The interceptors waits this time span if there is no token\n     */\n    this.waitForTokenInMsec = 0;\n    /**\n     * Code Flow is by defauld used together with PKCI which is also higly recommented.\n     * You can disbale it here by setting this flag to true.\n     * https://tools.ietf.org/html/rfc7636#section-1.1\n     */\n    this.disablePKCE = false;\n    /**\n     * Set this to true to preserve the requested route including query parameters after code flow login.\n     * This setting enables deep linking for the code flow.\n     */\n    this.preserveRequestedRoute = false;\n    /**\n     * Allows to disable the timer for the id_token used\n     * for token refresh\n     */\n    this.disableIdTokenTimer = false;\n    /**\n     * Blocks other origins requesting a silent refresh\n     */\n    this.checkOrigin = false;\n    /**\n     * This property allows you to override the method that is used to open the login url,\n     * allowing a way for implementations to specify their own method of routing to new\n     * urls.\n     */\n    this.openUri = uri => {\n      location.href = uri;\n    };\n    if (json) {\n      Object.assign(this, json);\n    }\n  }\n}\n\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nclass WebHttpUrlEncodingCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nclass ValidationHandler {}\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nclass AbstractValidationHandler {\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  validateAtHash(params) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const hashAlg = _this.inferHashAlgorithm(params.idTokenHeader);\n      const tokenHash = yield _this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n      const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n      const atHash = base64UrlEncode(leftMostHalf);\n      const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n      if (atHash !== claimsAtHash) {\n        console.error('exptected at_hash: ' + atHash);\n        console.error('actual at_hash: ' + claimsAtHash);\n      }\n      return atHash === claimsAtHash;\n    })();\n  }\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  inferHashAlgorithm(jwtHeader) {\n    const alg = jwtHeader['alg'];\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n    return 'sha-' + alg.substr(2);\n  }\n}\nclass UrlHelperService {\n  getHashFragmentParams(customHashFragment) {\n    let hash = customHashFragment || window.location.hash;\n    hash = decodeURIComponent(hash);\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n    const questionMarkPosition = hash.indexOf('?');\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n    return this.parseQueryString(hash);\n  }\n  parseQueryString(queryString) {\n    const data = {};\n    let pair, separatorIndex, escapedKey, escapedValue, key, value;\n    if (queryString === null) {\n      return data;\n    }\n    const pairs = queryString.split('&');\n    for (let i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      separatorIndex = pair.indexOf('=');\n      if (separatorIndex === -1) {\n        escapedKey = pair;\n        escapedValue = null;\n      } else {\n        escapedKey = pair.substr(0, separatorIndex);\n        escapedValue = pair.substr(separatorIndex + 1);\n      }\n      key = decodeURIComponent(escapedKey);\n      value = decodeURIComponent(escapedValue);\n      if (key.substr(0, 1) === '/') {\n        key = key.substr(1);\n      }\n      data[key] = value;\n    }\n    return data;\n  }\n  static #_ = this.ɵfac = function UrlHelperService_Factory(t) {\n    return new (t || UrlHelperService)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UrlHelperService,\n    factory: UrlHelperService.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlHelperService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n// Credits: https://github.com/dchest/fast-sha256-js/tree/master/src\n// We add this lib directly b/c the published version of fast-sha256-js\n// is commonjs and hence leads to a warning about tree-shakability emitted\n// by the Angular CLI\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nconst digestLength = 32;\nconst blockSize = 64;\n// SHA-256 constants\nconst K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\nfunction hashBlocks(w, v, p, pos, len) {\n  let a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n    for (i = 0; i < 16; i++) {\n      j = pos + i * 4;\n      w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;\n    }\n    for (i = 16; i < 64; i++) {\n      u = w[i - 2];\n      t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n      u = w[i - 15];\n      t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n      w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n    }\n    for (i = 0; i < 64; i++) {\n      t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n      t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    v[0] += a;\n    v[1] += b;\n    v[2] += c;\n    v[3] += d;\n    v[4] += e;\n    v[5] += f;\n    v[6] += g;\n    v[7] += h;\n    pos += 64;\n    len -= 64;\n  }\n  return pos;\n}\n// Hash implements SHA256 hash algorithm.\nclass Hash {\n  constructor() {\n    this.digestLength = digestLength;\n    this.blockSize = blockSize;\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    this.state = new Int32Array(8); // hash state\n    this.temp = new Int32Array(64); // temporary state\n    this.buffer = new Uint8Array(128); // buffer for data to hash\n    this.bufferLength = 0; // number of bytes in buffer\n    this.bytesHashed = 0; // number of total bytes hashed\n    this.finished = false; // indicates whether the hash was finalized\n    this.reset();\n  }\n  // Resets hash state making it possible\n  // to re-use this instance to hash other data.\n  reset() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xbb67ae85;\n    this.state[2] = 0x3c6ef372;\n    this.state[3] = 0xa54ff53a;\n    this.state[4] = 0x510e527f;\n    this.state[5] = 0x9b05688c;\n    this.state[6] = 0x1f83d9ab;\n    this.state[7] = 0x5be0cd19;\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    this.finished = false;\n    return this;\n  }\n  // Cleans internal buffers and re-initializes hash state.\n  clean() {\n    for (let i = 0; i < this.buffer.length; i++) {\n      this.buffer[i] = 0;\n    }\n    for (let i = 0; i < this.temp.length; i++) {\n      this.temp[i] = 0;\n    }\n    this.reset();\n  }\n  // Updates hash state with the given data.\n  //\n  // Optionally, length of the data can be specified to hash\n  // fewer bytes than data.length.\n  //\n  // Throws error when trying to update already finalized hash:\n  // instance must be reset to use it again.\n  update(data, dataLength = data.length) {\n    if (this.finished) {\n      throw new Error(\"SHA256: can't update because hash was finished.\");\n    }\n    let dataPos = 0;\n    this.bytesHashed += dataLength;\n    if (this.bufferLength > 0) {\n      while (this.bufferLength < 64 && dataLength > 0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out) {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = bytesHashed / 0x20000000 | 0;\n      const bitLenLo = bytesHashed << 3;\n      const padLength = bytesHashed % 64 < 56 ? 64 : 128;\n      this.buffer[left] = 0x80;\n      for (let i = left + 1; i < padLength - 8; i++) {\n        this.buffer[i] = 0;\n      }\n      this.buffer[padLength - 8] = bitLenHi >>> 24 & 0xff;\n      this.buffer[padLength - 7] = bitLenHi >>> 16 & 0xff;\n      this.buffer[padLength - 6] = bitLenHi >>> 8 & 0xff;\n      this.buffer[padLength - 5] = bitLenHi >>> 0 & 0xff;\n      this.buffer[padLength - 4] = bitLenLo >>> 24 & 0xff;\n      this.buffer[padLength - 3] = bitLenLo >>> 16 & 0xff;\n      this.buffer[padLength - 2] = bitLenLo >>> 8 & 0xff;\n      this.buffer[padLength - 1] = bitLenLo >>> 0 & 0xff;\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n      this.finished = true;\n    }\n    for (let i = 0; i < 8; i++) {\n      out[i * 4 + 0] = this.state[i] >>> 24 & 0xff;\n      out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;\n      out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;\n      out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;\n    }\n    return this;\n  }\n  // Returns the final hash digest.\n  digest() {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n  // Internal function for use in HMAC for optimization.\n  _saveState(out) {\n    for (let i = 0; i < this.state.length; i++) {\n      out[i] = this.state[i];\n    }\n  }\n  // Internal function for use in HMAC for optimization.\n  _restoreState(from, bytesHashed) {\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = from[i];\n    }\n    this.bytesHashed = bytesHashed;\n    this.finished = false;\n    this.bufferLength = 0;\n  }\n}\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nclass HMAC {\n  constructor(key) {\n    this.inner = new Hash();\n    this.outer = new Hash();\n    this.blockSize = this.inner.blockSize;\n    this.digestLength = this.inner.digestLength;\n    const pad = new Uint8Array(this.blockSize);\n    if (key.length > this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i < key.length; i++) {\n        pad[i] = key[i];\n      }\n    }\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36;\n    }\n    this.inner.update(pad);\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36 ^ 0x5c;\n    }\n    this.outer.update(pad);\n    this.istate = new Uint32Array(8);\n    this.ostate = new Uint32Array(8);\n    this.inner._saveState(this.istate);\n    this.outer._saveState(this.ostate);\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] = 0;\n    }\n  }\n  // Returns HMAC state to the state initialized with key\n  // to make it possible to run HMAC over the other data with the same\n  // key without creating a new instance.\n  reset() {\n    this.inner._restoreState(this.istate, this.inner.blockSize);\n    this.outer._restoreState(this.ostate, this.outer.blockSize);\n    return this;\n  }\n  // Cleans HMAC state.\n  clean() {\n    for (let i = 0; i < this.istate.length; i++) {\n      this.ostate[i] = this.istate[i] = 0;\n    }\n    this.inner.clean();\n    this.outer.clean();\n  }\n  // Updates state with provided data.\n  update(data) {\n    this.inner.update(data);\n    return this;\n  }\n  // Finalizes HMAC and puts the result in out.\n  finish(out) {\n    if (this.outer.finished) {\n      this.outer.finish(out);\n    } else {\n      this.inner.finish(out);\n      this.outer.update(out, this.digestLength).finish(out);\n    }\n    return this;\n  }\n  // Returns message authentication code.\n  digest() {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n}\n// Returns SHA256 hash of data.\nfunction hash(data) {\n  const h = new Hash().update(data);\n  const digest = h.digest();\n  h.clean();\n  return digest;\n}\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n  const h = new HMAC(key).update(data);\n  const digest = h.digest();\n  h.clean();\n  return digest;\n}\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n  // Counter is a byte value: check if it overflowed.\n  const num = counter[0];\n  if (num === 0) {\n    throw new Error('hkdf: cannot expand more');\n  }\n  // Prepare HMAC instance for new data with old key.\n  hmac.reset();\n  // Hash in previous output if it was generated\n  // (i.e. counter is greater than 1).\n  if (num > 1) {\n    hmac.update(buffer);\n  }\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n  // Hash in the counter.\n  hmac.update(counter);\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nfunction hkdf(key, salt = hkdfSalt, info, length = 32) {\n  const counter = new Uint8Array([1]);\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n  const out = new Uint8Array(length);\n  for (let i = 0; i < length; i++) {\n    if (bufpos === buffer.length) {\n      fillBuffer(buffer, hmac_, info, counter);\n      bufpos = 0;\n    }\n    out[i] = buffer[bufpos++];\n  }\n  hmac_.clean();\n  buffer.fill(0);\n  counter.fill(0);\n  return out;\n}\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n  const prf = new HMAC(password);\n  const len = prf.digestLength;\n  const ctr = new Uint8Array(4);\n  const t = new Uint8Array(len);\n  const u = new Uint8Array(len);\n  const dk = new Uint8Array(dkLen);\n  for (let i = 0; i * len < dkLen; i++) {\n    const c = i + 1;\n    ctr[0] = c >>> 24 & 0xff;\n    ctr[1] = c >>> 16 & 0xff;\n    ctr[2] = c >>> 8 & 0xff;\n    ctr[3] = c >>> 0 & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j < len; j++) {\n      t[j] = u[j];\n    }\n    for (let j = 2; j <= iterations; j++) {\n      prf.reset();\n      prf.update(u).finish(u);\n      for (let k = 0; k < len; k++) {\n        t[k] ^= u[k];\n      }\n    }\n    for (let j = 0; j < len && i * len + j < dkLen; j++) {\n      dk[i * len + j] = t[j];\n    }\n  }\n  for (let i = 0; i < len; i++) {\n    t[i] = u[i] = 0;\n  }\n  for (let i = 0; i < 4; i++) {\n    ctr[i] = 0;\n  }\n  prf.clean();\n  return dk;\n}\n\n/**\n * Abstraction for crypto algorithms\n */\nclass HashHandler {}\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  const d = s,\n    b = new Uint8Array(d.length);\n  for (let i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n  return b;\n}\nfunction encodeUTF8(arr) {\n  const s = [];\n  for (let i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n  return s.join('');\n}\nclass DefaultHashHandler {\n  calcHash(valueToHash, algorithm) {\n    return _asyncToGenerator(function* () {\n      // const encoder = new TextEncoder();\n      // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n      // const data = encoder.encode(valueToHash);\n      // const fhash = fsha256(valueToHash);\n      const candHash = encodeUTF8(hash(decodeUTF8(valueToHash)));\n      // const hashArray = (sha256 as any).array(valueToHash);\n      // // const hashString = this.toHashString(hashArray);\n      // const hashString = this.toHashString2(hashArray);\n      // console.debug('hash orig - cand', candHash, hashString);\n      // alert(1);\n      return candHash;\n    })();\n  }\n  toHashString2(byteArray) {\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n  toHashString(buffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n  static #_ = this.ɵfac = function DefaultHashHandler_Factory(t) {\n    return new (t || DefaultHashHandler)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DefaultHashHandler,\n    factory: DefaultHashHandler.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultHashHandler, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * Service for logging in and logging out with\n * OIDC and OAuth2. Supports implicit flow and\n * password flow.\n */\nclass OAuthService extends AuthConfig {\n  constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\n    super();\n    this.ngZone = ngZone;\n    this.http = http;\n    this.config = config;\n    this.urlHelper = urlHelper;\n    this.logger = logger;\n    this.crypto = crypto;\n    this.dateTimeService = dateTimeService;\n    /**\n     * @internal\n     * Deprecated:  use property events instead\n     */\n    this.discoveryDocumentLoaded = false;\n    /**\n     * The received (passed around) state, when logging\n     * in with implicit flow.\n     */\n    this.state = '';\n    this.eventsSubject = new Subject();\n    this.discoveryDocumentLoadedSubject = new Subject();\n    this.grantTypesSupported = [];\n    this.inImplicitFlow = false;\n    this.saveNoncesInLocalStorage = false;\n    this.debug('angular-oauth2-oidc v10');\n    // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\n    this.document = document;\n    if (!config) {\n      config = {};\n    }\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n    this.events = this.eventsSubject.asObservable();\n    if (tokenValidationHandler) {\n      this.tokenValidationHandler = tokenValidationHandler;\n    }\n    if (config) {\n      this.configure(config);\n    }\n    try {\n      if (storage) {\n        this.setStorage(storage);\n      } else if (typeof sessionStorage !== 'undefined') {\n        this.setStorage(sessionStorage);\n      }\n    } catch (e) {\n      console.error('No OAuthStorage provided and cannot access default (sessionStorage).' + 'Consider providing a custom OAuthStorage implementation in your module.', e);\n    }\n    // in IE, sessionStorage does not always survive a redirect\n    if (this.checkLocalStorageAccessable()) {\n      const ua = window?.navigator?.userAgent;\n      const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\n      if (msie) {\n        this.saveNoncesInLocalStorage = true;\n      }\n    }\n    this.setupRefreshTimer();\n  }\n  checkLocalStorageAccessable() {\n    if (typeof window === 'undefined') return false;\n    const test = 'test';\n    try {\n      if (typeof window['localStorage'] === 'undefined') return false;\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * Use this method to configure the service\n   * @param config the configuration\n   */\n  configure(config) {\n    // For the sake of downward compatibility with\n    // original configuration API\n    Object.assign(this, new AuthConfig(), config);\n    this.config = Object.assign({}, new AuthConfig(), config);\n    if (this.sessionChecksEnabled) {\n      this.setupSessionCheck();\n    }\n    this.configChanged();\n  }\n  configChanged() {\n    this.setupRefreshTimer();\n  }\n  restartSessionChecksIfStillLoggedIn() {\n    if (this.hasValidIdToken()) {\n      this.initSessionCheck();\n    }\n  }\n  restartRefreshTimerIfStillLoggedIn() {\n    this.setupExpirationTimers();\n  }\n  setupSessionCheck() {\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(() => {\n      this.initSessionCheck();\n    });\n  }\n  /**\n   * Will setup up silent refreshing for when the token is\n   * about to expire. When the user is logged out via this.logOut method, the\n   * silent refreshing will pause and not refresh the tokens until the user is\n   * logged back in via receiving a new token.\n   * @param params Additional parameter to pass\n   * @param listenTo Setup automatic refresh of a specific token type\n   */\n  setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\n    let shouldRunSilentRefresh = true;\n    this.clearAutomaticRefreshTimer();\n    this.automaticRefreshSubscription = this.events.pipe(tap(e => {\n      if (e.type === 'token_received') {\n        shouldRunSilentRefresh = true;\n      } else if (e.type === 'logout') {\n        shouldRunSilentRefresh = false;\n      }\n    }), filter(e => e.type === 'token_expires' && (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000)).subscribe(() => {\n      if (shouldRunSilentRefresh) {\n        // this.silentRefresh(params, noPrompt).catch(_ => {\n        this.refreshInternal(params, noPrompt).catch(() => {\n          this.debug('Automatic silent refresh did not work');\n        });\n      }\n    });\n    this.restartRefreshTimerIfStillLoggedIn();\n  }\n  refreshInternal(params, noPrompt) {\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      return this.refreshToken();\n    } else {\n      return this.silentRefresh(params, noPrompt);\n    }\n  }\n  /**\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\n   * directly chains using the `then(...)` part of the promise to call\n   * the `tryLogin(...)` method.\n   *\n   * @param options LoginOptions to pass through to `tryLogin(...)`\n   */\n  loadDiscoveryDocumentAndTryLogin(options = null) {\n    return this.loadDiscoveryDocument().then(() => {\n      return this.tryLogin(options);\n    });\n  }\n  /**\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\n   * IdToken or no valid AccessToken.\n   *\n   * @param options LoginOptions to pass through to `tryLogin(...)`\n   */\n  loadDiscoveryDocumentAndLogin(options = null) {\n    options = options || {};\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(() => {\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n        const state = typeof options.state === 'string' ? options.state : '';\n        this.initLoginFlow(state);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  debug(...args) {\n    if (this.showDebugInformation) {\n      this.logger.debug(...args);\n    }\n  }\n  validateUrlFromDiscoveryDocument(url) {\n    const errors = [];\n    const httpsCheck = this.validateUrlForHttps(url);\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\n    if (!httpsCheck) {\n      errors.push('https for all urls required. Also for urls received by discovery.');\n    }\n    if (!issuerCheck) {\n      errors.push('Every url in discovery document has to start with the issuer url.' + 'Also see property strictDiscoveryDocumentValidation.');\n    }\n    return errors;\n  }\n  validateUrlForHttps(url) {\n    if (!url) {\n      return true;\n    }\n    const lcUrl = url.toLowerCase();\n    if (this.requireHttps === false) {\n      return true;\n    }\n    if ((lcUrl.match(/^http:\\/\\/localhost($|[:/])/) || lcUrl.match(/^http:\\/\\/localhost($|[:/])/)) && this.requireHttps === 'remoteOnly') {\n      return true;\n    }\n    return lcUrl.startsWith('https://');\n  }\n  assertUrlNotNullAndCorrectProtocol(url, description) {\n    if (!url) {\n      throw new Error(`'${description}' should not be null`);\n    }\n    if (!this.validateUrlForHttps(url)) {\n      throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n    }\n  }\n  validateUrlAgainstIssuer(url) {\n    if (!this.strictDiscoveryDocumentValidation) {\n      return true;\n    }\n    if (!url) {\n      return true;\n    }\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n  }\n  setupRefreshTimer() {\n    if (typeof window === 'undefined') {\n      this.debug('timer not supported on this plattform');\n      return;\n    }\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    }\n    if (this.tokenReceivedSubscription) this.tokenReceivedSubscription.unsubscribe();\n    this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(() => {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    });\n  }\n  setupExpirationTimers() {\n    if (this.hasValidAccessToken()) {\n      this.setupAccessTokenTimer();\n    }\n    if (!this.disableIdTokenTimer && this.hasValidIdToken()) {\n      this.setupIdTokenTimer();\n    }\n  }\n  setupAccessTokenTimer() {\n    const expiration = this.getAccessTokenExpiration();\n    const storedAt = this.getAccessTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  setupIdTokenTimer() {\n    const expiration = this.getIdTokenExpiration();\n    const storedAt = this.getIdTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  /**\n   * Stops timers for automatic refresh.\n   * To restart it, call setupAutomaticSilentRefresh again.\n   */\n  stopAutomaticRefresh() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.clearAutomaticRefreshTimer();\n  }\n  clearAccessTokenTimer() {\n    if (this.accessTokenTimeoutSubscription) {\n      this.accessTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearIdTokenTimer() {\n    if (this.idTokenTimeoutSubscription) {\n      this.idTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearAutomaticRefreshTimer() {\n    if (this.automaticRefreshSubscription) {\n      this.automaticRefreshSubscription.unsubscribe();\n    }\n  }\n  calcTimeout(storedAt, expiration) {\n    const now = this.dateTimeService.now();\n    const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n    const duration = Math.max(0, delta);\n    const maxTimeoutValue = 2147483647;\n    return duration > maxTimeoutValue ? maxTimeoutValue : duration;\n  }\n  /**\n   * DEPRECATED. Use a provider for OAuthStorage instead:\n   *\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\n   * Sets a custom storage used to store the received\n   * tokens on client side. By default, the browser's\n   * sessionStorage is used.\n   * @ignore\n   *\n   * @param storage\n   */\n  setStorage(storage) {\n    this._storage = storage;\n    this.configChanged();\n  }\n  /**\n   * Loads the discovery document to configure most\n   * properties of this service. The url of the discovery\n   * document is infered from the issuer's url according\n   * to the OpenId Connect spec. To use another url you\n   * can pass it to to optional parameter fullUrl.\n   *\n   * @param fullUrl\n   */\n  loadDiscoveryDocument(fullUrl = null) {\n    return new Promise((resolve, reject) => {\n      if (!fullUrl) {\n        fullUrl = this.issuer || '';\n        if (!fullUrl.endsWith('/')) {\n          fullUrl += '/';\n        }\n        fullUrl += '.well-known/openid-configuration';\n      }\n      if (!this.validateUrlForHttps(fullUrl)) {\n        reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        return;\n      }\n      this.http.get(fullUrl).subscribe(doc => {\n        if (!this.validateDiscoveryDocument(doc)) {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n          reject('discovery_document_validation_error');\n          return;\n        }\n        this.loginUrl = doc.authorization_endpoint;\n        this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n        this.grantTypesSupported = doc.grant_types_supported;\n        this.issuer = doc.issuer;\n        this.tokenEndpoint = doc.token_endpoint;\n        this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\n        this.jwksUri = doc.jwks_uri;\n        this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\n        this.discoveryDocumentLoaded = true;\n        this.discoveryDocumentLoadedSubject.next(doc);\n        this.revocationEndpoint = doc.revocation_endpoint || this.revocationEndpoint;\n        if (this.sessionChecksEnabled) {\n          this.restartSessionChecksIfStillLoggedIn();\n        }\n        this.loadJwks().then(jwks => {\n          const result = {\n            discoveryDocument: doc,\n            jwks: jwks\n          };\n          const event = new OAuthSuccessEvent('discovery_document_loaded', result);\n          this.eventsSubject.next(event);\n          resolve(event);\n          return;\n        }).catch(err => {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n          reject(err);\n          return;\n        });\n      }, err => {\n        this.logger.error('error loading discovery document', err);\n        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  loadJwks() {\n    return new Promise((resolve, reject) => {\n      if (this.jwksUri) {\n        this.http.get(this.jwksUri).subscribe(jwks => {\n          this.jwks = jwks;\n          // this.eventsSubject.next(\n          //   new OAuthSuccessEvent('discovery_document_loaded')\n          // );\n          resolve(jwks);\n        }, err => {\n          this.logger.error('error loading jwks', err);\n          this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n          reject(err);\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n  validateDiscoveryDocument(doc) {\n    let errors;\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n      this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating authorization_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating end_session_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating token_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating revocation_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating userinfo_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n    if (errors.length > 0) {\n      this.logger.error('error validating jwks_uri in discovery document', errors);\n      return false;\n    }\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n      this.logger.warn('sessionChecksEnabled is activated but discovery document' + ' does not contain a check_session_iframe field');\n    }\n    return true;\n  }\n  /**\n   * Uses password flow to exchange userName and password for an\n   * access_token. After receiving the access_token, this method\n   * uses it to query the userinfo endpoint in order to get information\n   * about the user in question.\n   *\n   * When using this, make sure that the property oidc is set to false.\n   * Otherwise stricter validations take place that make this operation\n   * fail.\n   *\n   * @param userName\n   * @param password\n   * @param headers Optional additional http-headers.\n   */\n  fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\n    return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\n  }\n  /**\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\n   *\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\n   * Otherwise stricter validations take place that make this operation fail.\n   */\n  loadUserProfile() {\n    if (!this.hasValidAccessToken()) {\n      throw new Error('Can not load User Profile without access_token');\n    }\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n      throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    return new Promise((resolve, reject) => {\n      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\n      this.http.get(this.userinfoEndpoint, {\n        headers,\n        observe: 'response',\n        responseType: 'text'\n      }).subscribe(response => {\n        this.debug('userinfo received', JSON.stringify(response));\n        if (response.headers.get('content-type').startsWith('application/json')) {\n          let info = JSON.parse(response.body);\n          const existingClaims = this.getIdentityClaims() || {};\n          if (!this.skipSubjectCheck) {\n            if (this.oidc && (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\n              const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' + 'of the user that has logged in with oidc.\\n' + 'if you are not using oidc but just oauth2 password flow set oidc to false';\n              reject(err);\n              return;\n            }\n          }\n          info = Object.assign({}, existingClaims, info);\n          this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve({\n            info\n          });\n        } else {\n          this.debug('userinfo is not JSON, treating it as JWE/JWS');\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve(JSON.parse(response.body));\n        }\n      }, err => {\n        this.logger.error('error loading user info', err);\n        this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Uses password flow to exchange userName and password for an access_token.\n   * @param userName\n   * @param password\n   * @param headers Optional additional http-headers.\n   */\n  fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\n    const parameters = {\n      username: userName,\n      password: password\n    };\n    return this.fetchTokenUsingGrant('password', parameters, headers);\n  }\n  /**\n   * Uses a custom grant type to retrieve tokens.\n   * @param grantType Grant type.\n   * @param parameters Parameters to pass.\n   * @param headers Optional additional HTTP headers.\n   */\n  fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    /**\n     * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n     * serialize and parse URL parameter keys and values.\n     *\n     * @stable\n     */\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', grantType).set('scope', this.scope);\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    // set explicit parameters last, to allow overwriting\n    for (const key of Object.keys(parameters)) {\n      params = params.set(key, parameters[key]);\n    }\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    return new Promise((resolve, reject) => {\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then(result => {\n            this.storeIdToken(result);\n            resolve(tokenResponse);\n          });\n        }\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error performing ${grantType} flow', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Refreshes the token using a refresh_token.\n   * This does not work for implicit flow, b/c\n   * there is no refresh_token in this flow.\n   * A solution for this is provided by the\n   * method silentRefresh.\n   */\n  refreshToken() {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    return new Promise((resolve, reject) => {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      }).set('grant_type', 'refresh_token').set('scope', this.scope).set('refresh_token', this._storage.getItem('refresh_token'));\n      let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n      if (this.useHttpBasicAuth) {\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n        headers = headers.set('Authorization', 'Basic ' + header);\n      }\n      if (!this.useHttpBasicAuth) {\n        params = params.set('client_id', this.clientId);\n      }\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n        params = params.set('client_secret', this.dummyClientSecret);\n      }\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).pipe(switchMap(tokenResponse => {\n        if (this.oidc && tokenResponse.id_token) {\n          return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap(result => this.storeIdToken(result)), map(() => tokenResponse));\n        } else {\n          return of(tokenResponse);\n        }\n      })).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error refreshing token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  removeSilentRefreshEventListener() {\n    if (this.silentRefreshPostMessageEventListener) {\n      window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n      this.silentRefreshPostMessageEventListener = null;\n    }\n  }\n  setupSilentRefreshEventListener() {\n    this.removeSilentRefreshEventListener();\n    this.silentRefreshPostMessageEventListener = e => {\n      const message = this.processMessageEventMessage(e);\n      if (this.checkOrigin && e.origin !== location.origin) {\n        console.error('wrong origin requested silent refresh!');\n      }\n      this.tryLogin({\n        customHashFragment: message,\n        preventClearHashAfterLogin: true,\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\n    };\n    window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n  }\n  /**\n   * Performs a silent refresh for implicit flow.\n   * Use this method to get new tokens when/before\n   * the existing tokens expire.\n   */\n  silentRefresh(params = {}, noPrompt = true) {\n    const claims = this.getIdentityClaims() || {};\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n      params['id_token_hint'] = this.getIdToken();\n    }\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    if (typeof this.document === 'undefined') {\n      throw new Error('silent refresh is not supported on this platform');\n    }\n    const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    this.silentRefreshSubject = claims['sub'];\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.silentRefreshIFrameName;\n    this.setupSilentRefreshEventListener();\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\n      iframe.setAttribute('src', url);\n      if (!this.silentRefreshShowIFrame) {\n        iframe.style['display'] = 'none';\n      }\n      this.document.body.appendChild(iframe);\n    });\n    const errors = this.events.pipe(filter(e => e instanceof OAuthErrorEvent), first());\n    const success = this.events.pipe(filter(e => e.type === 'token_received'), first());\n    const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\n    return race([errors, success, timeout]).pipe(map(e => {\n      if (e instanceof OAuthErrorEvent) {\n        if (e.type === 'silent_refresh_timeout') {\n          this.eventsSubject.next(e);\n        } else {\n          e = new OAuthErrorEvent('silent_refresh_error', e);\n          this.eventsSubject.next(e);\n        }\n        throw e;\n      } else if (e.type === 'token_received') {\n        e = new OAuthSuccessEvent('silently_refreshed');\n        this.eventsSubject.next(e);\n      }\n      return e;\n    })).toPromise();\n  }\n  /**\n   * This method exists for backwards compatibility.\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\n   * and implicit flows.\n   */\n  initImplicitFlowInPopup(options) {\n    return this.initLoginFlowInPopup(options);\n  }\n  initLoginFlowInPopup(options) {\n    options = options || {};\n    return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n      display: 'popup'\n    }).then(url => {\n      return new Promise((resolve, reject) => {\n        /**\n         * Error handling section\n         */\n        const checkForPopupClosedInterval = 500;\n        let windowRef = null;\n        // If we got no window reference we open a window\n        // else we are using the window already opened\n        if (!options.windowRef) {\n          windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\n        } else if (options.windowRef && !options.windowRef.closed) {\n          windowRef = options.windowRef;\n          windowRef.location.href = url;\n        }\n        let checkForPopupClosedTimer;\n        const tryLogin = hash => {\n          this.tryLogin({\n            customHashFragment: hash,\n            preventClearHashAfterLogin: true,\n            customRedirectUri: this.silentRefreshRedirectUri\n          }).then(() => {\n            cleanup();\n            resolve(true);\n          }, err => {\n            cleanup();\n            reject(err);\n          });\n        };\n        const checkForPopupClosed = () => {\n          if (!windowRef || windowRef.closed) {\n            cleanup();\n            reject(new OAuthErrorEvent('popup_closed', {}));\n          }\n        };\n        if (!windowRef) {\n          reject(new OAuthErrorEvent('popup_blocked', {}));\n        } else {\n          checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n        }\n        const cleanup = () => {\n          window.clearInterval(checkForPopupClosedTimer);\n          window.removeEventListener('storage', storageListener);\n          window.removeEventListener('message', listener);\n          if (windowRef !== null) {\n            windowRef.close();\n          }\n          windowRef = null;\n        };\n        const listener = e => {\n          const message = this.processMessageEventMessage(e);\n          if (message && message !== null) {\n            window.removeEventListener('storage', storageListener);\n            tryLogin(message);\n          } else {\n            console.log('false event firing');\n          }\n        };\n        const storageListener = event => {\n          if (event.key === 'auth_hash') {\n            window.removeEventListener('message', listener);\n            tryLogin(event.newValue);\n          }\n        };\n        window.addEventListener('message', listener);\n        window.addEventListener('storage', storageListener);\n      });\n    });\n  }\n  calculatePopupFeatures(options) {\n    // Specify an static height and width and calculate centered position\n    const height = options.height || 470;\n    const width = options.width || 500;\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\n    const top = window.screenTop + (window.outerHeight - height) / 2;\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n  }\n  processMessageEventMessage(e) {\n    let expectedPrefix = '#';\n    if (this.silentRefreshMessagePrefix) {\n      expectedPrefix += this.silentRefreshMessagePrefix;\n    }\n    if (!e || !e.data || typeof e.data !== 'string') {\n      return;\n    }\n    const prefixedMessage = e.data;\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\n      return;\n    }\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\n  }\n  canPerformSessionCheck() {\n    if (!this.sessionChecksEnabled) {\n      return false;\n    }\n    if (!this.sessionCheckIFrameUrl) {\n      console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\n      return false;\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      console.warn('sessionChecksEnabled is activated but there is no session_state');\n      return false;\n    }\n    if (typeof this.document === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n  setupSessionCheckEventListener() {\n    this.removeSessionCheckEventListener();\n    this.sessionCheckEventListener = e => {\n      const origin = e.origin.toLowerCase();\n      const issuer = this.issuer.toLowerCase();\n      this.debug('sessionCheckEventListener');\n      if (!issuer.startsWith(origin)) {\n        this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\n        return;\n      }\n      // only run in Angular zone if it is 'changed' or 'error'\n      switch (e.data) {\n        case 'unchanged':\n          this.ngZone.run(() => {\n            this.handleSessionUnchanged();\n          });\n          break;\n        case 'changed':\n          this.ngZone.run(() => {\n            this.handleSessionChange();\n          });\n          break;\n        case 'error':\n          this.ngZone.run(() => {\n            this.handleSessionError();\n          });\n          break;\n      }\n      this.debug('got info from session check inframe', e);\n    };\n    // prevent Angular from refreshing the view on every message (runs in intervals)\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('message', this.sessionCheckEventListener);\n    });\n  }\n  handleSessionUnchanged() {\n    this.debug('session check', 'session unchanged');\n    this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\n  }\n  handleSessionChange() {\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n    this.stopSessionCheckTimer();\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      this.refreshToken().then(() => {\n        this.debug('token refresh after session change worked');\n      }).catch(() => {\n        this.debug('token refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      });\n    } else if (this.silentRefreshRedirectUri) {\n      this.silentRefresh().catch(() => this.debug('silent refresh failed after session changed'));\n      this.waitForSilentRefreshAfterSessionChange();\n    } else {\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n      this.logOut(true);\n    }\n  }\n  waitForSilentRefreshAfterSessionChange() {\n    this.events.pipe(filter(e => e.type === 'silently_refreshed' || e.type === 'silent_refresh_timeout' || e.type === 'silent_refresh_error'), first()).subscribe(e => {\n      if (e.type !== 'silently_refreshed') {\n        this.debug('silent refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      }\n    });\n  }\n  handleSessionError() {\n    this.stopSessionCheckTimer();\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n  }\n  removeSessionCheckEventListener() {\n    if (this.sessionCheckEventListener) {\n      window.removeEventListener('message', this.sessionCheckEventListener);\n      this.sessionCheckEventListener = null;\n    }\n  }\n  initSessionCheck() {\n    if (!this.canPerformSessionCheck()) {\n      return;\n    }\n    const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.sessionCheckIFrameName;\n    this.setupSessionCheckEventListener();\n    const url = this.sessionCheckIFrameUrl;\n    iframe.setAttribute('src', url);\n    iframe.style.display = 'none';\n    this.document.body.appendChild(iframe);\n    this.startSessionCheckTimer();\n  }\n  startSessionCheckTimer() {\n    this.stopSessionCheckTimer();\n    this.ngZone.runOutsideAngular(() => {\n      this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\n    });\n  }\n  stopSessionCheckTimer() {\n    if (this.sessionCheckTimer) {\n      clearInterval(this.sessionCheckTimer);\n      this.sessionCheckTimer = null;\n    }\n  }\n  checkSession() {\n    const iframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (!iframe) {\n      this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      this.stopSessionCheckTimer();\n    }\n    const message = this.clientId + ' ' + sessionState;\n    iframe.contentWindow.postMessage(message, this.issuer);\n  }\n  createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const that = _this2; // eslint-disable-line @typescript-eslint/no-this-alias\n      let redirectUri;\n      if (customRedirectUri) {\n        redirectUri = customRedirectUri;\n      } else {\n        redirectUri = _this2.redirectUri;\n      }\n      const nonce = yield _this2.createAndSaveNonce();\n      if (state) {\n        state = nonce + _this2.config.nonceStateSeparator + encodeURIComponent(state);\n      } else {\n        state = nonce;\n      }\n      if (!_this2.requestAccessToken && !_this2.oidc) {\n        throw new Error('Either requestAccessToken or oidc or both must be true');\n      }\n      if (_this2.config.responseType) {\n        _this2.responseType = _this2.config.responseType;\n      } else {\n        if (_this2.oidc && _this2.requestAccessToken) {\n          _this2.responseType = 'id_token token';\n        } else if (_this2.oidc && !_this2.requestAccessToken) {\n          _this2.responseType = 'id_token';\n        } else {\n          _this2.responseType = 'token';\n        }\n      }\n      const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n      let scope = that.scope;\n      if (_this2.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n        scope = 'openid ' + scope;\n      }\n      let url = that.loginUrl + seperationChar + 'response_type=' + encodeURIComponent(that.responseType) + '&client_id=' + encodeURIComponent(that.clientId) + '&state=' + encodeURIComponent(state) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&scope=' + encodeURIComponent(scope);\n      if (_this2.responseType.includes('code') && !_this2.disablePKCE) {\n        const [challenge, verifier] = yield _this2.createChallangeVerifierPairForPKCE();\n        if (_this2.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n          localStorage.setItem('PKCE_verifier', verifier);\n        } else {\n          _this2._storage.setItem('PKCE_verifier', verifier);\n        }\n        url += '&code_challenge=' + challenge;\n        url += '&code_challenge_method=S256';\n      }\n      if (loginHint) {\n        url += '&login_hint=' + encodeURIComponent(loginHint);\n      }\n      if (that.resource) {\n        url += '&resource=' + encodeURIComponent(that.resource);\n      }\n      if (that.oidc) {\n        url += '&nonce=' + encodeURIComponent(nonce);\n      }\n      if (noPrompt) {\n        url += '&prompt=none';\n      }\n      for (const key of Object.keys(params)) {\n        url += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }\n      if (_this2.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(_this2.customQueryParams)) {\n          url += '&' + key + '=' + encodeURIComponent(_this2.customQueryParams[key]);\n        }\n      }\n      return url;\n    })();\n  }\n  initImplicitFlowInternal(additionalState = '', params = '') {\n    if (this.inImplicitFlow) {\n      return;\n    }\n    this.inImplicitFlow = true;\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initImplicitFlow', error);\n      this.inImplicitFlow = false;\n    });\n  }\n  /**\n   * Starts the implicit flow and redirects to user to\n   * the auth servers' login url.\n   *\n   * @param additionalState Optional state that is passed around.\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\n   * @param params Hash with additional parameter. If it is a string, it is used for the\n   *               parameter loginHint (for the sake of compatibility with former versions)\n   */\n  initImplicitFlow(additionalState = '', params = '') {\n    if (this.loginUrl !== '') {\n      this.initImplicitFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(() => this.initImplicitFlowInternal(additionalState, params));\n    }\n  }\n  /**\n   * Reset current implicit flow\n   *\n   * @description This method allows resetting the current implict flow in order to be initialized again.\n   */\n  resetImplicitFlow() {\n    this.inImplicitFlow = false;\n  }\n  callOnTokenReceivedIfExists(options) {\n    const that = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    if (options.onTokenReceived) {\n      const tokenParams = {\n        idClaims: that.getIdentityClaims(),\n        idToken: that.getIdToken(),\n        accessToken: that.getAccessToken(),\n        state: that.state\n      };\n      options.onTokenReceived(tokenParams);\n    }\n  }\n  storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\n    this._storage.setItem('access_token', accessToken);\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\n    }\n    this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\n    if (expiresIn) {\n      const expiresInMilliSeconds = expiresIn * 1000;\n      const now = this.dateTimeService.new();\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\n      this._storage.setItem('expires_at', '' + expiresAt);\n    }\n    if (refreshToken) {\n      this._storage.setItem('refresh_token', refreshToken);\n    }\n    if (customParameters) {\n      customParameters.forEach((value, key) => {\n        this._storage.setItem(key, value);\n      });\n    }\n  }\n  /**\n   * Delegates to tryLoginImplicitFlow for the sake of competability\n   * @param options Optional options.\n   */\n  tryLogin(options = null) {\n    if (this.config.responseType === 'code') {\n      return this.tryLoginCodeFlow(options).then(() => true);\n    } else {\n      return this.tryLoginImplicitFlow(options);\n    }\n  }\n  parseQueryString(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return {};\n    }\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  tryLoginCodeFlow(options = null) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      options = options || {};\n      const querySource = options.customHashFragment ? options.customHashFragment.substring(1) : window.location.search;\n      const parts = _this3.getCodePartsFromUrl(querySource);\n      const code = parts['code'];\n      const state = parts['state'];\n      const sessionState = parts['session_state'];\n      if (!options.preventClearHashAfterLogin) {\n        const href = location.origin + location.pathname + location.search.replace(/code=[^&$]*/, '').replace(/scope=[^&$]*/, '').replace(/state=[^&$]*/, '').replace(/session_state=[^&$]*/, '').replace(/^\\?&/, '?').replace(/&$/, '').replace(/^\\?$/, '').replace(/&+/g, '&').replace(/\\?&/, '?').replace(/\\?$/, '') + location.hash;\n        history.replaceState(null, window.name, href);\n      }\n      const [nonceInState, userState] = _this3.parseState(state);\n      _this3.state = userState;\n      if (parts['error']) {\n        _this3.debug('error trying to login');\n        _this3.handleLoginError(options, parts);\n        const err = new OAuthErrorEvent('code_error', {}, parts);\n        _this3.eventsSubject.next(err);\n        return Promise.reject(err);\n      }\n      if (!options.disableNonceCheck) {\n        if (!nonceInState) {\n          _this3.saveRequestedRoute();\n          return Promise.resolve();\n        }\n        if (!options.disableOAuth2StateCheck) {\n          const success = _this3.validateNonce(nonceInState);\n          if (!success) {\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n            _this3.eventsSubject.next(event);\n            return Promise.reject(event);\n          }\n        }\n      }\n      _this3.storeSessionState(sessionState);\n      if (code) {\n        yield _this3.getTokenFromCode(code, options);\n        _this3.restoreRequestedRoute();\n        return Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    })();\n  }\n  saveRequestedRoute() {\n    if (this.config.preserveRequestedRoute) {\n      this._storage.setItem('requested_route', window.location.pathname + window.location.search);\n    }\n  }\n  restoreRequestedRoute() {\n    const requestedRoute = this._storage.getItem('requested_route');\n    if (requestedRoute) {\n      history.replaceState(null, '', window.location.origin + requestedRoute);\n    }\n  }\n  /**\n   * Retrieve the returned auth code from the redirect uri that has been called.\n   * If required also check hash, as we could use hash location strategy.\n   */\n  getCodePartsFromUrl(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return this.urlHelper.getHashFragmentParams();\n    }\n    // normalize query string\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  /**\n   * Get token using an intermediate code. Works for the Authorization Code flow.\n   */\n  getTokenFromCode(code, options) {\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', 'authorization_code').set('code', code).set('redirect_uri', options.customRedirectUri || this.redirectUri);\n    if (!this.disablePKCE) {\n      let PKCEVerifier;\n      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        PKCEVerifier = localStorage.getItem('PKCE_verifier');\n      } else {\n        PKCEVerifier = this._storage.getItem('PKCE_verifier');\n      }\n      if (!PKCEVerifier) {\n        console.warn('No PKCE verifier found in oauth storage!');\n      } else {\n        params = params.set('code_verifier', PKCEVerifier);\n      }\n    }\n    return this.fetchAndProcessToken(params, options);\n  }\n  fetchAndProcessToken(params, options) {\n    options = options || {};\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    return new Promise((resolve, reject) => {\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck).then(result => {\n            this.storeIdToken(result);\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n            resolve(tokenResponse);\n          }).catch(reason => {\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n            console.error('Error validating tokens');\n            console.error(reason);\n            reject(reason);\n          });\n        } else {\n          this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n          this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n          resolve(tokenResponse);\n        }\n      }, err => {\n        console.error('Error getting token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Checks whether there are tokens in the hash fragment\n   * as a result of the implicit flow. These tokens are\n   * parsed, validated and used to sign the user in to the\n   * current client.\n   *\n   * @param options Optional options.\n   */\n  tryLoginImplicitFlow(options = null) {\n    options = options || {};\n    let parts;\n    if (options.customHashFragment) {\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n    } else {\n      parts = this.urlHelper.getHashFragmentParams();\n    }\n    this.debug('parsed url', parts);\n    const state = parts['state'];\n    const [nonceInState, userState] = this.parseState(state);\n    this.state = userState;\n    if (parts['error']) {\n      this.debug('error trying to login');\n      this.handleLoginError(options, parts);\n      const err = new OAuthErrorEvent('token_error', {}, parts);\n      this.eventsSubject.next(err);\n      return Promise.reject(err);\n    }\n    const accessToken = parts['access_token'];\n    const idToken = parts['id_token'];\n    const sessionState = parts['session_state'];\n    const grantedScopes = parts['scope'];\n    if (!this.requestAccessToken && !this.oidc) {\n      return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\n    }\n    if (this.requestAccessToken && !accessToken) {\n      return Promise.resolve(false);\n    }\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n      return Promise.resolve(false);\n    }\n    if (this.oidc && !idToken) {\n      return Promise.resolve(false);\n    }\n    if (this.sessionChecksEnabled && !sessionState) {\n      this.logger.warn('session checks (Session Status Change Notification) ' + 'were activated in the configuration but the id_token ' + 'does not contain a session_state claim');\n    }\n    if (this.requestAccessToken && !options.disableNonceCheck) {\n      const success = this.validateNonce(nonceInState);\n      if (!success) {\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n        this.eventsSubject.next(event);\n        return Promise.reject(event);\n      }\n    }\n    if (this.requestAccessToken) {\n      this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\n    }\n    if (!this.oidc) {\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.callOnTokenReceivedIfExists(options);\n      return Promise.resolve(true);\n    }\n    return this.processIdToken(idToken, accessToken, options.disableNonceCheck).then(result => {\n      if (options.validationHandler) {\n        return options.validationHandler({\n          accessToken: accessToken,\n          idClaims: result.idTokenClaims,\n          idToken: result.idToken,\n          state: state\n        }).then(() => result);\n      }\n      return result;\n    }).then(result => {\n      this.storeIdToken(result);\n      this.storeSessionState(sessionState);\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      this.callOnTokenReceivedIfExists(options);\n      this.inImplicitFlow = false;\n      return true;\n    }).catch(reason => {\n      this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n      this.logger.error('Error validating tokens');\n      this.logger.error(reason);\n      return Promise.reject(reason);\n    });\n  }\n  parseState(state) {\n    let nonce = state;\n    let userState = '';\n    if (state) {\n      const idx = state.indexOf(this.config.nonceStateSeparator);\n      if (idx > -1) {\n        nonce = state.substr(0, idx);\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\n      }\n    }\n    return [nonce, userState];\n  }\n  validateNonce(nonceInState) {\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (savedNonce !== nonceInState) {\n      const err = 'Validating access_token failed, wrong state/nonce.';\n      console.error(err, savedNonce, nonceInState);\n      return false;\n    }\n    return true;\n  }\n  storeIdToken(idToken) {\n    this._storage.setItem('id_token', idToken.idToken);\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n    this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\n  }\n  storeSessionState(sessionState) {\n    this._storage.setItem('session_state', sessionState);\n  }\n  getSessionState() {\n    return this._storage.getItem('session_state');\n  }\n  handleLoginError(options, parts) {\n    if (options.onLoginError) {\n      options.onLoginError(parts);\n    }\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n      this.clearLocationHash();\n    }\n  }\n  getClockSkewInMsec(defaultSkewMsc = 600000) {\n    if (!this.clockSkewInSec && this.clockSkewInSec !== 0) {\n      return defaultSkewMsc;\n    }\n    return this.clockSkewInSec * 1000;\n  }\n  /**\n   * @ignore\n   */\n  processIdToken(idToken, accessToken, skipNonceCheck = false) {\n    const tokenParts = idToken.split('.');\n    const headerBase64 = this.padBase64(tokenParts[0]);\n    const headerJson = b64DecodeUnicode(headerBase64);\n    const header = JSON.parse(headerJson);\n    const claimsBase64 = this.padBase64(tokenParts[1]);\n    const claimsJson = b64DecodeUnicode(claimsBase64);\n    const claims = JSON.parse(claimsJson);\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (Array.isArray(claims.aud)) {\n      if (claims.aud.every(v => v !== this.clientId)) {\n        const err = 'Wrong audience: ' + claims.aud.join(',');\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    } else {\n      if (claims.aud !== this.clientId) {\n        const err = 'Wrong audience: ' + claims.aud;\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    }\n    if (!claims.sub) {\n      const err = 'No sub claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    /* For now, we only check whether the sub against\n     * silentRefreshSubject when sessionChecksEnabled is on\n     * We will reconsider in a later version to do this\n     * in every other case too.\n     */\n    if (this.sessionChecksEnabled && this.silentRefreshSubject && this.silentRefreshSubject !== claims['sub']) {\n      const err = 'After refreshing, we got an id_token for another user (sub). ' + `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!claims.iat) {\n      const err = 'No iat claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n      const err = 'Wrong issuer: ' + claims.iss;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\n      const err = 'Wrong nonce: ' + claims.nonce;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    // at_hash is not applicable to authorization code flow\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n    if (Object.prototype.hasOwnProperty.call(this, 'responseType') && (this.responseType === 'code' || this.responseType === 'id_token')) {\n      this.disableAtHashCheck = true;\n    }\n    if (!this.disableAtHashCheck && this.requestAccessToken && !claims['at_hash']) {\n      const err = 'An at_hash is needed!';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    const now = this.dateTimeService.now();\n    const issuedAtMSec = claims.iat * 1000;\n    const expiresAtMSec = claims.exp * 1000;\n    const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\n    if (issuedAtMSec - clockSkewInMSec >= now || expiresAtMSec + clockSkewInMSec - this.decreaseExpirationBySec <= now) {\n      const err = 'Token has expired';\n      console.error(err);\n      console.error({\n        now: now,\n        issuedAtMSec: issuedAtMSec,\n        expiresAtMSec: expiresAtMSec\n      });\n      return Promise.reject(err);\n    }\n    const validationParams = {\n      accessToken: accessToken,\n      idToken: idToken,\n      jwks: this.jwks,\n      idTokenClaims: claims,\n      idTokenHeader: header,\n      loadKeys: () => this.loadJwks()\n    };\n    if (this.disableAtHashCheck) {\n      return this.checkSignature(validationParams).then(() => {\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        return result;\n      });\n    }\n    return this.checkAtHash(validationParams).then(atHashValid => {\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\n        const err = 'Wrong at_hash';\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n      return this.checkSignature(validationParams).then(() => {\n        const atHashCheckEnabled = !this.disableAtHashCheck;\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        if (atHashCheckEnabled) {\n          return this.checkAtHash(validationParams).then(atHashValid => {\n            if (this.requestAccessToken && !atHashValid) {\n              const err = 'Wrong at_hash';\n              this.logger.warn(err);\n              return Promise.reject(err);\n            } else {\n              return result;\n            }\n          });\n        } else {\n          return result;\n        }\n      });\n    });\n  }\n  /**\n   * Returns the received claims about the user.\n   */\n  getIdentityClaims() {\n    const claims = this._storage.getItem('id_token_claims_obj');\n    if (!claims) {\n      return null;\n    }\n    return JSON.parse(claims);\n  }\n  /**\n   * Returns the granted scopes from the server.\n   */\n  getGrantedScopes() {\n    const scopes = this._storage.getItem('granted_scopes');\n    if (!scopes) {\n      return null;\n    }\n    return JSON.parse(scopes);\n  }\n  /**\n   * Returns the current id_token.\n   */\n  getIdToken() {\n    return this._storage ? this._storage.getItem('id_token') : null;\n  }\n  padBase64(base64data) {\n    while (base64data.length % 4 !== 0) {\n      base64data += '=';\n    }\n    return base64data;\n  }\n  /**\n   * Returns the current access_token.\n   */\n  getAccessToken() {\n    return this._storage ? this._storage.getItem('access_token') : null;\n  }\n  getRefreshToken() {\n    return this._storage ? this._storage.getItem('refresh_token') : null;\n  }\n  /**\n   * Returns the expiration date of the access_token\n   * as milliseconds since 1970.\n   */\n  getAccessTokenExpiration() {\n    if (!this._storage.getItem('expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('expires_at'), 10);\n  }\n  getAccessTokenStoredAt() {\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n  }\n  getIdTokenStoredAt() {\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n  }\n  /**\n   * Returns the expiration date of the id_token\n   * as milliseconds since 1970.\n   */\n  getIdTokenExpiration() {\n    if (!this._storage.getItem('id_token_expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n  }\n  /**\n   * Checkes, whether there is a valid access_token.\n   */\n  hasValidAccessToken() {\n    if (this.getAccessToken()) {\n      const expiresAt = this._storage.getItem('expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) - this.decreaseExpirationBySec < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Checks whether there is a valid id_token.\n   */\n  hasValidIdToken() {\n    if (this.getIdToken()) {\n      const expiresAt = this._storage.getItem('id_token_expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) - this.decreaseExpirationBySec < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\n   */\n  getCustomTokenResponseProperty(requestedProperty) {\n    return this._storage && this.config.customTokenParameters && this.config.customTokenParameters.indexOf(requestedProperty) >= 0 && this._storage.getItem(requestedProperty) !== null ? JSON.parse(this._storage.getItem(requestedProperty)) : null;\n  }\n  /**\n   * Returns the auth-header that can be used\n   * to transmit the access_token to a service\n   */\n  authorizationHeader() {\n    return 'Bearer ' + this.getAccessToken();\n  }\n  logOut(customParameters = {}, state = '') {\n    let noRedirectToLogoutUrl = false;\n    if (typeof customParameters === 'boolean') {\n      noRedirectToLogoutUrl = customParameters;\n      customParameters = {};\n    }\n    const id_token = this.getIdToken();\n    this._storage.removeItem('access_token');\n    this._storage.removeItem('id_token');\n    this._storage.removeItem('refresh_token');\n    if (this.saveNoncesInLocalStorage) {\n      localStorage.removeItem('nonce');\n      localStorage.removeItem('PKCE_verifier');\n    } else {\n      this._storage.removeItem('nonce');\n      this._storage.removeItem('PKCE_verifier');\n    }\n    this._storage.removeItem('expires_at');\n    this._storage.removeItem('id_token_claims_obj');\n    this._storage.removeItem('id_token_expires_at');\n    this._storage.removeItem('id_token_stored_at');\n    this._storage.removeItem('access_token_stored_at');\n    this._storage.removeItem('granted_scopes');\n    this._storage.removeItem('session_state');\n    if (this.config.customTokenParameters) {\n      this.config.customTokenParameters.forEach(customParam => this._storage.removeItem(customParam));\n    }\n    this.silentRefreshSubject = null;\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\n    if (!this.logoutUrl) {\n      return;\n    }\n    if (noRedirectToLogoutUrl) {\n      return;\n    }\n    // if (!id_token && !this.postLogoutRedirectUri) {\n    //   return;\n    // }\n    let logoutUrl;\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\n      throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    // For backward compatibility\n    if (this.logoutUrl.indexOf('{{') > -1) {\n      logoutUrl = this.logoutUrl.replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token)).replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\n    } else {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      });\n      if (id_token) {\n        params = params.set('id_token_hint', id_token);\n      }\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri || '';\n      if (postLogoutUrl) {\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\n        if (state) {\n          params = params.set('state', state);\n        }\n      }\n      for (const key in customParameters) {\n        params = params.set(key, customParameters[key]);\n      }\n      logoutUrl = this.logoutUrl + (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') + params.toString();\n    }\n    this.config.openUri(logoutUrl);\n  }\n  /**\n   * @ignore\n   */\n  createAndSaveNonce() {\n    const that = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    return this.createNonce().then(function (nonce) {\n      // Use localStorage for nonce if possible\n      // localStorage is the only storage who survives a\n      // redirect in ALL browsers (also IE)\n      // Otherwiese we'd force teams who have to support\n      // IE into using localStorage for everything\n      if (that.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        localStorage.setItem('nonce', nonce);\n      } else {\n        that._storage.setItem('nonce', nonce);\n      }\n      return nonce;\n    });\n  }\n  /**\n   * @ignore\n   */\n  ngOnDestroy() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.removeSilentRefreshEventListener();\n    const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\n    if (silentRefreshFrame) {\n      silentRefreshFrame.remove();\n    }\n    this.stopSessionCheckTimer();\n    this.removeSessionCheckEventListener();\n    const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\n    if (sessionCheckFrame) {\n      sessionCheckFrame.remove();\n    }\n  }\n  createNonce() {\n    return new Promise(resolve => {\n      if (this.rngUrl) {\n        throw new Error('createNonce with rng-web-api has not been implemented so far');\n      }\n      /*\n       * This alphabet is from:\n       * https://tools.ietf.org/html/rfc7636#section-4.1\n       *\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\n       */\n      const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      let size = 45;\n      let id = '';\n      const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\n      if (crypto) {\n        let bytes = new Uint8Array(size);\n        crypto.getRandomValues(bytes);\n        // Needed for IE\n        if (!bytes.map) {\n          bytes.map = Array.prototype.map;\n        }\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\n        id = String.fromCharCode.apply(null, bytes);\n      } else {\n        while (0 < size--) {\n          id += unreserved[Math.random() * unreserved.length | 0];\n        }\n      }\n      resolve(base64UrlEncode(id));\n    });\n  }\n  checkAtHash(params) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.tokenValidationHandler) {\n        _this4.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\n        return true;\n      }\n      return _this4.tokenValidationHandler.validateAtHash(params);\n    })();\n  }\n  checkSignature(params) {\n    if (!this.tokenValidationHandler) {\n      this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\n      return Promise.resolve(null);\n    }\n    return this.tokenValidationHandler.validateSignature(params);\n  }\n  /**\n   * Start the implicit flow or the code flow,\n   * depending on your configuration.\n   */\n  initLoginFlow(additionalState = '', params = {}) {\n    if (this.responseType === 'code') {\n      return this.initCodeFlow(additionalState, params);\n    } else {\n      return this.initImplicitFlow(additionalState, params);\n    }\n  }\n  /**\n   * Starts the authorization code flow and redirects to user to\n   * the auth servers login url.\n   */\n  initCodeFlow(additionalState = '', params = {}) {\n    if (this.loginUrl !== '') {\n      this.initCodeFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(() => this.initCodeFlowInternal(additionalState, params));\n    }\n  }\n  initCodeFlowInternal(additionalState = '', params = {}) {\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initAuthorizationCodeFlow');\n      console.error(error);\n    });\n  }\n  createChallangeVerifierPairForPKCE() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.crypto) {\n        throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n      }\n      const verifier = yield _this5.createNonce();\n      const challengeRaw = yield _this5.crypto.calcHash(verifier, 'sha-256');\n      const challenge = base64UrlEncode(challengeRaw);\n      return [challenge, verifier];\n    })();\n  }\n  extractRecognizedCustomParameters(tokenResponse) {\n    const foundParameters = new Map();\n    if (!this.config.customTokenParameters) {\n      return foundParameters;\n    }\n    this.config.customTokenParameters.forEach(recognizedParameter => {\n      if (tokenResponse[recognizedParameter]) {\n        foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n      }\n    });\n    return foundParameters;\n  }\n  /**\n   * Revokes the auth token to secure the vulnarability\n   * of the token issued allowing the authorization server to clean\n   * up any security credentials associated with the authorization\n   */\n  revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\n    const revokeEndpoint = this.revocationEndpoint;\n    const accessToken = this.getAccessToken();\n    const refreshToken = this.getRefreshToken();\n    if (!accessToken) {\n      return Promise.resolve();\n    }\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    });\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    return new Promise((resolve, reject) => {\n      let revokeAccessToken;\n      let revokeRefreshToken;\n      if (accessToken) {\n        const revokationParams = params.set('token', accessToken).set('token_type_hint', 'access_token');\n        revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeAccessToken = of(null);\n      }\n      if (refreshToken) {\n        const revokationParams = params.set('token', refreshToken).set('token_type_hint', 'refresh_token');\n        revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeRefreshToken = of(null);\n      }\n      if (ignoreCorsIssues) {\n        revokeAccessToken = revokeAccessToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n        revokeRefreshToken = revokeRefreshToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n      }\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(res => {\n        this.logOut(customParameters);\n        resolve(res);\n        this.logger.info('Token successfully revoked');\n      }, err => {\n        this.logger.error('Error revoking token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\n   * Clear location.hash if it's present\n   */\n  clearLocationHash() {\n    // Checking for empty hash is necessary for Firefox\n    // as setting an empty hash to an empty string adds # to the URL\n    if (location.hash != '') {\n      location.hash = '';\n    }\n  }\n  static #_ = this.ɵfac = function OAuthService_Factory(t) {\n    return new (t || OAuthService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(OAuthStorage, 8), i0.ɵɵinject(ValidationHandler, 8), i0.ɵɵinject(AuthConfig, 8), i0.ɵɵinject(UrlHelperService), i0.ɵɵinject(OAuthLogger), i0.ɵɵinject(HashHandler, 8), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(DateTimeProvider));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OAuthService,\n    factory: OAuthService.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthService, [{\n    type: Injectable\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i1.HttpClient\n  }, {\n    type: OAuthStorage,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ValidationHandler,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: AuthConfig,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: UrlHelperService\n  }, {\n    type: OAuthLogger\n  }, {\n    type: HashHandler,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: DateTimeProvider\n  }], null);\n})();\nclass OAuthResourceServerErrorHandler {}\nclass OAuthNoopResourceServerErrorHandler {\n  handleError(err) {\n    return throwError(err);\n  }\n}\nclass DefaultOAuthInterceptor {\n  constructor(oAuthService, errorHandler, moduleConfig) {\n    this.oAuthService = oAuthService;\n    this.errorHandler = errorHandler;\n    this.moduleConfig = moduleConfig;\n  }\n  checkUrl(url) {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\n    }\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.toLowerCase().startsWith(u.toLowerCase()));\n    }\n    return true;\n  }\n  intercept(req, next) {\n    const url = req.url.toLowerCase();\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n    if (!sendAccessToken) {\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n    return merge(of(this.oAuthService.getAccessToken()).pipe(filter(token => !!token)), this.oAuthService.events.pipe(filter(e => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError(() => of(null)),\n    // timeout is not an error\n    map(() => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap(token => {\n      if (token) {\n        const header = 'Bearer ' + token;\n        const headers = req.headers.set('Authorization', header);\n        req = req.clone({\n          headers\n        });\n      }\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }));\n  }\n  static #_ = this.ɵfac = function DefaultOAuthInterceptor_Factory(t) {\n    return new (t || DefaultOAuthInterceptor)(i0.ɵɵinject(OAuthService), i0.ɵɵinject(OAuthResourceServerErrorHandler), i0.ɵɵinject(OAuthModuleConfig, 8));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DefaultOAuthInterceptor,\n    factory: DefaultOAuthInterceptor.ɵfac\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{\n    type: Injectable\n  }], () => [{\n    type: OAuthService\n  }, {\n    type: OAuthResourceServerErrorHandler\n  }, {\n    type: OAuthModuleConfig,\n    decorators: [{\n      type: Optional\n    }]\n  }], null);\n})();\nfunction createDefaultLogger() {\n  return console;\n}\nfunction createDefaultStorage() {\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\n}\nfunction provideOAuthClient(config = null, validationHandlerClass = NullValidationHandler) {\n  return makeEnvironmentProviders([OAuthService, UrlHelperService, {\n    provide: OAuthLogger,\n    useFactory: createDefaultLogger\n  }, {\n    provide: OAuthStorage,\n    useFactory: createDefaultStorage\n  }, {\n    provide: ValidationHandler,\n    useClass: validationHandlerClass\n  }, {\n    provide: HashHandler,\n    useClass: DefaultHashHandler\n  }, {\n    provide: OAuthResourceServerErrorHandler,\n    useClass: OAuthNoopResourceServerErrorHandler\n  }, {\n    provide: OAuthModuleConfig,\n    useValue: config\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: DefaultOAuthInterceptor,\n    multi: true\n  }, {\n    provide: DateTimeProvider,\n    useClass: SystemDateTimeProvider\n  }]);\n}\nclass OAuthModule {\n  static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\n    return {\n      ngModule: OAuthModule,\n      providers: [provideOAuthClient(config, validationHandlerClass)]\n    };\n  }\n  static #_ = this.ɵfac = function OAuthModule_Factory(t) {\n    return new (t || OAuthModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OAuthModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [],\n      exports: []\n    }]\n  }], null, null);\n})();\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n/**\n * This is just a dummy of the JwksValidationHandler\n * telling the users that the real one has been moved\n * to an library of its own, namely angular-oauth2-oidc-utils\n */\nclass JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n}\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler, provideOAuthClient };","map":{"version":3,"names":["i0","Injectable","Optional","Inject","makeEnvironmentProviders","NgModule","InjectionToken","DOCUMENT","CommonModule","i1","HttpHeaders","HttpParams","HTTP_INTERCEPTORS","Subject","of","from","race","throwError","combineLatest","merge","filter","tap","debounceTime","delay","map","switchMap","first","catchError","take","mergeMap","timeout","NullValidationHandler","validateSignature","validationParams","Promise","resolve","validateAtHash","OAuthModuleConfig","OAuthResourceServerConfig","DateTimeProvider","SystemDateTimeProvider","now","Date","new","_","ɵfac","ɵSystemDateTimeProvider_BaseFactory","SystemDateTimeProvider_Factory","t","ɵɵgetInheritedFactory","_2","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","LoginOptions","constructor","disableNonceCheck","preventClearHashAfterLogin","OAuthLogger","OAuthStorage","MemoryStorage","data","Map","getItem","key","get","removeItem","delete","setItem","set","MemoryStorage_Factory","ReceivedTokens","OAuthEvent","OAuthSuccessEvent","info","OAuthInfoEvent","OAuthErrorEvent","reason","params","b64DecodeUnicode","str","base64","replace","decodeURIComponent","atob","split","c","charCodeAt","toString","slice","join","base64UrlEncode","btoa","AuthConfig","json","clientId","redirectUri","postLogoutRedirectUri","redirectUriAsPostLogoutRedirectUriFallback","loginUrl","scope","resource","rngUrl","oidc","requestAccessToken","options","issuer","logoutUrl","clearHashAfterLogin","tokenEndpoint","revocationEndpoint","customTokenParameters","userinfoEndpoint","responseType","showDebugInformation","silentRefreshRedirectUri","silentRefreshMessagePrefix","silentRefreshShowIFrame","siletRefreshTimeout","silentRefreshTimeout","dummyClientSecret","requireHttps","strictDiscoveryDocumentValidation","jwks","customQueryParams","silentRefreshIFrameName","timeoutFactor","sessionChecksEnabled","sessionCheckIntervall","sessionCheckIFrameUrl","sessionCheckIFrameName","disableAtHashCheck","skipSubjectCheck","useIdTokenHintForSilentRefresh","skipIssuerCheck","nonceStateSeparator","useHttpBasicAuth","decreaseExpirationBySec","waitForTokenInMsec","disablePKCE","preserveRequestedRoute","disableIdTokenTimer","checkOrigin","openUri","uri","location","href","Object","assign","WebHttpUrlEncodingCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeValue","ValidationHandler","AbstractValidationHandler","_this","_asyncToGenerator","hashAlg","inferHashAlgorithm","idTokenHeader","tokenHash","calcHash","accessToken","leftMostHalf","substr","length","atHash","claimsAtHash","idTokenClaims","console","error","jwtHeader","alg","match","Error","UrlHelperService","getHashFragmentParams","customHashFragment","hash","window","indexOf","questionMarkPosition","parseQueryString","queryString","pair","separatorIndex","escapedKey","escapedValue","value","pairs","i","UrlHelperService_Factory","digestLength","blockSize","K","Uint32Array","hashBlocks","w","p","pos","len","a","b","d","e","f","g","h","u","j","t1","t2","Hash","state","Int32Array","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","reset","clean","update","dataLength","dataPos","finish","out","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","HMAC","inner","outer","pad","istate","ostate","hmac","fillBuffer","counter","num","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","fill","pbkdf2","password","iterations","dkLen","prf","ctr","dk","HashHandler","decodeUTF8","s","TypeError","encodeUTF8","arr","push","String","fromCharCode","DefaultHashHandler","valueToHash","algorithm","candHash","toHashString2","byteArray","result","toHashString","DefaultHashHandler_Factory","OAuthService","ngZone","http","storage","tokenValidationHandler","config","urlHelper","logger","crypto","document","dateTimeService","discoveryDocumentLoaded","eventsSubject","discoveryDocumentLoadedSubject","grantTypesSupported","inImplicitFlow","saveNoncesInLocalStorage","debug","discoveryDocumentLoaded$","asObservable","events","configure","setStorage","sessionStorage","checkLocalStorageAccessable","ua","navigator","userAgent","msie","includes","setupRefreshTimer","test","localStorage","setupSessionCheck","configChanged","restartSessionChecksIfStillLoggedIn","hasValidIdToken","initSessionCheck","restartRefreshTimerIfStillLoggedIn","setupExpirationTimers","pipe","subscribe","setupAutomaticSilentRefresh","listenTo","noPrompt","shouldRunSilentRefresh","clearAutomaticRefreshTimer","automaticRefreshSubscription","refreshInternal","catch","useSilentRefresh","refreshToken","silentRefresh","loadDiscoveryDocumentAndTryLogin","loadDiscoveryDocument","then","tryLogin","loadDiscoveryDocumentAndLogin","hasValidAccessToken","initLoginFlow","args","validateUrlFromDiscoveryDocument","url","errors","httpsCheck","validateUrlForHttps","issuerCheck","validateUrlAgainstIssuer","lcUrl","toLowerCase","startsWith","assertUrlNotNullAndCorrectProtocol","description","clearAccessTokenTimer","clearIdTokenTimer","tokenReceivedSubscription","unsubscribe","setupAccessTokenTimer","setupIdTokenTimer","expiration","getAccessTokenExpiration","storedAt","getAccessTokenStoredAt","calcTimeout","runOutsideAngular","accessTokenTimeoutSubscription","run","next","getIdTokenExpiration","getIdTokenStoredAt","idTokenTimeoutSubscription","stopAutomaticRefresh","delta","duration","Math","max","maxTimeoutValue","_storage","fullUrl","reject","endsWith","doc","validateDiscoveryDocument","authorization_endpoint","end_session_endpoint","grant_types_supported","token_endpoint","userinfo_endpoint","jwksUri","jwks_uri","check_session_iframe","revocation_endpoint","loadJwks","discoveryDocument","event","err","warn","fetchTokenUsingPasswordFlowAndLoadUserProfile","userName","headers","fetchTokenUsingPasswordFlow","loadUserProfile","getAccessToken","observe","response","JSON","stringify","parse","body","existingClaims","getIdentityClaims","sub","parameters","username","fetchTokenUsingGrant","grantType","encoder","header","getOwnPropertyNames","keys","post","tokenResponse","storeAccessTokenResponse","access_token","refresh_token","expires_in","fallbackAccessTokenExpirationTimeInSec","extractRecognizedCustomParameters","id_token","processIdToken","storeIdToken","removeSilentRefreshEventListener","silentRefreshPostMessageEventListener","removeEventListener","setupSilentRefreshEventListener","message","processMessageEventMessage","origin","customRedirectUri","addEventListener","claims","getIdToken","existingIframe","getElementById","removeChild","silentRefreshSubject","iframe","createElement","id","createLoginUrl","setAttribute","style","appendChild","success","toPromise","initImplicitFlowInPopup","initLoginFlowInPopup","display","checkForPopupClosedInterval","windowRef","open","calculatePopupFeatures","closed","checkForPopupClosedTimer","cleanup","checkForPopupClosed","setInterval","clearInterval","storageListener","listener","close","log","newValue","height","width","screenLeft","outerWidth","top","screenTop","outerHeight","expectedPrefix","prefixedMessage","canPerformSessionCheck","sessionState","getSessionState","setupSessionCheckEventListener","removeSessionCheckEventListener","sessionCheckEventListener","handleSessionUnchanged","handleSessionChange","handleSessionError","stopSessionCheckTimer","logOut","waitForSilentRefreshAfterSessionChange","startSessionCheckTimer","sessionCheckTimer","checkSession","bind","contentWindow","postMessage","loginHint","_this2","that","nonce","createAndSaveNonce","seperationChar","challenge","verifier","createChallangeVerifierPairForPKCE","initImplicitFlowInternal","additionalState","addParams","initImplicitFlow","resetImplicitFlow","callOnTokenReceivedIfExists","onTokenReceived","tokenParams","idClaims","idToken","expiresIn","grantedScopes","customParameters","Array","isArray","expiresInMilliSeconds","expiresAt","getTime","forEach","tryLoginCodeFlow","tryLoginImplicitFlow","charAt","_this3","querySource","substring","search","parts","getCodePartsFromUrl","code","pathname","history","replaceState","name","nonceInState","userState","parseState","handleLoginError","saveRequestedRoute","disableOAuth2StateCheck","validateNonce","storeSessionState","getTokenFromCode","restoreRequestedRoute","requestedRoute","PKCEVerifier","fetchAndProcessToken","clearLocationHash","validationHandler","idx","savedNonce","idTokenClaimsJson","idTokenExpiresAt","onLoginError","getClockSkewInMsec","defaultSkewMsc","clockSkewInSec","skipNonceCheck","tokenParts","headerBase64","padBase64","headerJson","claimsBase64","claimsJson","aud","every","iat","iss","prototype","hasOwnProperty","call","issuedAtMSec","expiresAtMSec","exp","clockSkewInMSec","loadKeys","checkSignature","idTokenHeaderJson","checkAtHash","atHashValid","atHashCheckEnabled","getGrantedScopes","scopes","base64data","getRefreshToken","parseInt","getCustomTokenResponseProperty","requestedProperty","authorizationHeader","noRedirectToLogoutUrl","customParam","postLogoutUrl","createNonce","ngOnDestroy","silentRefreshFrame","remove","sessionCheckFrame","unreserved","size","self","bytes","getRandomValues","x","apply","random","_this4","initCodeFlow","initCodeFlowInternal","_this5","challengeRaw","foundParameters","recognizedParameter","revokeTokenAndLogout","ignoreCorsIssues","revokeEndpoint","revokeAccessToken","revokeRefreshToken","revokationParams","status","res","OAuthService_Factory","ɵɵinject","NgZone","HttpClient","decorators","Document","OAuthResourceServerErrorHandler","OAuthNoopResourceServerErrorHandler","handleError","DefaultOAuthInterceptor","oAuthService","errorHandler","moduleConfig","checkUrl","resourceServer","customUrlValidation","allowedUrls","find","intercept","req","handle","sendAccessToken","clone","DefaultOAuthInterceptor_Factory","createDefaultLogger","createDefaultStorage","provideOAuthClient","validationHandlerClass","provide","useFactory","useClass","useValue","multi","OAuthModule","forRoot","ngModule","providers","OAuthModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports","JwksValidationHandler","AUTH_CONFIG"],"sources":["C:/Users/Javier/Documents/proyectos/e-commerce/node_modules/angular-oauth2-oidc/fesm2022/angular-oauth2-oidc.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, makeEnvironmentProviders, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, map, switchMap, first, catchError, take, mergeMap, timeout } from 'rxjs/operators';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nclass NullValidationHandler {\n    validateSignature(validationParams) {\n        return Promise.resolve(null);\n    }\n    validateAtHash(validationParams) {\n        return Promise.resolve(true);\n    }\n}\n\nclass OAuthModuleConfig {\n}\nclass OAuthResourceServerConfig {\n}\n\nclass DateTimeProvider {\n}\nclass SystemDateTimeProvider extends DateTimeProvider {\n    now() {\n        return Date.now();\n    }\n    new() {\n        return new Date();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: SystemDateTimeProvider, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: SystemDateTimeProvider }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: SystemDateTimeProvider, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nclass LoginOptions {\n    constructor() {\n        /**\n         * Set this to true to disable the nonce\n         * check which is used to avoid\n         * replay attacks.\n         * This flag should never be true in\n         * production environments.\n         */\n        this.disableNonceCheck = false;\n        /**\n         * Normally, you want to clear your hash fragment after\n         * the lib read the token(s) so that they are not displayed\n         * anymore in the url. If not, set this to true. For code flow\n         * this controls removing query string values.\n         */\n        this.preventClearHashAfterLogin = false;\n    }\n}\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nclass OAuthLogger {\n}\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nclass OAuthStorage {\n}\nclass MemoryStorage {\n    constructor() {\n        this.data = new Map();\n    }\n    getItem(key) {\n        return this.data.get(key);\n    }\n    removeItem(key) {\n        this.data.delete(key);\n    }\n    setItem(key, data) {\n        this.data.set(key, data);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: MemoryStorage, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: MemoryStorage }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: MemoryStorage, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nclass ReceivedTokens {\n}\n\nclass OAuthEvent {\n    constructor(type) {\n        this.type = type;\n    }\n}\nclass OAuthSuccessEvent extends OAuthEvent {\n    constructor(type, info = null) {\n        super(type);\n        this.info = info;\n    }\n}\nclass OAuthInfoEvent extends OAuthEvent {\n    constructor(type, info = null) {\n        super(type);\n        this.info = info;\n    }\n}\nclass OAuthErrorEvent extends OAuthEvent {\n    constructor(type, reason, params = null) {\n        super(type);\n        this.reason = reason;\n        this.params = params;\n    }\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\nfunction b64DecodeUnicode(str) {\n    const base64 = str.replace(/-/g, '+').replace(/_/g, '/');\n    return decodeURIComponent(atob(base64)\n        .split('')\n        .map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    })\n        .join(''));\n}\nfunction base64UrlEncode(str) {\n    const base64 = btoa(str);\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nclass AuthConfig {\n    constructor(json) {\n        /**\n         * The client's id as registered with the auth server\n         */\n        this.clientId = '';\n        /**\n         * The client's redirectUri as registered with the auth server\n         */\n        this.redirectUri = '';\n        /**\n         * An optional second redirectUri where the auth server\n         * redirects the user to after logging out.\n         */\n        this.postLogoutRedirectUri = '';\n        /**\n         * Defines whether to use 'redirectUri' as a replacement\n         * of 'postLogoutRedirectUri' if the latter is not set.\n         */\n        this.redirectUriAsPostLogoutRedirectUriFallback = true;\n        /**\n         * The auth server's endpoint that allows to log\n         * the user in when using implicit flow.\n         */\n        this.loginUrl = '';\n        /**\n         * The requested scopes\n         */\n        this.scope = 'openid profile';\n        this.resource = '';\n        this.rngUrl = '';\n        /**\n         * Defines whether to use OpenId Connect during\n         * implicit flow.\n         */\n        this.oidc = true;\n        /**\n         * Defines whether to request an access token during\n         * implicit flow.\n         */\n        this.requestAccessToken = true;\n        this.options = null;\n        /**\n         * The issuer's uri.\n         */\n        this.issuer = '';\n        /**\n         * The logout url.\n         */\n        this.logoutUrl = '';\n        /**\n         * Defines whether to clear the hash fragment after logging in.\n         */\n        this.clearHashAfterLogin = true;\n        /**\n         * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n         */\n        this.tokenEndpoint = null;\n        /**\n         * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\n         */\n        this.revocationEndpoint = null;\n        /**\n         * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\n         */\n        this.customTokenParameters = [];\n        /**\n         * Url of the userinfo endpoint as defined by OpenId Connect.\n         */\n        this.userinfoEndpoint = null;\n        this.responseType = '';\n        /**\n         * Defines whether additional debug information should\n         * be shown at the console. Note that in certain browsers\n         * the verbosity of the console needs to be explicitly set\n         * to include Debug level messages.\n         */\n        this.showDebugInformation = false;\n        /**\n         * The redirect uri used when doing silent refresh.\n         */\n        this.silentRefreshRedirectUri = '';\n        this.silentRefreshMessagePrefix = '';\n        /**\n         * Set this to true to display the iframe used for\n         * silent refresh for debugging.\n         */\n        this.silentRefreshShowIFrame = false;\n        /**\n         * Timeout for silent refresh.\n         * @internal\n         * @deprecated use silentRefreshTimeout\n         */\n        this.siletRefreshTimeout = 1000 * 20;\n        /**\n         * Timeout for silent refresh.\n         */\n        this.silentRefreshTimeout = 1000 * 20;\n        /**\n         * Some auth servers don't allow using password flow\n         * w/o a client secret while the standards do not\n         * demand for it. In this case, you can set a password\n         * here. As this password is exposed to the public\n         * it does not bring additional security and is therefore\n         * as good as using no password.\n         */\n        this.dummyClientSecret = '';\n        /**\n         * Defines whether https is required.\n         * The default value is remoteOnly which only allows\n         * http for localhost, while every other domains need\n         * to be used with https.\n         */\n        this.requireHttps = 'remoteOnly';\n        /**\n         * Defines whether every url provided by the discovery\n         * document has to start with the issuer's url.\n         */\n        this.strictDiscoveryDocumentValidation = true;\n        /**\n         * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\n         * with keys used to validate received id_tokens.\n         * This is taken out of the disovery document. Can be set manually too.\n         */\n        this.jwks = null;\n        /**\n         * Map with additional query parameter that are appended to\n         * the request when initializing implicit flow.\n         */\n        this.customQueryParams = null;\n        this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\n        /**\n         * Defines when the token_timeout event should be raised.\n         * If you set this to the default value 0.75, the event\n         * is triggered after 75% of the token's life time.\n         */\n        this.timeoutFactor = 0.75;\n        /**\n         * If true, the lib will try to check whether the user\n         * is still logged in on a regular basis as described\n         * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n         */\n        this.sessionChecksEnabled = false;\n        /**\n         * Interval in msec for checking the session\n         * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n         */\n        this.sessionCheckIntervall = 3 * 1000;\n        /**\n         * Url for the iframe used for session checks\n         */\n        this.sessionCheckIFrameUrl = null;\n        /**\n         * Name of the iframe to use for session checks\n         */\n        this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\n        /**\n         * This property has been introduced to disable at_hash checks\n         * and is indented for Identity Provider that does not deliver\n         * an at_hash EVEN THOUGH its recommended by the OIDC specs.\n         * Of course, when disabling these checks then we are bypassing\n         * a security check which means we are more vulnerable.\n         */\n        this.disableAtHashCheck = false;\n        /**\n         * Defines wether to check the subject of a refreshed token after silent refresh.\n         * Normally, it should be the same as before.\n         */\n        this.skipSubjectCheck = false;\n        this.useIdTokenHintForSilentRefresh = false;\n        /**\n         * Defined whether to skip the validation of the issuer in the discovery document.\n         * Normally, the discovey document's url starts with the url of the issuer.\n         */\n        this.skipIssuerCheck = false;\n        /**\n         * final state sent to issuer is built as follows:\n         * state = nonce + nonceStateSeparator + additional state\n         * Default separator is ';' (encoded %3B).\n         * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\n         */\n        this.nonceStateSeparator = ';';\n        /**\n         * Set this to true to use HTTP BASIC auth for AJAX calls\n         */\n        this.useHttpBasicAuth = false;\n        /**\n         * Decreases the Expiration time of tokens by this number of seconds\n         */\n        this.decreaseExpirationBySec = 0;\n        /**\n         * The interceptors waits this time span if there is no token\n         */\n        this.waitForTokenInMsec = 0;\n        /**\n         * Code Flow is by defauld used together with PKCI which is also higly recommented.\n         * You can disbale it here by setting this flag to true.\n         * https://tools.ietf.org/html/rfc7636#section-1.1\n         */\n        this.disablePKCE = false;\n        /**\n         * Set this to true to preserve the requested route including query parameters after code flow login.\n         * This setting enables deep linking for the code flow.\n         */\n        this.preserveRequestedRoute = false;\n        /**\n         * Allows to disable the timer for the id_token used\n         * for token refresh\n         */\n        this.disableIdTokenTimer = false;\n        /**\n         * Blocks other origins requesting a silent refresh\n         */\n        this.checkOrigin = false;\n        /**\n         * This property allows you to override the method that is used to open the login url,\n         * allowing a way for implementations to specify their own method of routing to new\n         * urls.\n         */\n        this.openUri = (uri) => {\n            location.href = uri;\n        };\n        if (json) {\n            Object.assign(this, json);\n        }\n    }\n}\n\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nclass WebHttpUrlEncodingCodec {\n    encodeKey(k) {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v) {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k) {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v) {\n        return decodeURIComponent(v);\n    }\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nclass ValidationHandler {\n}\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nclass AbstractValidationHandler {\n    /**\n     * Validates the at_hash in an id_token against the received access_token.\n     */\n    async validateAtHash(params) {\n        const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n        const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n        const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n        const atHash = base64UrlEncode(leftMostHalf);\n        const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n        if (atHash !== claimsAtHash) {\n            console.error('exptected at_hash: ' + atHash);\n            console.error('actual at_hash: ' + claimsAtHash);\n        }\n        return atHash === claimsAtHash;\n    }\n    /**\n     * Infers the name of the hash algorithm to use\n     * from the alg field of an id_token.\n     *\n     * @param jwtHeader the id_token's parsed header\n     */\n    inferHashAlgorithm(jwtHeader) {\n        const alg = jwtHeader['alg'];\n        if (!alg.match(/^.S[0-9]{3}$/)) {\n            throw new Error('Algorithm not supported: ' + alg);\n        }\n        return 'sha-' + alg.substr(2);\n    }\n}\n\nclass UrlHelperService {\n    getHashFragmentParams(customHashFragment) {\n        let hash = customHashFragment || window.location.hash;\n        hash = decodeURIComponent(hash);\n        if (hash.indexOf('#') !== 0) {\n            return {};\n        }\n        const questionMarkPosition = hash.indexOf('?');\n        if (questionMarkPosition > -1) {\n            hash = hash.substr(questionMarkPosition + 1);\n        }\n        else {\n            hash = hash.substr(1);\n        }\n        return this.parseQueryString(hash);\n    }\n    parseQueryString(queryString) {\n        const data = {};\n        let pair, separatorIndex, escapedKey, escapedValue, key, value;\n        if (queryString === null) {\n            return data;\n        }\n        const pairs = queryString.split('&');\n        for (let i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            separatorIndex = pair.indexOf('=');\n            if (separatorIndex === -1) {\n                escapedKey = pair;\n                escapedValue = null;\n            }\n            else {\n                escapedKey = pair.substr(0, separatorIndex);\n                escapedValue = pair.substr(separatorIndex + 1);\n            }\n            key = decodeURIComponent(escapedKey);\n            value = decodeURIComponent(escapedValue);\n            if (key.substr(0, 1) === '/') {\n                key = key.substr(1);\n            }\n            data[key] = value;\n        }\n        return data;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: UrlHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: UrlHelperService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: UrlHelperService, decorators: [{\n            type: Injectable\n        }] });\n\n// Credits: https://github.com/dchest/fast-sha256-js/tree/master/src\n// We add this lib directly b/c the published version of fast-sha256-js\n// is commonjs and hence leads to a warning about tree-shakability emitted\n// by the Angular CLI\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nconst digestLength = 32;\nconst blockSize = 64;\n// SHA-256 constants\nconst K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n    0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n    0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n    0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n    0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n]);\nfunction hashBlocks(w, v, p, pos, len) {\n    let a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n    while (len >= 64) {\n        a = v[0];\n        b = v[1];\n        c = v[2];\n        d = v[3];\n        e = v[4];\n        f = v[5];\n        g = v[6];\n        h = v[7];\n        for (i = 0; i < 16; i++) {\n            j = pos + i * 4;\n            w[i] =\n                ((p[j] & 0xff) << 24) |\n                    ((p[j + 1] & 0xff) << 16) |\n                    ((p[j + 2] & 0xff) << 8) |\n                    (p[j + 3] & 0xff);\n        }\n        for (i = 16; i < 64; i++) {\n            u = w[i - 2];\n            t1 =\n                ((u >>> 17) | (u << (32 - 17))) ^\n                    ((u >>> 19) | (u << (32 - 19))) ^\n                    (u >>> 10);\n            u = w[i - 15];\n            t2 =\n                ((u >>> 7) | (u << (32 - 7))) ^\n                    ((u >>> 18) | (u << (32 - 18))) ^\n                    (u >>> 3);\n            w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\n        }\n        for (i = 0; i < 64; i++) {\n            t1 =\n                ((((((e >>> 6) | (e << (32 - 6))) ^\n                    ((e >>> 11) | (e << (32 - 11))) ^\n                    ((e >>> 25) | (e << (32 - 25)))) +\n                    ((e & f) ^ (~e & g))) |\n                    0) +\n                    ((h + ((K[i] + w[i]) | 0)) | 0)) |\n                    0;\n            t2 =\n                ((((a >>> 2) | (a << (32 - 2))) ^\n                    ((a >>> 13) | (a << (32 - 13))) ^\n                    ((a >>> 22) | (a << (32 - 22)))) +\n                    ((a & b) ^ (a & c) ^ (b & c))) |\n                    0;\n            h = g;\n            g = f;\n            f = e;\n            e = (d + t1) | 0;\n            d = c;\n            c = b;\n            b = a;\n            a = (t1 + t2) | 0;\n        }\n        v[0] += a;\n        v[1] += b;\n        v[2] += c;\n        v[3] += d;\n        v[4] += e;\n        v[5] += f;\n        v[6] += g;\n        v[7] += h;\n        pos += 64;\n        len -= 64;\n    }\n    return pos;\n}\n// Hash implements SHA256 hash algorithm.\nclass Hash {\n    constructor() {\n        this.digestLength = digestLength;\n        this.blockSize = blockSize;\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\n        this.state = new Int32Array(8); // hash state\n        this.temp = new Int32Array(64); // temporary state\n        this.buffer = new Uint8Array(128); // buffer for data to hash\n        this.bufferLength = 0; // number of bytes in buffer\n        this.bytesHashed = 0; // number of total bytes hashed\n        this.finished = false; // indicates whether the hash was finalized\n        this.reset();\n    }\n    // Resets hash state making it possible\n    // to re-use this instance to hash other data.\n    reset() {\n        this.state[0] = 0x6a09e667;\n        this.state[1] = 0xbb67ae85;\n        this.state[2] = 0x3c6ef372;\n        this.state[3] = 0xa54ff53a;\n        this.state[4] = 0x510e527f;\n        this.state[5] = 0x9b05688c;\n        this.state[6] = 0x1f83d9ab;\n        this.state[7] = 0x5be0cd19;\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        this.finished = false;\n        return this;\n    }\n    // Cleans internal buffers and re-initializes hash state.\n    clean() {\n        for (let i = 0; i < this.buffer.length; i++) {\n            this.buffer[i] = 0;\n        }\n        for (let i = 0; i < this.temp.length; i++) {\n            this.temp[i] = 0;\n        }\n        this.reset();\n    }\n    // Updates hash state with the given data.\n    //\n    // Optionally, length of the data can be specified to hash\n    // fewer bytes than data.length.\n    //\n    // Throws error when trying to update already finalized hash:\n    // instance must be reset to use it again.\n    update(data, dataLength = data.length) {\n        if (this.finished) {\n            throw new Error(\"SHA256: can't update because hash was finished.\");\n        }\n        let dataPos = 0;\n        this.bytesHashed += dataLength;\n        if (this.bufferLength > 0) {\n            while (this.bufferLength < 64 && dataLength > 0) {\n                this.buffer[this.bufferLength++] = data[dataPos++];\n                dataLength--;\n            }\n            if (this.bufferLength === 64) {\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n                this.bufferLength = 0;\n            }\n        }\n        if (dataLength >= 64) {\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n            dataLength %= 64;\n        }\n        while (dataLength > 0) {\n            this.buffer[this.bufferLength++] = data[dataPos++];\n            dataLength--;\n        }\n        return this;\n    }\n    // Finalizes hash state and puts hash into out.\n    //\n    // If hash was already finalized, puts the same value.\n    finish(out) {\n        if (!this.finished) {\n            const bytesHashed = this.bytesHashed;\n            const left = this.bufferLength;\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\n            const bitLenLo = bytesHashed << 3;\n            const padLength = bytesHashed % 64 < 56 ? 64 : 128;\n            this.buffer[left] = 0x80;\n            for (let i = left + 1; i < padLength - 8; i++) {\n                this.buffer[i] = 0;\n            }\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n            this.finished = true;\n        }\n        for (let i = 0; i < 8; i++) {\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return this;\n    }\n    // Returns the final hash digest.\n    digest() {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n    // Internal function for use in HMAC for optimization.\n    _saveState(out) {\n        for (let i = 0; i < this.state.length; i++) {\n            out[i] = this.state[i];\n        }\n    }\n    // Internal function for use in HMAC for optimization.\n    _restoreState(from, bytesHashed) {\n        for (let i = 0; i < this.state.length; i++) {\n            this.state[i] = from[i];\n        }\n        this.bytesHashed = bytesHashed;\n        this.finished = false;\n        this.bufferLength = 0;\n    }\n}\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nclass HMAC {\n    constructor(key) {\n        this.inner = new Hash();\n        this.outer = new Hash();\n        this.blockSize = this.inner.blockSize;\n        this.digestLength = this.inner.digestLength;\n        const pad = new Uint8Array(this.blockSize);\n        if (key.length > this.blockSize) {\n            new Hash().update(key).finish(pad).clean();\n        }\n        else {\n            for (let i = 0; i < key.length; i++) {\n                pad[i] = key[i];\n            }\n        }\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36;\n        }\n        this.inner.update(pad);\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] ^= 0x36 ^ 0x5c;\n        }\n        this.outer.update(pad);\n        this.istate = new Uint32Array(8);\n        this.ostate = new Uint32Array(8);\n        this.inner._saveState(this.istate);\n        this.outer._saveState(this.ostate);\n        for (let i = 0; i < pad.length; i++) {\n            pad[i] = 0;\n        }\n    }\n    // Returns HMAC state to the state initialized with key\n    // to make it possible to run HMAC over the other data with the same\n    // key without creating a new instance.\n    reset() {\n        this.inner._restoreState(this.istate, this.inner.blockSize);\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\n        return this;\n    }\n    // Cleans HMAC state.\n    clean() {\n        for (let i = 0; i < this.istate.length; i++) {\n            this.ostate[i] = this.istate[i] = 0;\n        }\n        this.inner.clean();\n        this.outer.clean();\n    }\n    // Updates state with provided data.\n    update(data) {\n        this.inner.update(data);\n        return this;\n    }\n    // Finalizes HMAC and puts the result in out.\n    finish(out) {\n        if (this.outer.finished) {\n            this.outer.finish(out);\n        }\n        else {\n            this.inner.finish(out);\n            this.outer.update(out, this.digestLength).finish(out);\n        }\n        return this;\n    }\n    // Returns message authentication code.\n    digest() {\n        const out = new Uint8Array(this.digestLength);\n        this.finish(out);\n        return out;\n    }\n}\n// Returns SHA256 hash of data.\nfunction hash(data) {\n    const h = new Hash().update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n    const h = new HMAC(key).update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n    // Counter is a byte value: check if it overflowed.\n    const num = counter[0];\n    if (num === 0) {\n        throw new Error('hkdf: cannot expand more');\n    }\n    // Prepare HMAC instance for new data with old key.\n    hmac.reset();\n    // Hash in previous output if it was generated\n    // (i.e. counter is greater than 1).\n    if (num > 1) {\n        hmac.update(buffer);\n    }\n    // Hash in info if it exists.\n    if (info) {\n        hmac.update(info);\n    }\n    // Hash in the counter.\n    hmac.update(counter);\n    // Output result to buffer and clean HMAC instance.\n    hmac.finish(buffer);\n    // Increment counter inside typed array, this works properly.\n    counter[0]++;\n}\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nfunction hkdf(key, salt = hkdfSalt, info, length = 32) {\n    const counter = new Uint8Array([1]);\n    // HKDF-Extract uses salt as HMAC key, and key as data.\n    const okm = hmac(salt, key);\n    // Initialize HMAC for expanding with extracted key.\n    // Ensure no collisions with `hmac` function.\n    const hmac_ = new HMAC(okm);\n    // Allocate buffer.\n    const buffer = new Uint8Array(hmac_.digestLength);\n    let bufpos = buffer.length;\n    const out = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        if (bufpos === buffer.length) {\n            fillBuffer(buffer, hmac_, info, counter);\n            bufpos = 0;\n        }\n        out[i] = buffer[bufpos++];\n    }\n    hmac_.clean();\n    buffer.fill(0);\n    counter.fill(0);\n    return out;\n}\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n    const prf = new HMAC(password);\n    const len = prf.digestLength;\n    const ctr = new Uint8Array(4);\n    const t = new Uint8Array(len);\n    const u = new Uint8Array(len);\n    const dk = new Uint8Array(dkLen);\n    for (let i = 0; i * len < dkLen; i++) {\n        const c = i + 1;\n        ctr[0] = (c >>> 24) & 0xff;\n        ctr[1] = (c >>> 16) & 0xff;\n        ctr[2] = (c >>> 8) & 0xff;\n        ctr[3] = (c >>> 0) & 0xff;\n        prf.reset();\n        prf.update(salt);\n        prf.update(ctr);\n        prf.finish(u);\n        for (let j = 0; j < len; j++) {\n            t[j] = u[j];\n        }\n        for (let j = 2; j <= iterations; j++) {\n            prf.reset();\n            prf.update(u).finish(u);\n            for (let k = 0; k < len; k++) {\n                t[k] ^= u[k];\n            }\n        }\n        for (let j = 0; j < len && i * len + j < dkLen; j++) {\n            dk[i * len + j] = t[j];\n        }\n    }\n    for (let i = 0; i < len; i++) {\n        t[i] = u[i] = 0;\n    }\n    for (let i = 0; i < 4; i++) {\n        ctr[i] = 0;\n    }\n    prf.clean();\n    return dk;\n}\n\n/**\n * Abstraction for crypto algorithms\n */\nclass HashHandler {\n}\nfunction decodeUTF8(s) {\n    if (typeof s !== 'string')\n        throw new TypeError('expected string');\n    const d = s, b = new Uint8Array(d.length);\n    for (let i = 0; i < d.length; i++)\n        b[i] = d.charCodeAt(i);\n    return b;\n}\nfunction encodeUTF8(arr) {\n    const s = [];\n    for (let i = 0; i < arr.length; i++)\n        s.push(String.fromCharCode(arr[i]));\n    return s.join('');\n}\nclass DefaultHashHandler {\n    async calcHash(valueToHash, algorithm) {\n        // const encoder = new TextEncoder();\n        // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n        // const data = encoder.encode(valueToHash);\n        // const fhash = fsha256(valueToHash);\n        const candHash = encodeUTF8(hash(decodeUTF8(valueToHash)));\n        // const hashArray = (sha256 as any).array(valueToHash);\n        // // const hashString = this.toHashString(hashArray);\n        // const hashString = this.toHashString2(hashArray);\n        // console.debug('hash orig - cand', candHash, hashString);\n        // alert(1);\n        return candHash;\n    }\n    toHashString2(byteArray) {\n        let result = '';\n        for (const e of byteArray) {\n            result += String.fromCharCode(e);\n        }\n        return result;\n    }\n    toHashString(buffer) {\n        const byteArray = new Uint8Array(buffer);\n        let result = '';\n        for (const e of byteArray) {\n            result += String.fromCharCode(e);\n        }\n        return result;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultHashHandler, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultHashHandler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultHashHandler, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Service for logging in and logging out with\n * OIDC and OAuth2. Supports implicit flow and\n * password flow.\n */\nclass OAuthService extends AuthConfig {\n    constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\n        super();\n        this.ngZone = ngZone;\n        this.http = http;\n        this.config = config;\n        this.urlHelper = urlHelper;\n        this.logger = logger;\n        this.crypto = crypto;\n        this.dateTimeService = dateTimeService;\n        /**\n         * @internal\n         * Deprecated:  use property events instead\n         */\n        this.discoveryDocumentLoaded = false;\n        /**\n         * The received (passed around) state, when logging\n         * in with implicit flow.\n         */\n        this.state = '';\n        this.eventsSubject = new Subject();\n        this.discoveryDocumentLoadedSubject = new Subject();\n        this.grantTypesSupported = [];\n        this.inImplicitFlow = false;\n        this.saveNoncesInLocalStorage = false;\n        this.debug('angular-oauth2-oidc v10');\n        // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\n        this.document = document;\n        if (!config) {\n            config = {};\n        }\n        this.discoveryDocumentLoaded$ =\n            this.discoveryDocumentLoadedSubject.asObservable();\n        this.events = this.eventsSubject.asObservable();\n        if (tokenValidationHandler) {\n            this.tokenValidationHandler = tokenValidationHandler;\n        }\n        if (config) {\n            this.configure(config);\n        }\n        try {\n            if (storage) {\n                this.setStorage(storage);\n            }\n            else if (typeof sessionStorage !== 'undefined') {\n                this.setStorage(sessionStorage);\n            }\n        }\n        catch (e) {\n            console.error('No OAuthStorage provided and cannot access default (sessionStorage).' +\n                'Consider providing a custom OAuthStorage implementation in your module.', e);\n        }\n        // in IE, sessionStorage does not always survive a redirect\n        if (this.checkLocalStorageAccessable()) {\n            const ua = window?.navigator?.userAgent;\n            const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\n            if (msie) {\n                this.saveNoncesInLocalStorage = true;\n            }\n        }\n        this.setupRefreshTimer();\n    }\n    checkLocalStorageAccessable() {\n        if (typeof window === 'undefined')\n            return false;\n        const test = 'test';\n        try {\n            if (typeof window['localStorage'] === 'undefined')\n                return false;\n            localStorage.setItem(test, test);\n            localStorage.removeItem(test);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Use this method to configure the service\n     * @param config the configuration\n     */\n    configure(config) {\n        // For the sake of downward compatibility with\n        // original configuration API\n        Object.assign(this, new AuthConfig(), config);\n        this.config = Object.assign({}, new AuthConfig(), config);\n        if (this.sessionChecksEnabled) {\n            this.setupSessionCheck();\n        }\n        this.configChanged();\n    }\n    configChanged() {\n        this.setupRefreshTimer();\n    }\n    restartSessionChecksIfStillLoggedIn() {\n        if (this.hasValidIdToken()) {\n            this.initSessionCheck();\n        }\n    }\n    restartRefreshTimerIfStillLoggedIn() {\n        this.setupExpirationTimers();\n    }\n    setupSessionCheck() {\n        this.events\n            .pipe(filter((e) => e.type === 'token_received'))\n            .subscribe(() => {\n            this.initSessionCheck();\n        });\n    }\n    /**\n     * Will setup up silent refreshing for when the token is\n     * about to expire. When the user is logged out via this.logOut method, the\n     * silent refreshing will pause and not refresh the tokens until the user is\n     * logged back in via receiving a new token.\n     * @param params Additional parameter to pass\n     * @param listenTo Setup automatic refresh of a specific token type\n     */\n    setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\n        let shouldRunSilentRefresh = true;\n        this.clearAutomaticRefreshTimer();\n        this.automaticRefreshSubscription = this.events\n            .pipe(tap((e) => {\n            if (e.type === 'token_received') {\n                shouldRunSilentRefresh = true;\n            }\n            else if (e.type === 'logout') {\n                shouldRunSilentRefresh = false;\n            }\n        }), filter((e) => e.type === 'token_expires' &&\n            (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000))\n            .subscribe(() => {\n            if (shouldRunSilentRefresh) {\n                // this.silentRefresh(params, noPrompt).catch(_ => {\n                this.refreshInternal(params, noPrompt).catch(() => {\n                    this.debug('Automatic silent refresh did not work');\n                });\n            }\n        });\n        this.restartRefreshTimerIfStillLoggedIn();\n    }\n    refreshInternal(params, noPrompt) {\n        if (!this.useSilentRefresh && this.responseType === 'code') {\n            return this.refreshToken();\n        }\n        else {\n            return this.silentRefresh(params, noPrompt);\n        }\n    }\n    /**\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\n     * directly chains using the `then(...)` part of the promise to call\n     * the `tryLogin(...)` method.\n     *\n     * @param options LoginOptions to pass through to `tryLogin(...)`\n     */\n    loadDiscoveryDocumentAndTryLogin(options = null) {\n        return this.loadDiscoveryDocument().then(() => {\n            return this.tryLogin(options);\n        });\n    }\n    /**\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\n     * IdToken or no valid AccessToken.\n     *\n     * @param options LoginOptions to pass through to `tryLogin(...)`\n     */\n    loadDiscoveryDocumentAndLogin(options = null) {\n        options = options || {};\n        return this.loadDiscoveryDocumentAndTryLogin(options).then(() => {\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n                const state = typeof options.state === 'string' ? options.state : '';\n                this.initLoginFlow(state);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    debug(...args) {\n        if (this.showDebugInformation) {\n            this.logger.debug(...args);\n        }\n    }\n    validateUrlFromDiscoveryDocument(url) {\n        const errors = [];\n        const httpsCheck = this.validateUrlForHttps(url);\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\n        if (!httpsCheck) {\n            errors.push('https for all urls required. Also for urls received by discovery.');\n        }\n        if (!issuerCheck) {\n            errors.push('Every url in discovery document has to start with the issuer url.' +\n                'Also see property strictDiscoveryDocumentValidation.');\n        }\n        return errors;\n    }\n    validateUrlForHttps(url) {\n        if (!url) {\n            return true;\n        }\n        const lcUrl = url.toLowerCase();\n        if (this.requireHttps === false) {\n            return true;\n        }\n        if ((lcUrl.match(/^http:\\/\\/localhost($|[:/])/) ||\n            lcUrl.match(/^http:\\/\\/localhost($|[:/])/)) &&\n            this.requireHttps === 'remoteOnly') {\n            return true;\n        }\n        return lcUrl.startsWith('https://');\n    }\n    assertUrlNotNullAndCorrectProtocol(url, description) {\n        if (!url) {\n            throw new Error(`'${description}' should not be null`);\n        }\n        if (!this.validateUrlForHttps(url)) {\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n        }\n    }\n    validateUrlAgainstIssuer(url) {\n        if (!this.strictDiscoveryDocumentValidation) {\n            return true;\n        }\n        if (!url) {\n            return true;\n        }\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n    }\n    setupRefreshTimer() {\n        if (typeof window === 'undefined') {\n            this.debug('timer not supported on this plattform');\n            return;\n        }\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n            this.clearAccessTokenTimer();\n            this.clearIdTokenTimer();\n            this.setupExpirationTimers();\n        }\n        if (this.tokenReceivedSubscription)\n            this.tokenReceivedSubscription.unsubscribe();\n        this.tokenReceivedSubscription = this.events\n            .pipe(filter((e) => e.type === 'token_received'))\n            .subscribe(() => {\n            this.clearAccessTokenTimer();\n            this.clearIdTokenTimer();\n            this.setupExpirationTimers();\n        });\n    }\n    setupExpirationTimers() {\n        if (this.hasValidAccessToken()) {\n            this.setupAccessTokenTimer();\n        }\n        if (!this.disableIdTokenTimer && this.hasValidIdToken()) {\n            this.setupIdTokenTimer();\n        }\n    }\n    setupAccessTokenTimer() {\n        const expiration = this.getAccessTokenExpiration();\n        const storedAt = this.getAccessTokenStoredAt();\n        const timeout = this.calcTimeout(storedAt, expiration);\n        this.ngZone.runOutsideAngular(() => {\n            this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token'))\n                .pipe(delay(timeout))\n                .subscribe((e) => {\n                this.ngZone.run(() => {\n                    this.eventsSubject.next(e);\n                });\n            });\n        });\n    }\n    setupIdTokenTimer() {\n        const expiration = this.getIdTokenExpiration();\n        const storedAt = this.getIdTokenStoredAt();\n        const timeout = this.calcTimeout(storedAt, expiration);\n        this.ngZone.runOutsideAngular(() => {\n            this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token'))\n                .pipe(delay(timeout))\n                .subscribe((e) => {\n                this.ngZone.run(() => {\n                    this.eventsSubject.next(e);\n                });\n            });\n        });\n    }\n    /**\n     * Stops timers for automatic refresh.\n     * To restart it, call setupAutomaticSilentRefresh again.\n     */\n    stopAutomaticRefresh() {\n        this.clearAccessTokenTimer();\n        this.clearIdTokenTimer();\n        this.clearAutomaticRefreshTimer();\n    }\n    clearAccessTokenTimer() {\n        if (this.accessTokenTimeoutSubscription) {\n            this.accessTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n    clearIdTokenTimer() {\n        if (this.idTokenTimeoutSubscription) {\n            this.idTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n    clearAutomaticRefreshTimer() {\n        if (this.automaticRefreshSubscription) {\n            this.automaticRefreshSubscription.unsubscribe();\n        }\n    }\n    calcTimeout(storedAt, expiration) {\n        const now = this.dateTimeService.now();\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n        const duration = Math.max(0, delta);\n        const maxTimeoutValue = 2147483647;\n        return duration > maxTimeoutValue ? maxTimeoutValue : duration;\n    }\n    /**\n     * DEPRECATED. Use a provider for OAuthStorage instead:\n     *\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\n     * Sets a custom storage used to store the received\n     * tokens on client side. By default, the browser's\n     * sessionStorage is used.\n     * @ignore\n     *\n     * @param storage\n     */\n    setStorage(storage) {\n        this._storage = storage;\n        this.configChanged();\n    }\n    /**\n     * Loads the discovery document to configure most\n     * properties of this service. The url of the discovery\n     * document is infered from the issuer's url according\n     * to the OpenId Connect spec. To use another url you\n     * can pass it to to optional parameter fullUrl.\n     *\n     * @param fullUrl\n     */\n    loadDiscoveryDocument(fullUrl = null) {\n        return new Promise((resolve, reject) => {\n            if (!fullUrl) {\n                fullUrl = this.issuer || '';\n                if (!fullUrl.endsWith('/')) {\n                    fullUrl += '/';\n                }\n                fullUrl += '.well-known/openid-configuration';\n            }\n            if (!this.validateUrlForHttps(fullUrl)) {\n                reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n                return;\n            }\n            this.http.get(fullUrl).subscribe((doc) => {\n                if (!this.validateDiscoveryDocument(doc)) {\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n                    reject('discovery_document_validation_error');\n                    return;\n                }\n                this.loginUrl = doc.authorization_endpoint;\n                this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n                this.grantTypesSupported = doc.grant_types_supported;\n                this.issuer = doc.issuer;\n                this.tokenEndpoint = doc.token_endpoint;\n                this.userinfoEndpoint =\n                    doc.userinfo_endpoint || this.userinfoEndpoint;\n                this.jwksUri = doc.jwks_uri;\n                this.sessionCheckIFrameUrl =\n                    doc.check_session_iframe || this.sessionCheckIFrameUrl;\n                this.discoveryDocumentLoaded = true;\n                this.discoveryDocumentLoadedSubject.next(doc);\n                this.revocationEndpoint =\n                    doc.revocation_endpoint || this.revocationEndpoint;\n                if (this.sessionChecksEnabled) {\n                    this.restartSessionChecksIfStillLoggedIn();\n                }\n                this.loadJwks()\n                    .then((jwks) => {\n                    const result = {\n                        discoveryDocument: doc,\n                        jwks: jwks,\n                    };\n                    const event = new OAuthSuccessEvent('discovery_document_loaded', result);\n                    this.eventsSubject.next(event);\n                    resolve(event);\n                    return;\n                })\n                    .catch((err) => {\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n                    reject(err);\n                    return;\n                });\n            }, (err) => {\n                this.logger.error('error loading discovery document', err);\n                this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n                reject(err);\n            });\n        });\n    }\n    loadJwks() {\n        return new Promise((resolve, reject) => {\n            if (this.jwksUri) {\n                this.http.get(this.jwksUri).subscribe((jwks) => {\n                    this.jwks = jwks;\n                    // this.eventsSubject.next(\n                    //   new OAuthSuccessEvent('discovery_document_loaded')\n                    // );\n                    resolve(jwks);\n                }, (err) => {\n                    this.logger.error('error loading jwks', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n                    reject(err);\n                });\n            }\n            else {\n                resolve(null);\n            }\n        });\n    }\n    validateDiscoveryDocument(doc) {\n        let errors;\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n            this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\n            return false;\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n        if (errors.length > 0) {\n            this.logger.error('error validating authorization_endpoint in discovery document', errors);\n            return false;\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n        if (errors.length > 0) {\n            this.logger.error('error validating end_session_endpoint in discovery document', errors);\n            return false;\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n        if (errors.length > 0) {\n            this.logger.error('error validating token_endpoint in discovery document', errors);\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\n        if (errors.length > 0) {\n            this.logger.error('error validating revocation_endpoint in discovery document', errors);\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n        if (errors.length > 0) {\n            this.logger.error('error validating userinfo_endpoint in discovery document', errors);\n            return false;\n        }\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n        if (errors.length > 0) {\n            this.logger.error('error validating jwks_uri in discovery document', errors);\n            return false;\n        }\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n            this.logger.warn('sessionChecksEnabled is activated but discovery document' +\n                ' does not contain a check_session_iframe field');\n        }\n        return true;\n    }\n    /**\n     * Uses password flow to exchange userName and password for an\n     * access_token. After receiving the access_token, this method\n     * uses it to query the userinfo endpoint in order to get information\n     * about the user in question.\n     *\n     * When using this, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take place that make this operation\n     * fail.\n     *\n     * @param userName\n     * @param password\n     * @param headers Optional additional http-headers.\n     */\n    fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\n    }\n    /**\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\n     *\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take place that make this operation fail.\n     */\n    loadUserProfile() {\n        if (!this.hasValidAccessToken()) {\n            throw new Error('Can not load User Profile without access_token');\n        }\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n            throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        }\n        return new Promise((resolve, reject) => {\n            const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\n            this.http\n                .get(this.userinfoEndpoint, {\n                headers,\n                observe: 'response',\n                responseType: 'text',\n            })\n                .subscribe((response) => {\n                this.debug('userinfo received', JSON.stringify(response));\n                if (response.headers\n                    .get('content-type')\n                    .startsWith('application/json')) {\n                    let info = JSON.parse(response.body);\n                    const existingClaims = this.getIdentityClaims() || {};\n                    if (!this.skipSubjectCheck) {\n                        if (this.oidc &&\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\n                            const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' +\n                                'of the user that has logged in with oidc.\\n' +\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\n                            reject(err);\n                            return;\n                        }\n                    }\n                    info = Object.assign({}, existingClaims, info);\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n                    resolve({ info });\n                }\n                else {\n                    this.debug('userinfo is not JSON, treating it as JWE/JWS');\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n                    resolve(JSON.parse(response.body));\n                }\n            }, (err) => {\n                this.logger.error('error loading user info', err);\n                this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n                reject(err);\n            });\n        });\n    }\n    /**\n     * Uses password flow to exchange userName and password for an access_token.\n     * @param userName\n     * @param password\n     * @param headers Optional additional http-headers.\n     */\n    fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\n        const parameters = {\n            username: userName,\n            password: password,\n        };\n        return this.fetchTokenUsingGrant('password', parameters, headers);\n    }\n    /**\n     * Uses a custom grant type to retrieve tokens.\n     * @param grantType Grant type.\n     * @param parameters Parameters to pass.\n     * @param headers Optional additional HTTP headers.\n     */\n    fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n        /**\n         * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n         * serialize and parse URL parameter keys and values.\n         *\n         * @stable\n         */\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\n            .set('grant_type', grantType)\n            .set('scope', this.scope);\n        if (this.useHttpBasicAuth) {\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n            headers = headers.set('Authorization', 'Basic ' + header);\n        }\n        if (!this.useHttpBasicAuth) {\n            params = params.set('client_id', this.clientId);\n        }\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n            params = params.set('client_secret', this.dummyClientSecret);\n        }\n        if (this.customQueryParams) {\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                params = params.set(key, this.customQueryParams[key]);\n            }\n        }\n        // set explicit parameters last, to allow overwriting\n        for (const key of Object.keys(parameters)) {\n            params = params.set(key, parameters[key]);\n        }\n        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\n        return new Promise((resolve, reject) => {\n            this.http\n                .post(this.tokenEndpoint, params, { headers })\n                .subscribe((tokenResponse) => {\n                this.debug('tokenResponse', tokenResponse);\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n                if (this.oidc && tokenResponse.id_token) {\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then((result) => {\n                        this.storeIdToken(result);\n                        resolve(tokenResponse);\n                    });\n                }\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                resolve(tokenResponse);\n            }, (err) => {\n                this.logger.error('Error performing ${grantType} flow', err);\n                this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n                reject(err);\n            });\n        });\n    }\n    /**\n     * Refreshes the token using a refresh_token.\n     * This does not work for implicit flow, b/c\n     * there is no refresh_token in this flow.\n     * A solution for this is provided by the\n     * method silentRefresh.\n     */\n    refreshToken() {\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n        return new Promise((resolve, reject) => {\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\n                .set('grant_type', 'refresh_token')\n                .set('scope', this.scope)\n                .set('refresh_token', this._storage.getItem('refresh_token'));\n            let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n            if (this.useHttpBasicAuth) {\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n                headers = headers.set('Authorization', 'Basic ' + header);\n            }\n            if (!this.useHttpBasicAuth) {\n                params = params.set('client_id', this.clientId);\n            }\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n                params = params.set('client_secret', this.dummyClientSecret);\n            }\n            if (this.customQueryParams) {\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    params = params.set(key, this.customQueryParams[key]);\n                }\n            }\n            this.http\n                .post(this.tokenEndpoint, params, { headers })\n                .pipe(switchMap((tokenResponse) => {\n                if (this.oidc && tokenResponse.id_token) {\n                    return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap((result) => this.storeIdToken(result)), map(() => tokenResponse));\n                }\n                else {\n                    return of(tokenResponse);\n                }\n            }))\n                .subscribe((tokenResponse) => {\n                this.debug('refresh tokenResponse', tokenResponse);\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n                resolve(tokenResponse);\n            }, (err) => {\n                this.logger.error('Error refreshing token', err);\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n                reject(err);\n            });\n        });\n    }\n    removeSilentRefreshEventListener() {\n        if (this.silentRefreshPostMessageEventListener) {\n            window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n            this.silentRefreshPostMessageEventListener = null;\n        }\n    }\n    setupSilentRefreshEventListener() {\n        this.removeSilentRefreshEventListener();\n        this.silentRefreshPostMessageEventListener = (e) => {\n            const message = this.processMessageEventMessage(e);\n            if (this.checkOrigin && e.origin !== location.origin) {\n                console.error('wrong origin requested silent refresh!');\n            }\n            this.tryLogin({\n                customHashFragment: message,\n                preventClearHashAfterLogin: true,\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri,\n            }).catch((err) => this.debug('tryLogin during silent refresh failed', err));\n        };\n        window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n    }\n    /**\n     * Performs a silent refresh for implicit flow.\n     * Use this method to get new tokens when/before\n     * the existing tokens expire.\n     */\n    silentRefresh(params = {}, noPrompt = true) {\n        const claims = this.getIdentityClaims() || {};\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n            params['id_token_hint'] = this.getIdToken();\n        }\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        }\n        if (typeof this.document === 'undefined') {\n            throw new Error('silent refresh is not supported on this platform');\n        }\n        const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\n        if (existingIframe) {\n            this.document.body.removeChild(existingIframe);\n        }\n        this.silentRefreshSubject = claims['sub'];\n        const iframe = this.document.createElement('iframe');\n        iframe.id = this.silentRefreshIFrameName;\n        this.setupSilentRefreshEventListener();\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then((url) => {\n            iframe.setAttribute('src', url);\n            if (!this.silentRefreshShowIFrame) {\n                iframe.style['display'] = 'none';\n            }\n            this.document.body.appendChild(iframe);\n        });\n        const errors = this.events.pipe(filter((e) => e instanceof OAuthErrorEvent), first());\n        const success = this.events.pipe(filter((e) => e.type === 'token_received'), first());\n        const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\n        return race([errors, success, timeout])\n            .pipe(map((e) => {\n            if (e instanceof OAuthErrorEvent) {\n                if (e.type === 'silent_refresh_timeout') {\n                    this.eventsSubject.next(e);\n                }\n                else {\n                    e = new OAuthErrorEvent('silent_refresh_error', e);\n                    this.eventsSubject.next(e);\n                }\n                throw e;\n            }\n            else if (e.type === 'token_received') {\n                e = new OAuthSuccessEvent('silently_refreshed');\n                this.eventsSubject.next(e);\n            }\n            return e;\n        }))\n            .toPromise();\n    }\n    /**\n     * This method exists for backwards compatibility.\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\n     * and implicit flows.\n     */\n    initImplicitFlowInPopup(options) {\n        return this.initLoginFlowInPopup(options);\n    }\n    initLoginFlowInPopup(options) {\n        options = options || {};\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n            display: 'popup',\n        }).then((url) => {\n            return new Promise((resolve, reject) => {\n                /**\n                 * Error handling section\n                 */\n                const checkForPopupClosedInterval = 500;\n                let windowRef = null;\n                // If we got no window reference we open a window\n                // else we are using the window already opened\n                if (!options.windowRef) {\n                    windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\n                }\n                else if (options.windowRef && !options.windowRef.closed) {\n                    windowRef = options.windowRef;\n                    windowRef.location.href = url;\n                }\n                let checkForPopupClosedTimer;\n                const tryLogin = (hash) => {\n                    this.tryLogin({\n                        customHashFragment: hash,\n                        preventClearHashAfterLogin: true,\n                        customRedirectUri: this.silentRefreshRedirectUri,\n                    }).then(() => {\n                        cleanup();\n                        resolve(true);\n                    }, (err) => {\n                        cleanup();\n                        reject(err);\n                    });\n                };\n                const checkForPopupClosed = () => {\n                    if (!windowRef || windowRef.closed) {\n                        cleanup();\n                        reject(new OAuthErrorEvent('popup_closed', {}));\n                    }\n                };\n                if (!windowRef) {\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\n                }\n                else {\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n                }\n                const cleanup = () => {\n                    window.clearInterval(checkForPopupClosedTimer);\n                    window.removeEventListener('storage', storageListener);\n                    window.removeEventListener('message', listener);\n                    if (windowRef !== null) {\n                        windowRef.close();\n                    }\n                    windowRef = null;\n                };\n                const listener = (e) => {\n                    const message = this.processMessageEventMessage(e);\n                    if (message && message !== null) {\n                        window.removeEventListener('storage', storageListener);\n                        tryLogin(message);\n                    }\n                    else {\n                        console.log('false event firing');\n                    }\n                };\n                const storageListener = (event) => {\n                    if (event.key === 'auth_hash') {\n                        window.removeEventListener('message', listener);\n                        tryLogin(event.newValue);\n                    }\n                };\n                window.addEventListener('message', listener);\n                window.addEventListener('storage', storageListener);\n            });\n        });\n    }\n    calculatePopupFeatures(options) {\n        // Specify an static height and width and calculate centered position\n        const height = options.height || 470;\n        const width = options.width || 500;\n        const left = window.screenLeft + (window.outerWidth - width) / 2;\n        const top = window.screenTop + (window.outerHeight - height) / 2;\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n    }\n    processMessageEventMessage(e) {\n        let expectedPrefix = '#';\n        if (this.silentRefreshMessagePrefix) {\n            expectedPrefix += this.silentRefreshMessagePrefix;\n        }\n        if (!e || !e.data || typeof e.data !== 'string') {\n            return;\n        }\n        const prefixedMessage = e.data;\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\n            return;\n        }\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\n    }\n    canPerformSessionCheck() {\n        if (!this.sessionChecksEnabled) {\n            return false;\n        }\n        if (!this.sessionCheckIFrameUrl) {\n            console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\n            return false;\n        }\n        const sessionState = this.getSessionState();\n        if (!sessionState) {\n            console.warn('sessionChecksEnabled is activated but there is no session_state');\n            return false;\n        }\n        if (typeof this.document === 'undefined') {\n            return false;\n        }\n        return true;\n    }\n    setupSessionCheckEventListener() {\n        this.removeSessionCheckEventListener();\n        this.sessionCheckEventListener = (e) => {\n            const origin = e.origin.toLowerCase();\n            const issuer = this.issuer.toLowerCase();\n            this.debug('sessionCheckEventListener');\n            if (!issuer.startsWith(origin)) {\n                this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\n                return;\n            }\n            // only run in Angular zone if it is 'changed' or 'error'\n            switch (e.data) {\n                case 'unchanged':\n                    this.ngZone.run(() => {\n                        this.handleSessionUnchanged();\n                    });\n                    break;\n                case 'changed':\n                    this.ngZone.run(() => {\n                        this.handleSessionChange();\n                    });\n                    break;\n                case 'error':\n                    this.ngZone.run(() => {\n                        this.handleSessionError();\n                    });\n                    break;\n            }\n            this.debug('got info from session check inframe', e);\n        };\n        // prevent Angular from refreshing the view on every message (runs in intervals)\n        this.ngZone.runOutsideAngular(() => {\n            window.addEventListener('message', this.sessionCheckEventListener);\n        });\n    }\n    handleSessionUnchanged() {\n        this.debug('session check', 'session unchanged');\n        this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\n    }\n    handleSessionChange() {\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n        this.stopSessionCheckTimer();\n        if (!this.useSilentRefresh && this.responseType === 'code') {\n            this.refreshToken()\n                .then(() => {\n                this.debug('token refresh after session change worked');\n            })\n                .catch(() => {\n                this.debug('token refresh did not work after session changed');\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n                this.logOut(true);\n            });\n        }\n        else if (this.silentRefreshRedirectUri) {\n            this.silentRefresh().catch(() => this.debug('silent refresh failed after session changed'));\n            this.waitForSilentRefreshAfterSessionChange();\n        }\n        else {\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n            this.logOut(true);\n        }\n    }\n    waitForSilentRefreshAfterSessionChange() {\n        this.events\n            .pipe(filter((e) => e.type === 'silently_refreshed' ||\n            e.type === 'silent_refresh_timeout' ||\n            e.type === 'silent_refresh_error'), first())\n            .subscribe((e) => {\n            if (e.type !== 'silently_refreshed') {\n                this.debug('silent refresh did not work after session changed');\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n                this.logOut(true);\n            }\n        });\n    }\n    handleSessionError() {\n        this.stopSessionCheckTimer();\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n    }\n    removeSessionCheckEventListener() {\n        if (this.sessionCheckEventListener) {\n            window.removeEventListener('message', this.sessionCheckEventListener);\n            this.sessionCheckEventListener = null;\n        }\n    }\n    initSessionCheck() {\n        if (!this.canPerformSessionCheck()) {\n            return;\n        }\n        const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\n        if (existingIframe) {\n            this.document.body.removeChild(existingIframe);\n        }\n        const iframe = this.document.createElement('iframe');\n        iframe.id = this.sessionCheckIFrameName;\n        this.setupSessionCheckEventListener();\n        const url = this.sessionCheckIFrameUrl;\n        iframe.setAttribute('src', url);\n        iframe.style.display = 'none';\n        this.document.body.appendChild(iframe);\n        this.startSessionCheckTimer();\n    }\n    startSessionCheckTimer() {\n        this.stopSessionCheckTimer();\n        this.ngZone.runOutsideAngular(() => {\n            this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\n        });\n    }\n    stopSessionCheckTimer() {\n        if (this.sessionCheckTimer) {\n            clearInterval(this.sessionCheckTimer);\n            this.sessionCheckTimer = null;\n        }\n    }\n    checkSession() {\n        const iframe = this.document.getElementById(this.sessionCheckIFrameName);\n        if (!iframe) {\n            this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\n        }\n        const sessionState = this.getSessionState();\n        if (!sessionState) {\n            this.stopSessionCheckTimer();\n        }\n        const message = this.clientId + ' ' + sessionState;\n        iframe.contentWindow.postMessage(message, this.issuer);\n    }\n    async createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\n        const that = this; // eslint-disable-line @typescript-eslint/no-this-alias\n        let redirectUri;\n        if (customRedirectUri) {\n            redirectUri = customRedirectUri;\n        }\n        else {\n            redirectUri = this.redirectUri;\n        }\n        const nonce = await this.createAndSaveNonce();\n        if (state) {\n            state =\n                nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\n        }\n        else {\n            state = nonce;\n        }\n        if (!this.requestAccessToken && !this.oidc) {\n            throw new Error('Either requestAccessToken or oidc or both must be true');\n        }\n        if (this.config.responseType) {\n            this.responseType = this.config.responseType;\n        }\n        else {\n            if (this.oidc && this.requestAccessToken) {\n                this.responseType = 'id_token token';\n            }\n            else if (this.oidc && !this.requestAccessToken) {\n                this.responseType = 'id_token';\n            }\n            else {\n                this.responseType = 'token';\n            }\n        }\n        const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n        let scope = that.scope;\n        if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n            scope = 'openid ' + scope;\n        }\n        let url = that.loginUrl +\n            seperationChar +\n            'response_type=' +\n            encodeURIComponent(that.responseType) +\n            '&client_id=' +\n            encodeURIComponent(that.clientId) +\n            '&state=' +\n            encodeURIComponent(state) +\n            '&redirect_uri=' +\n            encodeURIComponent(redirectUri) +\n            '&scope=' +\n            encodeURIComponent(scope);\n        if (this.responseType.includes('code') && !this.disablePKCE) {\n            const [challenge, verifier] = await this.createChallangeVerifierPairForPKCE();\n            if (this.saveNoncesInLocalStorage &&\n                typeof window['localStorage'] !== 'undefined') {\n                localStorage.setItem('PKCE_verifier', verifier);\n            }\n            else {\n                this._storage.setItem('PKCE_verifier', verifier);\n            }\n            url += '&code_challenge=' + challenge;\n            url += '&code_challenge_method=S256';\n        }\n        if (loginHint) {\n            url += '&login_hint=' + encodeURIComponent(loginHint);\n        }\n        if (that.resource) {\n            url += '&resource=' + encodeURIComponent(that.resource);\n        }\n        if (that.oidc) {\n            url += '&nonce=' + encodeURIComponent(nonce);\n        }\n        if (noPrompt) {\n            url += '&prompt=none';\n        }\n        for (const key of Object.keys(params)) {\n            url +=\n                '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }\n        if (this.customQueryParams) {\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                url +=\n                    '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\n            }\n        }\n        return url;\n    }\n    initImplicitFlowInternal(additionalState = '', params = '') {\n        if (this.inImplicitFlow) {\n            return;\n        }\n        this.inImplicitFlow = true;\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        }\n        let addParams = {};\n        let loginHint = null;\n        if (typeof params === 'string') {\n            loginHint = params;\n        }\n        else if (typeof params === 'object') {\n            addParams = params;\n        }\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\n            .then(this.config.openUri)\n            .catch((error) => {\n            console.error('Error in initImplicitFlow', error);\n            this.inImplicitFlow = false;\n        });\n    }\n    /**\n     * Starts the implicit flow and redirects to user to\n     * the auth servers' login url.\n     *\n     * @param additionalState Optional state that is passed around.\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\n     * @param params Hash with additional parameter. If it is a string, it is used for the\n     *               parameter loginHint (for the sake of compatibility with former versions)\n     */\n    initImplicitFlow(additionalState = '', params = '') {\n        if (this.loginUrl !== '') {\n            this.initImplicitFlowInternal(additionalState, params);\n        }\n        else {\n            this.events\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\n                .subscribe(() => this.initImplicitFlowInternal(additionalState, params));\n        }\n    }\n    /**\n     * Reset current implicit flow\n     *\n     * @description This method allows resetting the current implict flow in order to be initialized again.\n     */\n    resetImplicitFlow() {\n        this.inImplicitFlow = false;\n    }\n    callOnTokenReceivedIfExists(options) {\n        const that = this; // eslint-disable-line @typescript-eslint/no-this-alias\n        if (options.onTokenReceived) {\n            const tokenParams = {\n                idClaims: that.getIdentityClaims(),\n                idToken: that.getIdToken(),\n                accessToken: that.getAccessToken(),\n                state: that.state,\n            };\n            options.onTokenReceived(tokenParams);\n        }\n    }\n    storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\n        this._storage.setItem('access_token', accessToken);\n        if (grantedScopes && !Array.isArray(grantedScopes)) {\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\n        }\n        else if (grantedScopes && Array.isArray(grantedScopes)) {\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\n        }\n        this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\n        if (expiresIn) {\n            const expiresInMilliSeconds = expiresIn * 1000;\n            const now = this.dateTimeService.new();\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\n            this._storage.setItem('expires_at', '' + expiresAt);\n        }\n        if (refreshToken) {\n            this._storage.setItem('refresh_token', refreshToken);\n        }\n        if (customParameters) {\n            customParameters.forEach((value, key) => {\n                this._storage.setItem(key, value);\n            });\n        }\n    }\n    /**\n     * Delegates to tryLoginImplicitFlow for the sake of competability\n     * @param options Optional options.\n     */\n    tryLogin(options = null) {\n        if (this.config.responseType === 'code') {\n            return this.tryLoginCodeFlow(options).then(() => true);\n        }\n        else {\n            return this.tryLoginImplicitFlow(options);\n        }\n    }\n    parseQueryString(queryString) {\n        if (!queryString || queryString.length === 0) {\n            return {};\n        }\n        if (queryString.charAt(0) === '?') {\n            queryString = queryString.substr(1);\n        }\n        return this.urlHelper.parseQueryString(queryString);\n    }\n    async tryLoginCodeFlow(options = null) {\n        options = options || {};\n        const querySource = options.customHashFragment\n            ? options.customHashFragment.substring(1)\n            : window.location.search;\n        const parts = this.getCodePartsFromUrl(querySource);\n        const code = parts['code'];\n        const state = parts['state'];\n        const sessionState = parts['session_state'];\n        if (!options.preventClearHashAfterLogin) {\n            const href = location.origin +\n                location.pathname +\n                location.search\n                    .replace(/code=[^&$]*/, '')\n                    .replace(/scope=[^&$]*/, '')\n                    .replace(/state=[^&$]*/, '')\n                    .replace(/session_state=[^&$]*/, '')\n                    .replace(/^\\?&/, '?')\n                    .replace(/&$/, '')\n                    .replace(/^\\?$/, '')\n                    .replace(/&+/g, '&')\n                    .replace(/\\?&/, '?')\n                    .replace(/\\?$/, '') +\n                location.hash;\n            history.replaceState(null, window.name, href);\n        }\n        const [nonceInState, userState] = this.parseState(state);\n        this.state = userState;\n        if (parts['error']) {\n            this.debug('error trying to login');\n            this.handleLoginError(options, parts);\n            const err = new OAuthErrorEvent('code_error', {}, parts);\n            this.eventsSubject.next(err);\n            return Promise.reject(err);\n        }\n        if (!options.disableNonceCheck) {\n            if (!nonceInState) {\n                this.saveRequestedRoute();\n                return Promise.resolve();\n            }\n            if (!options.disableOAuth2StateCheck) {\n                const success = this.validateNonce(nonceInState);\n                if (!success) {\n                    const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n                    this.eventsSubject.next(event);\n                    return Promise.reject(event);\n                }\n            }\n        }\n        this.storeSessionState(sessionState);\n        if (code) {\n            await this.getTokenFromCode(code, options);\n            this.restoreRequestedRoute();\n            return Promise.resolve();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    saveRequestedRoute() {\n        if (this.config.preserveRequestedRoute) {\n            this._storage.setItem('requested_route', window.location.pathname + window.location.search);\n        }\n    }\n    restoreRequestedRoute() {\n        const requestedRoute = this._storage.getItem('requested_route');\n        if (requestedRoute) {\n            history.replaceState(null, '', window.location.origin + requestedRoute);\n        }\n    }\n    /**\n     * Retrieve the returned auth code from the redirect uri that has been called.\n     * If required also check hash, as we could use hash location strategy.\n     */\n    getCodePartsFromUrl(queryString) {\n        if (!queryString || queryString.length === 0) {\n            return this.urlHelper.getHashFragmentParams();\n        }\n        // normalize query string\n        if (queryString.charAt(0) === '?') {\n            queryString = queryString.substr(1);\n        }\n        return this.urlHelper.parseQueryString(queryString);\n    }\n    /**\n     * Get token using an intermediate code. Works for the Authorization Code flow.\n     */\n    getTokenFromCode(code, options) {\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\n            .set('grant_type', 'authorization_code')\n            .set('code', code)\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\n        if (!this.disablePKCE) {\n            let PKCEVerifier;\n            if (this.saveNoncesInLocalStorage &&\n                typeof window['localStorage'] !== 'undefined') {\n                PKCEVerifier = localStorage.getItem('PKCE_verifier');\n            }\n            else {\n                PKCEVerifier = this._storage.getItem('PKCE_verifier');\n            }\n            if (!PKCEVerifier) {\n                console.warn('No PKCE verifier found in oauth storage!');\n            }\n            else {\n                params = params.set('code_verifier', PKCEVerifier);\n            }\n        }\n        return this.fetchAndProcessToken(params, options);\n    }\n    fetchAndProcessToken(params, options) {\n        options = options || {};\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n        if (this.useHttpBasicAuth) {\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n            headers = headers.set('Authorization', 'Basic ' + header);\n        }\n        if (!this.useHttpBasicAuth) {\n            params = params.set('client_id', this.clientId);\n        }\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n            params = params.set('client_secret', this.dummyClientSecret);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.customQueryParams) {\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    params = params.set(key, this.customQueryParams[key]);\n                }\n            }\n            this.http\n                .post(this.tokenEndpoint, params, { headers })\n                .subscribe((tokenResponse) => {\n                this.debug('refresh tokenResponse', tokenResponse);\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n                if (this.oidc && tokenResponse.id_token) {\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck)\n                        .then((result) => {\n                        this.storeIdToken(result);\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n                        resolve(tokenResponse);\n                    })\n                        .catch((reason) => {\n                        this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n                        console.error('Error validating tokens');\n                        console.error(reason);\n                        reject(reason);\n                    });\n                }\n                else {\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n                    resolve(tokenResponse);\n                }\n            }, (err) => {\n                console.error('Error getting token', err);\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n                reject(err);\n            });\n        });\n    }\n    /**\n     * Checks whether there are tokens in the hash fragment\n     * as a result of the implicit flow. These tokens are\n     * parsed, validated and used to sign the user in to the\n     * current client.\n     *\n     * @param options Optional options.\n     */\n    tryLoginImplicitFlow(options = null) {\n        options = options || {};\n        let parts;\n        if (options.customHashFragment) {\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n        }\n        else {\n            parts = this.urlHelper.getHashFragmentParams();\n        }\n        this.debug('parsed url', parts);\n        const state = parts['state'];\n        const [nonceInState, userState] = this.parseState(state);\n        this.state = userState;\n        if (parts['error']) {\n            this.debug('error trying to login');\n            this.handleLoginError(options, parts);\n            const err = new OAuthErrorEvent('token_error', {}, parts);\n            this.eventsSubject.next(err);\n            return Promise.reject(err);\n        }\n        const accessToken = parts['access_token'];\n        const idToken = parts['id_token'];\n        const sessionState = parts['session_state'];\n        const grantedScopes = parts['scope'];\n        if (!this.requestAccessToken && !this.oidc) {\n            return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\n        }\n        if (this.requestAccessToken && !accessToken) {\n            return Promise.resolve(false);\n        }\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n            return Promise.resolve(false);\n        }\n        if (this.oidc && !idToken) {\n            return Promise.resolve(false);\n        }\n        if (this.sessionChecksEnabled && !sessionState) {\n            this.logger.warn('session checks (Session Status Change Notification) ' +\n                'were activated in the configuration but the id_token ' +\n                'does not contain a session_state claim');\n        }\n        if (this.requestAccessToken && !options.disableNonceCheck) {\n            const success = this.validateNonce(nonceInState);\n            if (!success) {\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n                this.eventsSubject.next(event);\n                return Promise.reject(event);\n            }\n        }\n        if (this.requestAccessToken) {\n            this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\n        }\n        if (!this.oidc) {\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n                this.clearLocationHash();\n            }\n            this.callOnTokenReceivedIfExists(options);\n            return Promise.resolve(true);\n        }\n        return this.processIdToken(idToken, accessToken, options.disableNonceCheck)\n            .then((result) => {\n            if (options.validationHandler) {\n                return options\n                    .validationHandler({\n                    accessToken: accessToken,\n                    idClaims: result.idTokenClaims,\n                    idToken: result.idToken,\n                    state: state,\n                })\n                    .then(() => result);\n            }\n            return result;\n        })\n            .then((result) => {\n            this.storeIdToken(result);\n            this.storeSessionState(sessionState);\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n                this.clearLocationHash();\n            }\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            this.callOnTokenReceivedIfExists(options);\n            this.inImplicitFlow = false;\n            return true;\n        })\n            .catch((reason) => {\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n            this.logger.error('Error validating tokens');\n            this.logger.error(reason);\n            return Promise.reject(reason);\n        });\n    }\n    parseState(state) {\n        let nonce = state;\n        let userState = '';\n        if (state) {\n            const idx = state.indexOf(this.config.nonceStateSeparator);\n            if (idx > -1) {\n                nonce = state.substr(0, idx);\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\n            }\n        }\n        return [nonce, userState];\n    }\n    validateNonce(nonceInState) {\n        let savedNonce;\n        if (this.saveNoncesInLocalStorage &&\n            typeof window['localStorage'] !== 'undefined') {\n            savedNonce = localStorage.getItem('nonce');\n        }\n        else {\n            savedNonce = this._storage.getItem('nonce');\n        }\n        if (savedNonce !== nonceInState) {\n            const err = 'Validating access_token failed, wrong state/nonce.';\n            console.error(err, savedNonce, nonceInState);\n            return false;\n        }\n        return true;\n    }\n    storeIdToken(idToken) {\n        this._storage.setItem('id_token', idToken.idToken);\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n        this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\n    }\n    storeSessionState(sessionState) {\n        this._storage.setItem('session_state', sessionState);\n    }\n    getSessionState() {\n        return this._storage.getItem('session_state');\n    }\n    handleLoginError(options, parts) {\n        if (options.onLoginError) {\n            options.onLoginError(parts);\n        }\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n            this.clearLocationHash();\n        }\n    }\n    getClockSkewInMsec(defaultSkewMsc = 600000) {\n        if (!this.clockSkewInSec && this.clockSkewInSec !== 0) {\n            return defaultSkewMsc;\n        }\n        return this.clockSkewInSec * 1000;\n    }\n    /**\n     * @ignore\n     */\n    processIdToken(idToken, accessToken, skipNonceCheck = false) {\n        const tokenParts = idToken.split('.');\n        const headerBase64 = this.padBase64(tokenParts[0]);\n        const headerJson = b64DecodeUnicode(headerBase64);\n        const header = JSON.parse(headerJson);\n        const claimsBase64 = this.padBase64(tokenParts[1]);\n        const claimsJson = b64DecodeUnicode(claimsBase64);\n        const claims = JSON.parse(claimsJson);\n        let savedNonce;\n        if (this.saveNoncesInLocalStorage &&\n            typeof window['localStorage'] !== 'undefined') {\n            savedNonce = localStorage.getItem('nonce');\n        }\n        else {\n            savedNonce = this._storage.getItem('nonce');\n        }\n        if (Array.isArray(claims.aud)) {\n            if (claims.aud.every((v) => v !== this.clientId)) {\n                const err = 'Wrong audience: ' + claims.aud.join(',');\n                this.logger.warn(err);\n                return Promise.reject(err);\n            }\n        }\n        else {\n            if (claims.aud !== this.clientId) {\n                const err = 'Wrong audience: ' + claims.aud;\n                this.logger.warn(err);\n                return Promise.reject(err);\n            }\n        }\n        if (!claims.sub) {\n            const err = 'No sub claim in id_token';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        /* For now, we only check whether the sub against\n         * silentRefreshSubject when sessionChecksEnabled is on\n         * We will reconsider in a later version to do this\n         * in every other case too.\n         */\n        if (this.sessionChecksEnabled &&\n            this.silentRefreshSubject &&\n            this.silentRefreshSubject !== claims['sub']) {\n            const err = 'After refreshing, we got an id_token for another user (sub). ' +\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        if (!claims.iat) {\n            const err = 'No iat claim in id_token';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n            const err = 'Wrong issuer: ' + claims.iss;\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\n            const err = 'Wrong nonce: ' + claims.nonce;\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        // at_hash is not applicable to authorization code flow\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n        if (Object.prototype.hasOwnProperty.call(this, 'responseType') &&\n            (this.responseType === 'code' || this.responseType === 'id_token')) {\n            this.disableAtHashCheck = true;\n        }\n        if (!this.disableAtHashCheck &&\n            this.requestAccessToken &&\n            !claims['at_hash']) {\n            const err = 'An at_hash is needed!';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        const now = this.dateTimeService.now();\n        const issuedAtMSec = claims.iat * 1000;\n        const expiresAtMSec = claims.exp * 1000;\n        const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\n        if (issuedAtMSec - clockSkewInMSec >= now ||\n            expiresAtMSec + clockSkewInMSec - this.decreaseExpirationBySec <= now) {\n            const err = 'Token has expired';\n            console.error(err);\n            console.error({\n                now: now,\n                issuedAtMSec: issuedAtMSec,\n                expiresAtMSec: expiresAtMSec,\n            });\n            return Promise.reject(err);\n        }\n        const validationParams = {\n            accessToken: accessToken,\n            idToken: idToken,\n            jwks: this.jwks,\n            idTokenClaims: claims,\n            idTokenHeader: header,\n            loadKeys: () => this.loadJwks(),\n        };\n        if (this.disableAtHashCheck) {\n            return this.checkSignature(validationParams).then(() => {\n                const result = {\n                    idToken: idToken,\n                    idTokenClaims: claims,\n                    idTokenClaimsJson: claimsJson,\n                    idTokenHeader: header,\n                    idTokenHeaderJson: headerJson,\n                    idTokenExpiresAt: expiresAtMSec,\n                };\n                return result;\n            });\n        }\n        return this.checkAtHash(validationParams).then((atHashValid) => {\n            if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\n                const err = 'Wrong at_hash';\n                this.logger.warn(err);\n                return Promise.reject(err);\n            }\n            return this.checkSignature(validationParams).then(() => {\n                const atHashCheckEnabled = !this.disableAtHashCheck;\n                const result = {\n                    idToken: idToken,\n                    idTokenClaims: claims,\n                    idTokenClaimsJson: claimsJson,\n                    idTokenHeader: header,\n                    idTokenHeaderJson: headerJson,\n                    idTokenExpiresAt: expiresAtMSec,\n                };\n                if (atHashCheckEnabled) {\n                    return this.checkAtHash(validationParams).then((atHashValid) => {\n                        if (this.requestAccessToken && !atHashValid) {\n                            const err = 'Wrong at_hash';\n                            this.logger.warn(err);\n                            return Promise.reject(err);\n                        }\n                        else {\n                            return result;\n                        }\n                    });\n                }\n                else {\n                    return result;\n                }\n            });\n        });\n    }\n    /**\n     * Returns the received claims about the user.\n     */\n    getIdentityClaims() {\n        const claims = this._storage.getItem('id_token_claims_obj');\n        if (!claims) {\n            return null;\n        }\n        return JSON.parse(claims);\n    }\n    /**\n     * Returns the granted scopes from the server.\n     */\n    getGrantedScopes() {\n        const scopes = this._storage.getItem('granted_scopes');\n        if (!scopes) {\n            return null;\n        }\n        return JSON.parse(scopes);\n    }\n    /**\n     * Returns the current id_token.\n     */\n    getIdToken() {\n        return this._storage ? this._storage.getItem('id_token') : null;\n    }\n    padBase64(base64data) {\n        while (base64data.length % 4 !== 0) {\n            base64data += '=';\n        }\n        return base64data;\n    }\n    /**\n     * Returns the current access_token.\n     */\n    getAccessToken() {\n        return this._storage ? this._storage.getItem('access_token') : null;\n    }\n    getRefreshToken() {\n        return this._storage ? this._storage.getItem('refresh_token') : null;\n    }\n    /**\n     * Returns the expiration date of the access_token\n     * as milliseconds since 1970.\n     */\n    getAccessTokenExpiration() {\n        if (!this._storage.getItem('expires_at')) {\n            return null;\n        }\n        return parseInt(this._storage.getItem('expires_at'), 10);\n    }\n    getAccessTokenStoredAt() {\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n    }\n    getIdTokenStoredAt() {\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n    }\n    /**\n     * Returns the expiration date of the id_token\n     * as milliseconds since 1970.\n     */\n    getIdTokenExpiration() {\n        if (!this._storage.getItem('id_token_expires_at')) {\n            return null;\n        }\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n    }\n    /**\n     * Checkes, whether there is a valid access_token.\n     */\n    hasValidAccessToken() {\n        if (this.getAccessToken()) {\n            const expiresAt = this._storage.getItem('expires_at');\n            const now = this.dateTimeService.new();\n            if (expiresAt &&\n                parseInt(expiresAt, 10) - this.decreaseExpirationBySec <\n                    now.getTime() - this.getClockSkewInMsec()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Checks whether there is a valid id_token.\n     */\n    hasValidIdToken() {\n        if (this.getIdToken()) {\n            const expiresAt = this._storage.getItem('id_token_expires_at');\n            const now = this.dateTimeService.new();\n            if (expiresAt &&\n                parseInt(expiresAt, 10) - this.decreaseExpirationBySec <\n                    now.getTime() - this.getClockSkewInMsec()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\n     */\n    getCustomTokenResponseProperty(requestedProperty) {\n        return this._storage &&\n            this.config.customTokenParameters &&\n            this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\n            this._storage.getItem(requestedProperty) !== null\n            ? JSON.parse(this._storage.getItem(requestedProperty))\n            : null;\n    }\n    /**\n     * Returns the auth-header that can be used\n     * to transmit the access_token to a service\n     */\n    authorizationHeader() {\n        return 'Bearer ' + this.getAccessToken();\n    }\n    logOut(customParameters = {}, state = '') {\n        let noRedirectToLogoutUrl = false;\n        if (typeof customParameters === 'boolean') {\n            noRedirectToLogoutUrl = customParameters;\n            customParameters = {};\n        }\n        const id_token = this.getIdToken();\n        this._storage.removeItem('access_token');\n        this._storage.removeItem('id_token');\n        this._storage.removeItem('refresh_token');\n        if (this.saveNoncesInLocalStorage) {\n            localStorage.removeItem('nonce');\n            localStorage.removeItem('PKCE_verifier');\n        }\n        else {\n            this._storage.removeItem('nonce');\n            this._storage.removeItem('PKCE_verifier');\n        }\n        this._storage.removeItem('expires_at');\n        this._storage.removeItem('id_token_claims_obj');\n        this._storage.removeItem('id_token_expires_at');\n        this._storage.removeItem('id_token_stored_at');\n        this._storage.removeItem('access_token_stored_at');\n        this._storage.removeItem('granted_scopes');\n        this._storage.removeItem('session_state');\n        if (this.config.customTokenParameters) {\n            this.config.customTokenParameters.forEach((customParam) => this._storage.removeItem(customParam));\n        }\n        this.silentRefreshSubject = null;\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\n        if (!this.logoutUrl) {\n            return;\n        }\n        if (noRedirectToLogoutUrl) {\n            return;\n        }\n        // if (!id_token && !this.postLogoutRedirectUri) {\n        //   return;\n        // }\n        let logoutUrl;\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\n            throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        }\n        // For backward compatibility\n        if (this.logoutUrl.indexOf('{{') > -1) {\n            logoutUrl = this.logoutUrl\n                .replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token))\n                .replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\n        }\n        else {\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\n            if (id_token) {\n                params = params.set('id_token_hint', id_token);\n            }\n            const postLogoutUrl = this.postLogoutRedirectUri ||\n                (this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri) ||\n                '';\n            if (postLogoutUrl) {\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\n                if (state) {\n                    params = params.set('state', state);\n                }\n            }\n            for (const key in customParameters) {\n                params = params.set(key, customParameters[key]);\n            }\n            logoutUrl =\n                this.logoutUrl +\n                    (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\n                    params.toString();\n        }\n        this.config.openUri(logoutUrl);\n    }\n    /**\n     * @ignore\n     */\n    createAndSaveNonce() {\n        const that = this; // eslint-disable-line @typescript-eslint/no-this-alias\n        return this.createNonce().then(function (nonce) {\n            // Use localStorage for nonce if possible\n            // localStorage is the only storage who survives a\n            // redirect in ALL browsers (also IE)\n            // Otherwiese we'd force teams who have to support\n            // IE into using localStorage for everything\n            if (that.saveNoncesInLocalStorage &&\n                typeof window['localStorage'] !== 'undefined') {\n                localStorage.setItem('nonce', nonce);\n            }\n            else {\n                that._storage.setItem('nonce', nonce);\n            }\n            return nonce;\n        });\n    }\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        this.clearAccessTokenTimer();\n        this.clearIdTokenTimer();\n        this.removeSilentRefreshEventListener();\n        const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\n        if (silentRefreshFrame) {\n            silentRefreshFrame.remove();\n        }\n        this.stopSessionCheckTimer();\n        this.removeSessionCheckEventListener();\n        const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\n        if (sessionCheckFrame) {\n            sessionCheckFrame.remove();\n        }\n    }\n    createNonce() {\n        return new Promise((resolve) => {\n            if (this.rngUrl) {\n                throw new Error('createNonce with rng-web-api has not been implemented so far');\n            }\n            /*\n             * This alphabet is from:\n             * https://tools.ietf.org/html/rfc7636#section-4.1\n             *\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\n             */\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n            let size = 45;\n            let id = '';\n            const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\n            if (crypto) {\n                let bytes = new Uint8Array(size);\n                crypto.getRandomValues(bytes);\n                // Needed for IE\n                if (!bytes.map) {\n                    bytes.map = Array.prototype.map;\n                }\n                bytes = bytes.map((x) => unreserved.charCodeAt(x % unreserved.length));\n                id = String.fromCharCode.apply(null, bytes);\n            }\n            else {\n                while (0 < size--) {\n                    id += unreserved[(Math.random() * unreserved.length) | 0];\n                }\n            }\n            resolve(base64UrlEncode(id));\n        });\n    }\n    async checkAtHash(params) {\n        if (!this.tokenValidationHandler) {\n            this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\n            return true;\n        }\n        return this.tokenValidationHandler.validateAtHash(params);\n    }\n    checkSignature(params) {\n        if (!this.tokenValidationHandler) {\n            this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\n            return Promise.resolve(null);\n        }\n        return this.tokenValidationHandler.validateSignature(params);\n    }\n    /**\n     * Start the implicit flow or the code flow,\n     * depending on your configuration.\n     */\n    initLoginFlow(additionalState = '', params = {}) {\n        if (this.responseType === 'code') {\n            return this.initCodeFlow(additionalState, params);\n        }\n        else {\n            return this.initImplicitFlow(additionalState, params);\n        }\n    }\n    /**\n     * Starts the authorization code flow and redirects to user to\n     * the auth servers login url.\n     */\n    initCodeFlow(additionalState = '', params = {}) {\n        if (this.loginUrl !== '') {\n            this.initCodeFlowInternal(additionalState, params);\n        }\n        else {\n            this.events\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\n                .subscribe(() => this.initCodeFlowInternal(additionalState, params));\n        }\n    }\n    initCodeFlowInternal(additionalState = '', params = {}) {\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        }\n        let addParams = {};\n        let loginHint = null;\n        if (typeof params === 'string') {\n            loginHint = params;\n        }\n        else if (typeof params === 'object') {\n            addParams = params;\n        }\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\n            .then(this.config.openUri)\n            .catch((error) => {\n            console.error('Error in initAuthorizationCodeFlow');\n            console.error(error);\n        });\n    }\n    async createChallangeVerifierPairForPKCE() {\n        if (!this.crypto) {\n            throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n        }\n        const verifier = await this.createNonce();\n        const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\n        const challenge = base64UrlEncode(challengeRaw);\n        return [challenge, verifier];\n    }\n    extractRecognizedCustomParameters(tokenResponse) {\n        const foundParameters = new Map();\n        if (!this.config.customTokenParameters) {\n            return foundParameters;\n        }\n        this.config.customTokenParameters.forEach((recognizedParameter) => {\n            if (tokenResponse[recognizedParameter]) {\n                foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n            }\n        });\n        return foundParameters;\n    }\n    /**\n     * Revokes the auth token to secure the vulnarability\n     * of the token issued allowing the authorization server to clean\n     * up any security credentials associated with the authorization\n     */\n    revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\n        const revokeEndpoint = this.revocationEndpoint;\n        const accessToken = this.getAccessToken();\n        const refreshToken = this.getRefreshToken();\n        if (!accessToken) {\n            return Promise.resolve();\n        }\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n        if (this.useHttpBasicAuth) {\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n            headers = headers.set('Authorization', 'Basic ' + header);\n        }\n        if (!this.useHttpBasicAuth) {\n            params = params.set('client_id', this.clientId);\n        }\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n            params = params.set('client_secret', this.dummyClientSecret);\n        }\n        if (this.customQueryParams) {\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                params = params.set(key, this.customQueryParams[key]);\n            }\n        }\n        return new Promise((resolve, reject) => {\n            let revokeAccessToken;\n            let revokeRefreshToken;\n            if (accessToken) {\n                const revokationParams = params\n                    .set('token', accessToken)\n                    .set('token_type_hint', 'access_token');\n                revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, { headers });\n            }\n            else {\n                revokeAccessToken = of(null);\n            }\n            if (refreshToken) {\n                const revokationParams = params\n                    .set('token', refreshToken)\n                    .set('token_type_hint', 'refresh_token');\n                revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, { headers });\n            }\n            else {\n                revokeRefreshToken = of(null);\n            }\n            if (ignoreCorsIssues) {\n                revokeAccessToken = revokeAccessToken.pipe(catchError((err) => {\n                    if (err.status === 0) {\n                        return of(null);\n                    }\n                    return throwError(err);\n                }));\n                revokeRefreshToken = revokeRefreshToken.pipe(catchError((err) => {\n                    if (err.status === 0) {\n                        return of(null);\n                    }\n                    return throwError(err);\n                }));\n            }\n            combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe((res) => {\n                this.logOut(customParameters);\n                resolve(res);\n                this.logger.info('Token successfully revoked');\n            }, (err) => {\n                this.logger.error('Error revoking token', err);\n                this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\n                reject(err);\n            });\n        });\n    }\n    /**\n     * Clear location.hash if it's present\n     */\n    clearLocationHash() {\n        // Checking for empty hash is necessary for Firefox\n        // as setting an empty hash to an empty string adds # to the URL\n        if (location.hash != '') {\n            location.hash = '';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthService, deps: [{ token: i0.NgZone }, { token: i1.HttpClient }, { token: OAuthStorage, optional: true }, { token: ValidationHandler, optional: true }, { token: AuthConfig, optional: true }, { token: UrlHelperService }, { token: OAuthLogger }, { token: HashHandler, optional: true }, { token: DOCUMENT }, { token: DateTimeProvider }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i1.HttpClient }, { type: OAuthStorage, decorators: [{\n                    type: Optional\n                }] }, { type: ValidationHandler, decorators: [{\n                    type: Optional\n                }] }, { type: AuthConfig, decorators: [{\n                    type: Optional\n                }] }, { type: UrlHelperService }, { type: OAuthLogger }, { type: HashHandler, decorators: [{\n                    type: Optional\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: DateTimeProvider }] });\n\nclass OAuthResourceServerErrorHandler {\n}\nclass OAuthNoopResourceServerErrorHandler {\n    handleError(err) {\n        return throwError(err);\n    }\n}\n\nclass DefaultOAuthInterceptor {\n    constructor(oAuthService, errorHandler, moduleConfig) {\n        this.oAuthService = oAuthService;\n        this.errorHandler = errorHandler;\n        this.moduleConfig = moduleConfig;\n    }\n    checkUrl(url) {\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\n        }\n        if (this.moduleConfig.resourceServer.allowedUrls) {\n            return !!this.moduleConfig.resourceServer.allowedUrls.find((u) => url.toLowerCase().startsWith(u.toLowerCase()));\n        }\n        return true;\n    }\n    intercept(req, next) {\n        const url = req.url.toLowerCase();\n        if (!this.moduleConfig ||\n            !this.moduleConfig.resourceServer ||\n            !this.checkUrl(url)) {\n            return next.handle(req);\n        }\n        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n        if (!sendAccessToken) {\n            return next\n                .handle(req)\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\n        }\n        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((token) => !!token)), this.oAuthService.events.pipe(filter((e) => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError(() => of(null)), // timeout is not an error\n        map(() => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap((token) => {\n            if (token) {\n                const header = 'Bearer ' + token;\n                const headers = req.headers.set('Authorization', header);\n                req = req.clone({ headers });\n            }\n            return next\n                .handle(req)\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultOAuthInterceptor, deps: [{ token: OAuthService }, { token: OAuthResourceServerErrorHandler }, { token: OAuthModuleConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultOAuthInterceptor }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: DefaultOAuthInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{\n                    type: Optional\n                }] }] });\n\nfunction createDefaultLogger() {\n    return console;\n}\nfunction createDefaultStorage() {\n    return typeof sessionStorage !== 'undefined'\n        ? sessionStorage\n        : new MemoryStorage();\n}\n\nfunction provideOAuthClient(config = null, validationHandlerClass = NullValidationHandler) {\n    return makeEnvironmentProviders([\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        { provide: ValidationHandler, useClass: validationHandlerClass },\n        { provide: HashHandler, useClass: DefaultHashHandler },\n        {\n            provide: OAuthResourceServerErrorHandler,\n            useClass: OAuthNoopResourceServerErrorHandler,\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: DefaultOAuthInterceptor,\n            multi: true,\n        },\n        { provide: DateTimeProvider, useClass: SystemDateTimeProvider },\n    ]);\n}\n\nclass OAuthModule {\n    static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\n        return {\n            ngModule: OAuthModule,\n            providers: [provideOAuthClient(config, validationHandlerClass)],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthModule, imports: [CommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.7\", ngImport: i0, type: OAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [],\n                    exports: [],\n                }]\n        }] });\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n/**\n * This is just a dummy of the JwksValidationHandler\n * telling the users that the real one has been moved\n * to an library of its own, namely angular-oauth2-oidc-utils\n */\nclass JwksValidationHandler extends NullValidationHandler {\n    constructor() {\n        super();\n        console.error(err);\n    }\n}\n\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler, provideOAuthClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}