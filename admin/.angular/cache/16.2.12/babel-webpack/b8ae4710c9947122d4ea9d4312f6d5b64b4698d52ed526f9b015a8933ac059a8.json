{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nclass CreateMasterAdminComponent {\n  static #_ = this.ɵfac = function CreateMasterAdminComponent_Factory(t) {\n    return new (t || CreateMasterAdminComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateMasterAdminComponent,\n    selectors: [[\"app-create-master-admin\"]],\n    decls: 2,\n    vars: 0,\n    template: function CreateMasterAdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"create-master-admin works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { CreateMasterAdminComponent };\nlet AccountSetupComponent = class AccountSetupComponent {\n  constructor(_router, _formBuilder, _validationService, _renderer, _toastService, _geoInfoService, _sharedDataBetweenStepService) {\n    this._router = _router;\n    this._formBuilder = _formBuilder;\n    this._validationService = _validationService;\n    this._renderer = _renderer;\n    this._toastService = _toastService;\n    this._geoInfoService = _geoInfoService;\n    this._sharedDataBetweenStepService = _sharedDataBetweenStepService;\n    this.user = null;\n    this.countries = [];\n    this.states = [];\n    this.filteredStates = [];\n    this.load_data = false;\n    this.load_btn = false;\n    this.accountSetupForm = this._formBuilder.group({\n      inputUserName: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(20), Validators.pattern(\"^[a-zA-Z0-9]+$\")]],\n      inputFirstName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputLastName: [\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(25), Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")]],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      inputPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      inputConfirmPassword: [\"\", [Validators.required]],\n      inputCountryAddress: [\"\", [Validators.required]],\n      inputStateAddress: [\"\", [Validators.required]],\n      inputRole: [{\n        value: 'MasterAdministrator',\n        disabled: true\n      }, [Validators.required]]\n    }, {\n      validator: this._validationService.mustMatch('inputPassword', 'inputConfirmPassword')\n    });\n  }\n  ngOnInit() {}\n  goToNextStep() {\n    if (this.accountSetupForm.valid) {\n      this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n      this._router.navigate(['/initial-config/step2']);\n    } else {\n      Object.keys(this.accountSetupForm.controls).forEach(field => {\n        const control = this.accountSetupForm.get(field);\n        control?.markAsTouched({\n          onlySelf: true\n        });\n      });\n      this._toastService.showToast('error', 'Please fill all required fields');\n    }\n  }\n};\nAccountSetupComponent = __decorate([Component({\n  selector: 'app-account-setup',\n  templateUrl: './account-setup.component.html',\n  styleUrls: ['./account-setup.component.css']\n})], AccountSetupComponent);\nexport { AccountSetupComponent };","map":{"version":3,"names":["Component","Validators","CreateMasterAdminComponent","_","_2","selectors","decls","vars","template","CreateMasterAdminComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AccountSetupComponent","constructor","_router","_formBuilder","_validationService","_renderer","_toastService","_geoInfoService","_sharedDataBetweenStepService","user","countries","states","filteredStates","load_data","load_btn","accountSetupForm","group","inputUserName","required","minLength","maxLength","pattern","inputFirstName","inputLastName","inputEmailAddress","email","inputPassword","inputConfirmPassword","inputCountryAddress","inputStateAddress","inputRole","value","disabled","validator","mustMatch","ngOnInit","goToNextStep","valid","setStepData","navigate","Object","keys","controls","forEach","field","control","get","markAsTouched","onlySelf","showToast","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\create-master-admin\\create-master-admin.component.ts","C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\modules\\initial-config\\create-master-admin\\create-master-admin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-create-master-admin',\n  templateUrl: './create-master-admin.component.html',\n  styleUrls: ['./create-master-admin.component.css']\n})\nexport class CreateMasterAdminComponent {\n\n}\n\n\n// account-setup.component.ts\nimport { Component, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ValidationService } from 'src/app/core/services/validation.service';\nimport { SharedDataBetweenStepService } from 'src/app/core/services/shared-data-between-step.service';\nimport { GeoInfoService } from 'src/app/shared/services/geo-info.service';\nimport { ToastService } from 'src/app/shared/services/toast.service';\nimport { User } from 'src/app/core/models/user.interface';\nimport { Country } from 'src/app/core/models/country.model';\nimport { State } from 'src/app/core/models/state.model';\nimport { forkJoin } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-account-setup',\n  templateUrl: './account-setup.component.html',\n  styleUrls: ['./account-setup.component.css']\n})\nexport class AccountSetupComponent {\n  accountSetupForm!: FormGroup;\n  user: User | null = null;\n  countries: Country[] = [];\n  states: State[] = [];\n  filteredStates: State[] = [];\n  load_data: boolean = false;\n  load_btn: boolean = false;\n\n  constructor(\n    private _router: Router,\n    private _formBuilder: FormBuilder,\n    private _validationService: ValidationService,\n    private _renderer: Renderer2,\n    private _toastService: ToastService,\n    private _geoInfoService: GeoInfoService,\n    private _sharedDataBetweenStepService: SharedDataBetweenStepService,\n  ) {\n    this.accountSetupForm = this._formBuilder.group({\n      inputUserName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(20),\n          Validators.pattern(\"^[a-zA-Z0-9]+$\")\n        ]\n      ],\n      inputFirstName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputLastName: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(25),\n          Validators.pattern(\"^[a-zA-Z0-9\\\\sñÑ]+$\")\n        ]\n      ],\n      inputEmailAddress: [\"\", [Validators.required, Validators.email]],\n      inputPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      inputConfirmPassword: [\"\", [Validators.required]],\n      inputCountryAddress: [\"\", [Validators.required]],\n      inputStateAddress: [\"\", [Validators.required]],\n      inputRole: [{ value: 'MasterAdministrator', disabled: true }, [Validators.required]],\n\n    }, { validator: this._validationService.mustMatch('inputPassword', 'inputConfirmPassword') });\n  }\n\n  ngOnInit(): void {\n  }\n\n  goToNextStep() {\n    if (this.accountSetupForm.valid) {\n      this._sharedDataBetweenStepService.setStepData('accountSetup', this.accountSetupForm.value);\n      this._router.navigate(['/initial-config/step2']);\n    } else {\n      Object.keys(this.accountSetupForm.controls).forEach(field => {\n        const control = this.accountSetupForm.get(field);\n        control?.markAsTouched({ onlySelf: true });\n      });\n      this._toastService.showToast('error', 'Please fill all required fields');\n    }\n  }\n\n}\n","<p>create-master-admin works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}