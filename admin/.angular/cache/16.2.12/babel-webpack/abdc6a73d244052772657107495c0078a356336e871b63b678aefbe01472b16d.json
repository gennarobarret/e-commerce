{"ast":null,"code":"import { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nclass AuthGoogleService {\n  constructor(oauthService) {\n    this.oauthService = oauthService;\n    this.initLogin();\n  }\n  initLogin() {\n    const config = {\n      issuer: 'https://accounts.google.com',\n      strictDiscoveryDocumentValidation: false,\n      clientId: '432250515709-ld0vbouvoouvr4dacp9pokac31rnetbs.apps.googleusercontent.com',\n      redirectUri: window.location.origin + '/auth/login',\n      scope: 'openid profile email'\n    };\n    this.oauthService.configure(config);\n    this.oauthService.setupAutomaticSilentRefresh();\n    this.oauthService.loadDiscoveryDocumentAndTryLogin();\n  }\n  loginGoogle() {\n    this.oauthService.initLoginFlow();\n  }\n  logout() {\n    this.oauthService.logOut();\n  }\n  getProfile() {\n    return this.oauthService.getIdentityClaims();\n  }\n  isAuthenticated() {\n    return this.oauthService.hasValidAccessToken();\n  }\n  onLoginSuccess(callback) {\n    this.oauthService.events.pipe(filter(e => e.type === 'token_received')).subscribe(() => {\n      if (this.isAuthenticated()) {\n        callback();\n      }\n    });\n  }\n  static #_ = this.ɵfac = function AuthGoogleService_Factory(t) {\n    return new (t || AuthGoogleService)(i0.ɵɵinject(i1.OAuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGoogleService,\n    factory: AuthGoogleService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AuthGoogleService };","map":{"version":3,"names":["filter","AuthGoogleService","constructor","oauthService","initLogin","config","issuer","strictDiscoveryDocumentValidation","clientId","redirectUri","window","location","origin","scope","configure","setupAutomaticSilentRefresh","loadDiscoveryDocumentAndTryLogin","loginGoogle","initLoginFlow","logout","logOut","getProfile","getIdentityClaims","isAuthenticated","hasValidAccessToken","onLoginSuccess","callback","events","pipe","e","type","subscribe","_","i0","ɵɵinject","i1","OAuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Javier\\Documents\\proyectos\\e-commerce\\admin\\src\\app\\core\\services\\auth-google.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AuthConfig, OAuthService } from 'angular-oauth2-oidc';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGoogleService {\r\n\r\n  constructor(private oauthService: OAuthService) {\r\n    this.initLogin();\r\n  }\r\n\r\n  initLogin() {\r\n    const config: AuthConfig = {\r\n      issuer: 'https://accounts.google.com',\r\n      strictDiscoveryDocumentValidation: false,\r\n      clientId: '432250515709-ld0vbouvoouvr4dacp9pokac31rnetbs.apps.googleusercontent.com',\r\n      redirectUri: window.location.origin + '/auth/login',\r\n      scope: 'openid profile email',\r\n    };\r\n\r\n    this.oauthService.configure(config);\r\n    this.oauthService.setupAutomaticSilentRefresh();\r\n    this.oauthService.loadDiscoveryDocumentAndTryLogin();\r\n  }\r\n\r\n  loginGoogle() {\r\n    this.oauthService.initLoginFlow();\r\n  }\r\n\r\n  logout() {\r\n    this.oauthService.logOut();\r\n  }\r\n\r\n  getProfile() {\r\n    return this.oauthService.getIdentityClaims();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.oauthService.hasValidAccessToken();\r\n  }\r\n\r\n  onLoginSuccess(callback: () => void) {\r\n    this.oauthService.events.pipe(\r\n      filter(e => e.type === 'token_received')\r\n    ).subscribe(() => {\r\n      if (this.isAuthenticated()) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,gBAAgB;;;AAEvC,MAGaC,iBAAiB;EAE5BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAC9B,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,MAAMC,MAAM,GAAe;MACzBC,MAAM,EAAE,6BAA6B;MACrCC,iCAAiC,EAAE,KAAK;MACxCC,QAAQ,EAAE,0EAA0E;MACpFC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,aAAa;MACnDC,KAAK,EAAE;KACR;IAED,IAAI,CAACV,YAAY,CAACW,SAAS,CAACT,MAAM,CAAC;IACnC,IAAI,CAACF,YAAY,CAACY,2BAA2B,EAAE;IAC/C,IAAI,CAACZ,YAAY,CAACa,gCAAgC,EAAE;EACtD;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACd,YAAY,CAACe,aAAa,EAAE;EACnC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAChB,YAAY,CAACiB,MAAM,EAAE;EAC5B;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAAClB,YAAY,CAACmB,iBAAiB,EAAE;EAC9C;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACpB,YAAY,CAACqB,mBAAmB,EAAE;EAChD;EAEAC,cAAcA,CAACC,QAAoB;IACjC,IAAI,CAACvB,YAAY,CAACwB,MAAM,CAACC,IAAI,CAC3B5B,MAAM,CAAC6B,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,gBAAgB,CAAC,CACzC,CAACC,SAAS,CAAC,MAAK;MACf,IAAI,IAAI,CAACR,eAAe,EAAE,EAAE;QAC1BG,QAAQ,EAAE;;IAEd,CAAC,CAAC;EACJ;EAAC,QAAAM,CAAA,G;qBA5CU/B,iBAAiB,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpC,iBAAiB;IAAAqC,OAAA,EAAjBrC,iBAAiB,CAAAsC,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPvC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}